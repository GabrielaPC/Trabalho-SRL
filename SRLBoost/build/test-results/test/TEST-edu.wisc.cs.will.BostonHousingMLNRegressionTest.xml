<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="edu.wisc.cs.will.BostonHousingMLNRegressionTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2022-10-20T17:09:59" hostname="Ubuntu" time="11.236">
  <properties/>
  <testcase name="testMLNBostonHousingLearnInfer()" classname="edu.wisc.cs.will.BostonHousingMLNRegressionTest" time="11.236"/>
  <system-out><![CDATA[
% Calling SETUP.

% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

Resetting the LazyGroundNthArgumentClauseIndex.

% Calling ILPouterLoop from createRegressionOuterLooper.

% getInputArgWithDefaultValue: args=[data/boston_housing/train/train_pos.txt, data/boston_housing/train/train_neg.txt, data/boston_housing/train/train_bk.txt, data/boston_housing/train/train_facts.txt]
%  for N=0: args[N]=data/boston_housing/train/train_pos.txt

% getInputArgWithDefaultValue: args=[data/boston_housing/train/train_pos.txt, data/boston_housing/train/train_neg.txt, data/boston_housing/train/train_bk.txt, data/boston_housing/train/train_facts.txt]
%  for N=1: args[N]=data/boston_housing/train/train_neg.txt

% getInputArgWithDefaultValue: args=[data/boston_housing/train/train_pos.txt, data/boston_housing/train/train_neg.txt, data/boston_housing/train/train_bk.txt, data/boston_housing/train/train_facts.txt]
%  for N=2: args[N]=data/boston_housing/train/train_bk.txt

% getInputArgWithDefaultValue: args=[data/boston_housing/train/train_pos.txt, data/boston_housing/train/train_neg.txt, data/boston_housing/train/train_bk.txt, data/boston_housing/train/train_facts.txt]
%  for N=3: args[N]=data/boston_housing/train/train_facts.txt

% Welcome to the WILL ILP/SRL systems.

% Reading background theory from dir: null

% Switching to VarIndicator = uppercase.

***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****

% [ LazyGroundClauseIndex ]  Building full index for mode/1 with 1 assertions.

%  Read the facts.
%  Have read 5.668 facts.

%  LearnOneClause initialized.

% The outer looper has been created.

% Initializing the ILP inner looper.
% Have read 436 examples from 'data/boston_housing/train' [data/boston_housing/train/train*].

% NEW target:                 medv(A)
%  targetPred:                medv/1
%  targetArgTypes:            signature = [const], types = [+id]
%  targets:                   [medv(A)]
%  targetPredicates:          [medv/1]
%  targetArgSpecs:            [[A[+id]]]
%  variablesInTargets:        [[A]]

% Started collecting constants

% Collecting the types of constants.

%   *** WARNING ***  Constant '1' is already marked as being of types = [varsrim];
%          type = 'varindus' may be added if not already known.
%  PredicateName = 'indus', from 'indus(id100, 1)',
%  which has types = [signature = [const, const], types = [+id, #varindus]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '0' is already marked as being of types = [varzn];
%          type = 'varchas' may be added if not already known.
%  PredicateName = 'chas', from 'chas(id1, 0)',
%  which has types = [signature = [const, const], types = [+id, #varchas]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '2' is already marked as being of types = [varsrim, varindus];
%          type = 'varnox' may be added if not already known.
%  PredicateName = 'nox', from 'nox(id100, 2)',
%  which has types = [signature = [const, const], types = [+id, #varnox]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '3' is already marked as being of types = [varsrim, varindus, varnox];
%          type = 'varrm' may be added if not already known.
%  PredicateName = 'rm', from 'rm(id100, 3)',
%  which has types = [signature = [const, const], types = [+id, #varrm]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '1' is already marked as being of types = [varsrim, varindus, varchas, varnox, varrm];
%          type = 'varage' may be added if not already known.
%  PredicateName = 'age', from 'age(id100, 1)',
%  which has types = [signature = [const, const], types = [+id, #varage]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '4' is already marked as being of types = [varsrim, varindus, varnox, varrm, varage];
%          type = 'vardis' may be added if not already known.
%  PredicateName = 'dis', from 'dis(id100, 4)',
%  which has types = [signature = [const, const], types = [+id, #vardis]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '2' is already marked as being of types = [varsrim, varindus, varnox, varrm, varage, vardis];
%          type = 'varrad' may be added if not already known.
%  PredicateName = 'rad', from 'rad(id100, 2)',
%  which has types = [signature = [const, const], types = [+id, #varrad]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '2' is already marked as being of types = [varsrim, varindus, varnox, varrm, varage, vardis, varrad];
%          type = 'varptrat' may be added if not already known.
%  PredicateName = 'ptratio', from 'ptratio(id100, 2)',
%  which has types = [signature = [const, const], types = [+id, #varptrat]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '1' is already marked as being of types = [varsrim, varindus, varchas, varnox, varrm, varage, vardis, varrad, varptrat];
%          type = 'varb' may be added if not already known.
%  PredicateName = 'b', from 'b(id100, 1)',
%  which has types = [signature = [const, const], types = [+id, #varb]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '1' is already marked as being of types = [varsrim, varindus, varchas, varnox, varrm, varage, vardis, varrad, varptrat, varb];
%          type = 'varlstat' may be added if not already known.
%  PredicateName = 'lstat', from 'lstat(id100, 1)',
%  which has types = [signature = [const, const], types = [+id, #varlstat]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

% Looking at the training examples to see if any types of new constants can be inferred.
% Time to collect constants: 31 milliseconds

% Read 436 pos examples and 0 neg examples.
% Time to init learnOneClause: 49 milliseconds
% Old dirnull
Setting model dir

% Have 436 'raw' positive examples and kept 436.
% Have 0 'raw' negative examples and kept 0.
% No neg ex for medv

% processing backup's for medv
%  POS EX = 436
%  NEG EX = 0

% Memory usage by WILLSetup (just counts # targets?):
%  |backupPosExamples| = 1
%  |backupNegExamples| = 1
%  |predicatesAsFacts| = 0
%  |addedToFactBase|   = 0
data/boston_housing/train/models/
% Learning 10 trees in this iteration for medv

% Learn model for: medv
% Kept 436 of the 436 positive examples.
% Kept 0 of the 0 negative examples.
% Have prepared facts.
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:90.91398930014282
Set score:0.0025
% Dataset size: 436
Computing probabilities
prob time:0 seconds
No hidden examples for : medv
Time to build dataset: 1 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:90.91398930014384
Set score:0.0025

% Have these 8 positive seeds: 1 30 58 79 136 202 235 322

% LearnOneClause Parameters:
%   Targets (1):
%    medv(+id)
%  Modes (13):
%    crim(+id, #varsrim),
%    zn(+id, #varzn),
%    indus(+id, #varindus),
%    chas(+id, #varchas),
%    nox(+id, #varnox),
%    rm(+id, #varrm),
%    age(+id, #varage),
%    dis(+id, #vardis),
%    rad(+id, #varrad),
%    tax(+id, #vartax),
%    ptratio(+id, #varptrat),
%    b(+id, #varb),
%    lstat(+id, #varlstat)

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]  score = -Infinity
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for crim/2.
% [ LazyGroundClauseIndex ]  Building full index for crim/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for zn/2.
% [ LazyGroundClauseIndex ]  Building full index for zn/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for indus/2.
% [ LazyGroundClauseIndex ]  Building full index for indus/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for chas/2.
% [ LazyGroundClauseIndex ]  Building full index for chas/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for nox/2.
% [ LazyGroundClauseIndex ]  Building full index for nox/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for rm/2.
% [ LazyGroundClauseIndex ]  Building full index for rm/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for age/2.
% [ LazyGroundClauseIndex ]  Building full index for age/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for dis/2.
% [ LazyGroundClauseIndex ]  Building full index for dis/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for rad/2.
% [ LazyGroundClauseIndex ]  Building full index for rad/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for tax/2.
% [ LazyGroundClauseIndex ]  Building full index for tax/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for ptratio/2.
% [ LazyGroundClauseIndex ]  Building full index for ptratio/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for b/2.
% [ LazyGroundClauseIndex ]  Building full index for b/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for lstat/2.
% [ LazyGroundClauseIndex ]  Building full index for lstat/2 with 436 assertions.
%     Score = -39.638,468162 (regressionFit = 39.638,468161, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -39.638,468162): medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.500,127853 (regressionFit = 39.500,127852, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -39.500,127853): medv(A) :- crim(A, 4).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.638,483808 (regressionFit = 39.638,483807, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.633,240561 (regressionFit = 37.633,240560, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -37.633,240561): medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.808,651307 (regressionFit = 38.808,651306, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.315,657792 (regressionFit = 33.315,657791, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -33.315,657792): medv(A) :- crim(A, 10).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -34.695,563004 (regressionFit = 34.695,563003, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.616,069631 (regressionFit = 38.616,069630, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 90).  [covers 4,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.847,221324 (regressionFit = 38.847,221323, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.062,758165 (regressionFit = 39.062,758164, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 21,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.631,729726 (regressionFit = 39.631,729725, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.605,364995 (regressionFit = 38.605,364994, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.297,050048 (regressionFit = 36.297,050047, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.505,053776 (regressionFit = 39.505,053775, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.338,864441 (regressionFit = 33.338,864440, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.577,904001 (regressionFit = 38.577,904000, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 401,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.577,904001 (regressionFit = 38.577,904000, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 35,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.632,627139 (regressionFit = 39.632,627138, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.461,939144 (regressionFit = 39.461,939143, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.626,311286 (regressionFit = 37.626,311285, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.737,679697 (regressionFit = 38.737,679696, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.241,492656 (regressionFit = 38.241,492655, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -32.266,679045 (regressionFit = 32.266,679044, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -32.266,679045): medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.337,639541 (regressionFit = 39.337,639540, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.105,555484 (regressionFit = 39.105,555483, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.786,815820 (regressionFit = 36.786,815819, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.918,693679 (regressionFit = 38.918,693678, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.701,638091 (regressionFit = 37.701,638090, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.591,251036 (regressionFit = 39.591,251035, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.637,162592 (regressionFit = 39.637,162591, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.201,871597 (regressionFit = 37.201,871596, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.514,302075 (regressionFit = 38.514,302074, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.506,152858 (regressionFit = 38.506,152857, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.382,788103 (regressionFit = 38.382,788102, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.756,088525 (regressionFit = 38.756,088524, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.604,062463 (regressionFit = 39.604,062462, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.799,267521 (regressionFit = 37.799,267520, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.608,466081 (regressionFit = 39.608,466080, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.019,388871 (regressionFit = 39.019,388870, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.463,716798 (regressionFit = 39.463,716797, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.266,455873 (regressionFit = 37.266,455872, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.686,454048 (regressionFit = 38.686,454047, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.277,358952 (regressionFit = 39.277,358951, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 23,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.459,259956 (regressionFit = 39.459,259954, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 101,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.322,758601 (regressionFit = 38.322,758600, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 24,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.533,010437 (regressionFit = 39.533,010435, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 15,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.338,864441 (regressionFit = 33.338,864440, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.591,417212 (regressionFit = 39.591,417211, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 384).  [covers 11,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.539,402678 (regressionFit = 39.539,402677, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 188).  [covers 7,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.631,729726 (regressionFit = 39.631,729725, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.559,309787 (regressionFit = 39.559,309786, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 285).  [covers 1,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.497,238969 (regressionFit = 39.497,238968, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 14,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.338,864441 (regressionFit = 33.338,864440, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.814,127996 (regressionFit = 38.814,127995, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.637,264034 (regressionFit = 39.637,264033, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.925,257034 (regressionFit = 36.925,257033, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.628,749898 (regressionFit = 38.628,749897, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.780,620084 (regressionFit = 38.780,620083, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.612,829726 (regressionFit = 39.612,829724, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.258,024659 (regressionFit = 33.258,024658, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 97,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.618,245003 (regressionFit = 39.618,245002, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.737,874029 (regressionFit = 38.737,874028, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.276,288528 (regressionFit = 39.276,288527, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.108,046458 (regressionFit = 39.108,046457, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.576,713515 (regressionFit = 39.576,713514, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 27,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.157,831192 (regressionFit = 39.157,831191, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 102,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.453,241329 (regressionFit = 39.453,241328, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.918,740592 (regressionFit = 38.918,740591, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 38,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.281,193186 (regressionFit = 39.281,193185, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.800,377476 (regressionFit = 38.800,377475, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.589,839753 (regressionFit = 39.589,839752, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.001,294509 (regressionFit = 38.001,294508, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 38,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
Comparing variance: 11.476031746031756 to score=0.0025 #egs=42.0
Comparing variance: 80.67179114380653 to score=0.0025 #egs=394.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 42,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-11,476032)
%         ILP node to extend: medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -11,476032) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 394,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-80,671791)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -80,671791) into position #1 in the search queue (new size=2).

% Time for loop #1: 188 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
% This clause covers 42 positive examples, of which 42 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 6 positive seeds: 46 106 194 226 296 351

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 394,0/394,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 394,0/394,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -31.686,330930 (regressionFit = 31.686,330929, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 49,0/394,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -31.686,330930): medv(A) :- crim(A, 5).  [covers 49,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.686,405798 (regressionFit = 31.686,405797, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 43,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.481,446450 (regressionFit = 31.481,446449, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 51,0/394,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -31.481,446450): medv(A) :- crim(A, 2).  [covers 51,0/394,0 pos, 0,0/0,0 neg]
%     Score = -30.556,705234 (regressionFit = 30.556,705233, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 49,0/394,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -30.556,705234): medv(A) :- crim(A, 1).  [covers 49,0/394,0 pos, 0,0/0,0 neg]
%     Score = -28.939,216962 (regressionFit = 28.939,216961, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 265,0/394,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -28.939,216962): medv(A) :- zn(A, 0).  [covers 265,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.601,354155 (regressionFit = 31.601,354154, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 80).  [covers 14,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.577,127495 (regressionFit = 31.577,127494, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 40).  [covers 7,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.585,445860 (regressionFit = 31.585,445859, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 33).  [covers 4,0/394,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 100).  [covers 1,0/394,0 pos, 0,0/0,0 neg]
%     Score = -30.331,554273 (regressionFit = 30.331,554272, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/394,0 pos, 0,0/0,0 neg]
%     Score = -28.886,163145 (regressionFit = 28.886,163144, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 48,0/394,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -28.886,163145): medv(A) :- indus(A, 1).  [covers 48,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.296,444166 (regressionFit = 31.296,444165, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 51,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.189,387511 (regressionFit = 31.189,387510, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 359,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.189,387511 (regressionFit = 31.189,387510, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 35,0/394,0 pos, 0,0/0,0 neg]
%     Score = -30.183,389017 (regressionFit = 30.183,389016, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.017,396099 (regressionFit = 31.017,396098, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 48,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.501,057172 (regressionFit = 31.501,057171, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 48,0/394,0 pos, 0,0/0,0 neg]
%     Score = -30.960,045247 (regressionFit = 30.960,045246, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 48,0/394,0 pos, 0,0/0,0 neg]
%     Score = -30.876,135017 (regressionFit = 30.876,135016, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 42,0/394,0 pos, 0,0/0,0 neg]
%     Score = -17.242,866699 (regressionFit = 17.242,866698, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 47,0/394,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -17.242,866699): medv(A) :- rm(A, 3).  [covers 47,0/394,0 pos, 0,0/0,0 neg]
%     Score = -29.980,989261 (regressionFit = 29.980,989260, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 43,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.751,493394 (regressionFit = 31.751,493393, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 43,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.222,294816 (regressionFit = 31.222,294815, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 49,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.771,931902 (regressionFit = 31.771,931901, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 37,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.766,678908 (regressionFit = 31.766,678907, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 46,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.539,134341 (regressionFit = 31.539,134340, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 50,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.771,610942 (regressionFit = 31.771,610941, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 46,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.304,698432 (regressionFit = 31.304,698431, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 32,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.545,455336 (regressionFit = 31.545,455335, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 45,0/394,0 pos, 0,0/0,0 neg]
%     Score = -30.928,876276 (regressionFit = 30.928,876275, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 101,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.630,298112 (regressionFit = 31.630,298111, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 23,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.633,040461 (regressionFit = 31.633,040460, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 16,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.570,181295 (regressionFit = 31.570,181294, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.784,672887 (regressionFit = 31.784,672886, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 39,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.603,933867 (regressionFit = 31.603,933866, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 329).  [covers 6,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.503,100381 (regressionFit = 31.503,100380, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 254).  [covers 5,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.378,037144 (regressionFit = 31.378,037143, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 222).  [covers 7,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.739,245924 (regressionFit = 31.739,245923, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 279).  [covers 4,0/394,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 256).  [covers 1,0/394,0 pos, 0,0/0,0 neg]
%     Score = -30.433,619587 (regressionFit = 30.433,619586, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 32,0/394,0 pos, 0,0/0,0 neg]
%     Score = -29.996,018865 (regressionFit = 29.996,018864, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 50,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.519,631408 (regressionFit = 31.519,631407, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 47,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.757,926643 (regressionFit = 31.757,926642, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 51,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.719,283663 (regressionFit = 31.719,283662, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 42,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.388,595788 (regressionFit = 31.388,595787, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 45,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.742,286367 (regressionFit = 31.742,286366, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 82,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.474,051108 (regressionFit = 31.474,051107, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 38,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.491,603707 (regressionFit = 31.491,603706, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 43,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.767,659246 (regressionFit = 31.767,659245, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/394,0 pos, 0,0/0,0 neg]
%     Score = -18.784,413354 (regressionFit = 18.784,413353, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 51,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.406,556910 (regressionFit = 31.406,556909, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 46,0/394,0 pos, 0,0/0,0 neg]
%     Score = -30.988,552685 (regressionFit = 30.988,552684, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/394,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3).  [covers 47,0/394,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3).  [covers 47,0/394,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -80,672.
% Will extend: medv(A) :- rm(A, 3).  [covers 47,0/394,0 pos, 0,0/0,0 neg]
Comparing variance: 53.939674060661076 to score=0.0025 #egs=47.0
Comparing variance: 42.3853084071788 to score=0.0025 #egs=347.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 47,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-53,939674)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 47,0/394,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -53,939674) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 347,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-42,385308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -42,385308) into position #2 in the search queue (new size=3).

% Time for loop #2: 139 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      medv(A) :- rm(A, 3).  [covers 47,0/394,0 pos, 0,0/0,0 neg]
% This clause covers 47 positive examples, of which 47 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3).  [covers 47,0/47,0 pos, 0,0/0,0 neg]'
%     Score = -17.242,866699 (regressionFit = 17.242,866698, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 47,0/47,0 pos, 0,0/0,0 neg]

% Have these 9 positive seeds: 0 7 13 14 18 21 23 27 30
% Gleaner: New best node found (score = -17.242,866699): medv(A) :- rm(A, 3).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.419,884433 (regressionFit = 2.419,884431, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 2).  [covers 6,0/47,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.419,884433): medv(A) :- rm(A, 3), crim(A, 2).  [covers 6,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.473,159245 (regressionFit = 2.473,159243, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 1).  [covers 10,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.533,954569 (regressionFit = 2.533,954567, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 7).  [covers 14,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.456,664002 (regressionFit = 2.456,664000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 5).  [covers 7,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.532,249632 (regressionFit = 2.532,249630, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 0).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 45).  [covers 2,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 95).  [covers 2,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.529,408026 (regressionFit = 2.529,408024, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 20).  [covers 12,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.535,014023 (regressionFit = 2.535,014021, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 1).  [covers 15,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.532,359569 (regressionFit = 2.532,359567, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 4).  [covers 14,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.464,508097 (regressionFit = 2.464,508095, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 2).  [covers 12,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.535,064002 (regressionFit = 2.535,064000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 0).  [covers 40,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.486,978079 (regressionFit = 2.486,978077, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 2).  [covers 8,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.453,924188 (regressionFit = 2.453,924186, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 5).  [covers 4,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.443,892342 (regressionFit = 2.443,892340, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 6).  [covers 8,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.526,188029 (regressionFit = 2.526,188027, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 4).  [covers 10,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.534,329093 (regressionFit = 2.534,329091, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 3).  [covers 3,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.524,756323 (regressionFit = 2.524,756321, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 8).  [covers 7,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.534,481764 (regressionFit = 2.534,481762, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 1).  [covers 5,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.336,824002 (regressionFit = 2.336,824000, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), age(A, 3).  [covers 7,0/47,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.336,824002): medv(A) :- rm(A, 3), age(A, 3).  [covers 7,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.429,328457 (regressionFit = 2.429,328455, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 8).  [covers 6,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.423,608335 (regressionFit = 2.423,608333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 2).  [covers 6,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.511,893288 (regressionFit = 2.511,893286, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 4).  [covers 7,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 6).  [covers 1,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.459,228945 (regressionFit = 2.459,228943, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 9).  [covers 6,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.500,875908 (regressionFit = 2.500,875906, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 4).  [covers 9,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.529,852573 (regressionFit = 2.529,852571, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 2).  [covers 7,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.389,418260 (regressionFit = 2.389,418258, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 1).  [covers 3,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.429,734421 (regressionFit = 2.429,734419, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 9).  [covers 4,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 7).  [covers 2,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.417,514038 (regressionFit = 2.417,514036, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 2).  [covers 7,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.400,550845 (regressionFit = 2.400,550843, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 5).  [covers 17,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.449,967502 (regressionFit = 2.449,967500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 4).  [covers 4,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.531,454739 (regressionFit = 2.531,454737, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 8).  [covers 9,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.516,023941 (regressionFit = 2.516,023939, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 276).  [covers 3,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 398).  [covers 2,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 224).  [covers 2,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.531,454739 (regressionFit = 2.531,454737, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 307).  [covers 9,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.533,379417 (regressionFit = 2.533,379415, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264).  [covers 9,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.503,776895 (regressionFit = 2.503,776893, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 2).  [covers 7,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.526,680490 (regressionFit = 2.526,680488, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 1).  [covers 6,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.209,308669 (regressionFit = 2.209,308667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 9).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.209,308669): medv(A) :- rm(A, 3), ptratio(A, 9).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.531,454739 (regressionFit = 2.531,454737, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 6).  [covers 9,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.365,910124 (regressionFit = 2.365,910122, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 1).  [covers 6,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.516,038323 (regressionFit = 2.516,038321, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 2).  [covers 7,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.514,373326 (regressionFit = 2.514,373324, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 6).  [covers 10,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.485,358288 (regressionFit = 2.485,358286, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 8).  [covers 7,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.457,706813 (regressionFit = 2.457,706811, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 5).  [covers 10,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.174,968189 (regressionFit = 2.174,968187, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 1).  [covers 9,0/47,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.174,968189): medv(A) :- rm(A, 3), lstat(A, 1).  [covers 9,0/47,0 pos, 0,0/0,0 neg]
%     Score = -1.635,654892 (regressionFit = 1.635,654890, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/47,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.635,654892): medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.446,321669 (regressionFit = 2.446,321667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 9).  [covers 8,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 2).  [covers 2,0/47,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/47,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/47,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -53,940.
% Will extend: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/47,0 pos, 0,0/0,0 neg]
Comparing variance: 26.586286982248286 to score=0.0025 #egs=26.0
Comparing variance: 44.971972789115604 to score=0.0025 #egs=21.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 26,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-26,586287)
%         ILP node to extend: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/47,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -26,586287) into position #2 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 21,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-44,971973)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -44,971973) into position #1 in the search queue (new size=4).

% Time for loop #3: 68 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/47,0 pos, 0,0/0,0 neg]
% This clause covers 26 positive examples, of which 26 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3).  [covers 47,0/21,0 pos, 0,0/0,0 neg]'
%     Score = -17.242,866699 (regressionFit = 17.242,866698, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 21,0/21,0 pos, 0,0/0,0 neg]

% Have these 10 positive seeds: 1 3 5 6 9 10 11 14 15 16
% Gleaner: New best node found (score = -17.242,866699): medv(A) :- rm(A, 3).  [covers 21,0/21,0 pos, 0,0/0,0 neg]
%     Score = -941,106326 (regressionFit = 941,106324, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 2).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -941,106326): medv(A) :- rm(A, 3), crim(A, 2).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 1).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -940,982859 (regressionFit = 940,982857, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 7).  [covers 7,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -940,982859): medv(A) :- rm(A, 3), crim(A, 7).  [covers 7,0/21,0 pos, 0,0/0,0 neg]
%     Score = -789,060590 (regressionFit = 789,060588, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 5).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -789,060590): medv(A) :- rm(A, 3), crim(A, 5).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 4).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 3).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -772,325669 (regressionFit = 772,325667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 0).  [covers 6,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -772,325669): medv(A) :- rm(A, 3), zn(A, 0).  [covers 6,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 80).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -646,925558 (regressionFit = 646,925556, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 20).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -646,925558): medv(A) :- rm(A, 3), zn(A, 20).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 40).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -932,790669 (regressionFit = 932,790667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 1).  [covers 6,0/21,0 pos, 0,0/0,0 neg]
%     Score = -863,889502 (regressionFit = 863,889500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 2).  [covers 5,0/21,0 pos, 0,0/0,0 neg]
%     Score = -651,471391 (regressionFit = 651,471389, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 4).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -816,605002 (regressionFit = 816,605000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 0).  [covers 18,0/21,0 pos, 0,0/0,0 neg]
%     Score = -816,605002 (regressionFit = 816,605000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 1).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -927,128002 (regressionFit = 927,128000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 4).  [covers 5,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 6).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 3).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -797,317145 (regressionFit = 797,317143, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 8).  [covers 7,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 7).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -926,277780 (regressionFit = 926,277778, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 2).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -850,142796 (regressionFit = 850,142794, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 2).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -920,339002 (regressionFit = 920,339000, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), age(A, 3).  [covers 6,0/21,0 pos, 0,0/0,0 neg]
%     Score = -943,140590 (regressionFit = 943,140588, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 4).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -591,002355 (regressionFit = 591,002353, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -591,002355): medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 6).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 5).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -889,076113 (regressionFit = 889,076111, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 4).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -932,091113 (regressionFit = 932,091111, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 1).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -944,302780 (regressionFit = 944,302778, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 8).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 7).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 2).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 3).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 2).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -872,180002 (regressionFit = 872,180000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 8).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -651,471391 (regressionFit = 651,471389, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 5).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 4).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 193).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 329).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -872,180002 (regressionFit = 872,180000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 307).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -620,410771 (regressionFit = 620,410769, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 223).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 254).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -942,480002 (regressionFit = 942,480000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 2).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -655,982224 (regressionFit = 655,982222, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 9).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -872,180002 (regressionFit = 872,180000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 6).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -939,005002 (regressionFit = 939,005000, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 3).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 4).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -912,711113 (regressionFit = 912,711111, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 2).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 8).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -904,790002 (regressionFit = 904,790000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 6).  [covers 5,0/21,0 pos, 0,0/0,0 neg]
%     Score = -723,782796 (regressionFit = 723,782794, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 5).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -901,031925 (regressionFit = 901,031923, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 9).  [covers 8,0/21,0 pos, 0,0/0,0 neg]
%     Score = -933,804724 (regressionFit = 933,804722, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 1).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 8).  [covers 2,0/21,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/21,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/21,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -44,972.
% Will extend: medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
Comparing variance: 28.66500000000042 to score=0.0025 #egs=4.0
Comparing variance: 28.02013840830456 to score=0.0025 #egs=17.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 4,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 17,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-28,020138)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 21,0/21,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -28,020138) into position #2 in the search queue (new size=4).

% Time for loop #4: 45 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 10 positive seeds: 33 37 56 81 112 163 183 252 281 297

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 347,0/347,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 347,0/347,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -14.390,384585 (regressionFit = 14.390,384584, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 42,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -14.390,384585): medv(A) :- crim(A, 5).  [covers 42,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.191,644690 (regressionFit = 14.191,644689, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 45,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -14.191,644690): medv(A) :- crim(A, 2).  [covers 45,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.642,604168 (regressionFit = 14.642,604167, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 40,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.222,722652 (regressionFit = 14.222,722651, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 39,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.706,186217 (regressionFit = 14.706,186216, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 9).  [covers 18,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.768,422029 (regressionFit = 13.768,422028, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 19,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -13.768,422029): medv(A) :- crim(A, 10).  [covers 19,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.579,676802 (regressionFit = 13.579,676801, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 245,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -13.579,676802): medv(A) :- zn(A, 0).  [covers 245,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.672,046251 (regressionFit = 14.672,046250, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 55).  [covers 3,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.635,066639 (regressionFit = 14.635,066638, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 34).  [covers 3,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.310,567627 (regressionFit = 14.310,567626, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 21,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.224,179042 (regressionFit = 14.224,179041, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.921,047837 (regressionFit = 13.921,047836, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 35,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.671,392445 (regressionFit = 14.671,392444, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.688,288220 (regressionFit = 13.688,288219, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 33,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.598,547684 (regressionFit = 14.598,547683, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 39,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.468,593499 (regressionFit = 14.468,593498, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 47,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.422,962219 (regressionFit = 14.422,962218, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 319,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.591,196371 (regressionFit = 14.591,196370, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 29,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.136,346829 (regressionFit = 14.136,346828, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.707,661503 (regressionFit = 14.707,661502, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 40,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.318,658762 (regressionFit = 14.318,658761, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 38,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.349,417621 (regressionFit = 14.349,417620, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 40,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.533,394452 (regressionFit = 14.533,394451, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 46,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.134,904172 (regressionFit = 13.134,904171, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 41,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -13.134,904172): medv(A) :- nox(A, 9).  [covers 41,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.505,447393 (regressionFit = 14.505,447392, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 40,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.698,017381 (regressionFit = 13.698,017380, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 41,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.706,922036 (regressionFit = 14.706,922035, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 38,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.668,412099 (regressionFit = 14.668,412098, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 38,0/347,0 pos, 0,0/0,0 neg]
%     Score = -11.286,513310 (regressionFit = 11.286,513309, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 43,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11.286,513310): medv(A) :- rm(A, 4).  [covers 43,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.688,391440 (regressionFit = 14.688,391439, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 38,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.242,422223 (regressionFit = 14.242,422222, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 30,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.935,772826 (regressionFit = 13.935,772825, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 35,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.605,970353 (regressionFit = 14.605,970352, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 31,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.639,559498 (regressionFit = 14.639,559497, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 29,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.698,334176 (regressionFit = 14.698,334175, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 30,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.676,109569 (regressionFit = 14.676,109568, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 39,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.266,644518 (regressionFit = 14.266,644517, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 43,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.051,080904 (regressionFit = 14.051,080903, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 44,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.561,398236 (regressionFit = 14.561,398235, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 29,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.041,692674 (regressionFit = 14.041,692673, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 33,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.674,899495 (regressionFit = 14.674,899494, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 25,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.686,325132 (regressionFit = 14.686,325131, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 45,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.545,569591 (regressionFit = 14.545,569590, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 26,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.568,957846 (regressionFit = 14.568,957845, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 42,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.544,122119 (regressionFit = 14.544,122118, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 43,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.703,408467 (regressionFit = 14.703,408466, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 31,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.673,935430 (regressionFit = 14.673,935429, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 45,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.500,474950 (regressionFit = 14.500,474949, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 97,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.698,863565 (regressionFit = 14.698,863564, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 95,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.691,306376 (regressionFit = 14.691,306375, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 13,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.589,101226 (regressionFit = 14.589,101225, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 13,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.468,593499 (regressionFit = 14.468,593498, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 47,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.188,845063 (regressionFit = 14.188,845062, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 33,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.356,979591 (regressionFit = 14.356,979590, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 437).  [covers 14,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.499,033280 (regressionFit = 14.499,033279, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 30,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.644,298939 (regressionFit = 14.644,298938, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 296).  [covers 8,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.699,827590 (regressionFit = 14.699,827589, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 277).  [covers 11,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.707,516522 (regressionFit = 14.707,516521, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 300).  [covers 7,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.577,029535 (regressionFit = 14.577,029534, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 329).  [covers 4,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.468,593499 (regressionFit = 14.468,593498, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 47,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.688,699321 (regressionFit = 14.688,699320, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 233).  [covers 9,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.352,014601 (regressionFit = 14.352,014600, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 7).  [covers 16,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.145,820636 (regressionFit = 14.145,820635, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 32,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.488,698280 (regressionFit = 14.488,698279, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 39,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.665,733806 (regressionFit = 14.665,733805, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 48,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.288,452879 (regressionFit = 14.288,452878, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 39,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.416,438636 (regressionFit = 14.416,438635, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 54,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.466,956109 (regressionFit = 14.466,956107, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 40,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.668,600940 (regressionFit = 14.668,600939, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 76,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.660,012724 (regressionFit = 14.660,012723, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 35,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.705,199478 (regressionFit = 14.705,199477, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 37,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.698,403933 (regressionFit = 14.698,403932, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 41,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.618,419270 (regressionFit = 14.618,419268, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 36,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.276,103333 (regressionFit = 13.276,103332, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 29,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.785,261427 (regressionFit = 13.785,261426, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 25,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.690,998290 (regressionFit = 14.690,998289, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 42,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.405,420554 (regressionFit = 14.405,420553, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 38,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.449,104545 (regressionFit = 14.449,104544, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 43,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.579,639028 (regressionFit = 13.579,639027, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 40,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.865,083248 (regressionFit = 13.865,083246, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 33,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.171,414129 (regressionFit = 13.171,414128, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 25,0/347,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 4).  [covers 43,0/347,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 4).  [covers 43,0/347,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -42,385.
% Will extend: medv(A) :- rm(A, 4).  [covers 43,0/347,0 pos, 0,0/0,0 neg]
Comparing variance: 43.641828015143275 to score=0.0025 #egs=43.0
Comparing variance: 30.95366678930053 to score=0.0025 #egs=304.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 43,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-43,641828)
%         ILP node to extend: medv(A) :- rm(A, 4).  [covers 43,0/347,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -43,641828) into position #1 in the search queue (new size=4).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 304,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-30,953667)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -30,953667) into position #2 in the search queue (new size=5).

% Time for loop #5: 256 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #5, the best clause found is:
%      medv(A) :- rm(A, 4).  [covers 43,0/347,0 pos, 0,0/0,0 neg]
% This clause covers 43 positive examples, of which 43 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 4).  [covers 43,0/43,0 pos, 0,0/0,0 neg]'
%     Score = -11.286,513310 (regressionFit = 11.286,513309, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 43,0/43,0 pos, 0,0/0,0 neg]

% Have these 10 positive seeds: 1 12 13 14 19 23 24 26 37 38
% Gleaner: New best node found (score = -11.286,513310): medv(A) :- rm(A, 4).  [covers 43,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.862,566669 (regressionFit = 1.862,566667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 5).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.862,566669): medv(A) :- rm(A, 4), crim(A, 5).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.738,723399 (regressionFit = 1.738,723397, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 3).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.738,723399): medv(A) :- rm(A, 4), crim(A, 3).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.754,693891 (regressionFit = 1.754,693889, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 2).  [covers 9,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.867,042355 (regressionFit = 1.867,042353, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 6).  [covers 9,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.845,634207 (regressionFit = 1.845,634205, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 1).  [covers 11,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.856,071784 (regressionFit = 1.856,071782, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0).  [covers 16,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 30).  [covers 1,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 22).  [covers 1,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.875,861861 (regressionFit = 1.875,861859, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 40).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.870,122669 (regressionFit = 1.870,122667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 80).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 70).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), indus(A, 9).  [covers 1,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.875,149724 (regressionFit = 1.875,149722, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), indus(A, 2).  [covers 7,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.850,777739 (regressionFit = 1.850,777737, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), indus(A, 5).  [covers 5,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.848,451507 (regressionFit = 1.848,451505, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), indus(A, 1).  [covers 12,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.814,095160 (regressionFit = 1.814,095158, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), chas(A, 0).  [covers 38,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.814,095160 (regressionFit = 1.814,095158, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), chas(A, 1).  [covers 5,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.847,902669 (regressionFit = 1.847,902667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 7).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.837,793592 (regressionFit = 1.837,793590, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 3).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.876,464645 (regressionFit = 1.876,464643, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 5).  [covers 7,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.850,402649 (regressionFit = 1.850,402647, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 2).  [covers 9,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.871,199154 (regressionFit = 1.871,199152, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 6).  [covers 10,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 5).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 2).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.875,861861 (regressionFit = 1.875,861859, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 1).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.846,741608 (regressionFit = 1.846,741606, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 10).  [covers 10,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.847,647714 (regressionFit = 1.847,647712, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 8).  [covers 9,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.871,952434 (regressionFit = 1.871,952432, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 3).  [covers 6,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 9).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.845,245899 (regressionFit = 1.845,245897, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 4).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.874,866510 (regressionFit = 1.874,866508, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 3).  [covers 7,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.865,418699 (regressionFit = 1.865,418697, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 5).  [covers 10,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.809,571579 (regressionFit = 1.809,571577, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 2).  [covers 6,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.846,258899 (regressionFit = 1.846,258897, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 5).  [covers 13,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.819,267752 (regressionFit = 1.819,267750, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 8).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 6).  [covers 1,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.876,276002 (regressionFit = 1.876,276000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 7).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.852,966739 (regressionFit = 1.852,966737, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 4).  [covers 5,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.746,822859 (regressionFit = 1.746,822857, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 3).  [covers 8,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 403).  [covers 1,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 307).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 300).  [covers 1,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 330).  [covers 1,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.865,155002 (regressionFit = 1.865,155000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 254).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 245).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 358).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.863,907752 (regressionFit = 1.863,907750, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 222).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.849,392310 (regressionFit = 1.849,392308, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 9).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.858,005092 (regressionFit = 1.858,005090, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 6).  [covers 6,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.872,079752 (regressionFit = 1.872,079750, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 5).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.869,407714 (regressionFit = 1.869,407712, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 2).  [covers 9,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.846,741608 (regressionFit = 1.846,741606, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 1).  [covers 10,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.847,724425 (regressionFit = 1.847,724423, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 3).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 9).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.800,680768 (regressionFit = 1.800,680766, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 6).  [covers 6,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.875,618160 (regressionFit = 1.875,618158, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 5).  [covers 5,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.780,867502 (regressionFit = 1.780,867500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 2).  [covers 7,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.828,377335 (regressionFit = 1.828,377333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 1).  [covers 10,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.829,764938 (regressionFit = 1.829,764936, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 3).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.517,113335 (regressionFit = 1.517,113333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), lstat(A, 3).  [covers 15,0/43,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.517,113335): medv(A) :- rm(A, 4), lstat(A, 3).  [covers 15,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.788,847752 (regressionFit = 1.788,847750, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), lstat(A, 8).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.867,888002 (regressionFit = 1.867,888000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), lstat(A, 1).  [covers 13,0/43,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 4), lstat(A, 3).  [covers 15,0/43,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 4), lstat(A, 3).  [covers 15,0/43,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -43,642.
% Will extend: medv(A) :- rm(A, 4), lstat(A, 3).  [covers 15,0/43,0 pos, 0,0/0,0 neg]
Comparing variance: 26.072888888889185 to score=0.0025 #egs=15.0
Comparing variance: 40.21499999999963 to score=0.0025 #egs=28.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 15,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-26,072889)
%         ILP node to extend: medv(A) :- rm(A, 4), lstat(A, 3).  [covers 15,0/43,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -26,072889) into position #4 in the search queue (new size=5).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 28,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-40,215000)
%         ILP node to extend: medv(A) :- rm(A, 4).  [covers 43,0/43,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -40,215000) into position #1 in the search queue (new size=6).

% Time for loop #6: 68 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      medv(A) :- rm(A, 4), lstat(A, 3).  [covers 15,0/43,0 pos, 0,0/0,0 neg]
% This clause covers 15 positive examples, of which 15 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 4).  [covers 43,0/28,0 pos, 0,0/0,0 neg]'
%     Score = -11.286,513310 (regressionFit = 11.286,513309, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 28,0/28,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 1 5 7 13 19 22 24 25
% Gleaner: New best node found (score = -11.286,513310): medv(A) :- rm(A, 4).  [covers 28,0/28,0 pos, 0,0/0,0 neg]
%     Score = -864,684548 (regressionFit = 864,684545, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 2).  [covers 6,0/28,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -864,684548): medv(A) :- rm(A, 4), crim(A, 2).  [covers 6,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.125,012383 (regressionFit = 1.125,012381, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 6).  [covers 7,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 4).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.118,792269 (regressionFit = 1.118,792267, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 1).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.069,667085 (regressionFit = 1.069,667083, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 3).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.070,294258 (regressionFit = 1.070,294256, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0).  [covers 13,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 45).  [covers 2,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 80).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.085,640269 (regressionFit = 1.085,640267, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 20).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 40).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 25).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.025,661780 (regressionFit = 1.025,661778, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 4), indus(A, 4).  [covers 10,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.039,773002 (regressionFit = 1.039,773000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), indus(A, 1).  [covers 8,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.126,017085 (regressionFit = 1.126,017083, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), indus(A, 2).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), indus(A, 5).  [covers 2,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), chas(A, 0).  [covers 26,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.122,648335 (regressionFit = 1.122,648333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 3).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.109,648524 (regressionFit = 1.109,648522, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 5).  [covers 5,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.120,174089 (regressionFit = 1.120,174087, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 6).  [covers 5,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.102,917085 (regressionFit = 1.102,917083, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 2).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
%     Score = -997,395002 (regressionFit = 997,395000, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 4), age(A, 4).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.057,292729 (regressionFit = 1.057,292727, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 10).  [covers 6,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.110,246669 (regressionFit = 1.110,246667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 8).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.096,267085 (regressionFit = 1.096,267083, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 1).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.120,909069 (regressionFit = 1.120,909067, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 3).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.075,713335 (regressionFit = 1.075,713333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 6).  [covers 6,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.099,685393 (regressionFit = 1.099,685391, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 3).  [covers 5,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.123,981517 (regressionFit = 1.123,981515, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 5).  [covers 6,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 1).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.069,371581 (regressionFit = 1.069,371579, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 5).  [covers 9,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.122,880269 (regressionFit = 1.122,880267, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 2).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.118,792269 (regressionFit = 1.118,792267, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 1).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -959,417085 (regressionFit = 959,417083, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 3).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.111,202402 (regressionFit = 1.111,202400, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 8).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 296).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 398).  [covers 2,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 329).  [covers 2,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 216).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 335).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 233).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 222).  [covers 2,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 284).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.107,817085 (regressionFit = 1.107,817083, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 6).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.004,974252 (regressionFit = 1.004,974250, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 1).  [covers 8,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.114,312269 (regressionFit = 1.114,312267, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 9).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 8).  [covers 2,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.093,820002 (regressionFit = 1.093,820000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 2).  [covers 5,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 3).  [covers 2,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.115,326972 (regressionFit = 1.115,326970, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 6).  [covers 6,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 8).  [covers 2,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 9).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.048,876350 (regressionFit = 1.048,876348, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 1).  [covers 5,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 5).  [covers 2,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.115,533069 (regressionFit = 1.115,533067, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 4), b(A, 4).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.121,725046 (regressionFit = 1.121,725043, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), lstat(A, 9).  [covers 5,0/28,0 pos, 0,0/0,0 neg]
%     Score = -935,769335 (regressionFit = 935,769333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), lstat(A, 1).  [covers 13,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.124,526669 (regressionFit = 1.124,526667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), lstat(A, 2).  [covers 3,0/28,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 4), crim(A, 2).  [covers 6,0/28,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 4), crim(A, 2).  [covers 6,0/28,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -40,215.
% Will extend: medv(A) :- rm(A, 4), crim(A, 2).  [covers 6,0/28,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #7: 52 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      medv(A) :- rm(A, 4), crim(A, 2).  [covers 6,0/28,0 pos, 0,0/0,0 neg]
% This clause covers 6 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 7 positive seeds: 35 50 94 132 211 263 290

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 304,0/304,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 304,0/304,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -9.085,324851 (regressionFit = 9.085,324850, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 38,0/304,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.085,324851): medv(A) :- crim(A, 5).  [covers 38,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.383,823076 (regressionFit = 9.383,823075, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 27,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.409,614541 (regressionFit = 9.409,614540, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 32,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.318,546514 (regressionFit = 9.318,546513, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 30,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.092,984376 (regressionFit = 9.092,984375, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 229,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.394,284041 (regressionFit = 9.394,284040, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 20).  [covers 5,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.405,330368 (regressionFit = 9.405,330367, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 21).  [covers 4,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.399,315240 (regressionFit = 9.399,315239, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 25).  [covers 9,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.202,243901 (regressionFit = 9.202,243900, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 21,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.235,029013 (regressionFit = 9.235,029012, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 24,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.407,751606 (regressionFit = 9.407,751604, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.228,200256 (regressionFit = 9.228,200255, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 22,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.316,516681 (regressionFit = 9.316,516680, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 43,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.358,913329 (regressionFit = 9.358,913328, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 42,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.270,663157 (regressionFit = 9.270,663156, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 281,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.270,663157 (regressionFit = 9.270,663156, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 23,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.334,479207 (regressionFit = 9.334,479206, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 26,0/304,0 pos, 0,0/0,0 neg]
%     Score = -8.504,341418 (regressionFit = 8.504,341417, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 40,0/304,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.504,341418): medv(A) :- nox(A, 9).  [covers 40,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.065,303512 (regressionFit = 9.065,303511, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 32,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.265,263827 (regressionFit = 9.265,263826, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 39,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.285,054836 (regressionFit = 9.285,054835, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 30,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.334,689136 (regressionFit = 9.334,689135, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 38,0/304,0 pos, 0,0/0,0 neg]
%     Score = -8.836,248186 (regressionFit = 8.836,248185, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 41,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.187,812149 (regressionFit = 9.187,812148, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 30,0/304,0 pos, 0,0/0,0 neg]
%     Score = -8.112,128954 (regressionFit = 8.112,128953, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 41,0/304,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.112,128954): medv(A) :- rm(A, 1).  [covers 41,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.243,319494 (regressionFit = 9.243,319493, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 29,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.332,873297 (regressionFit = 9.332,873296, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 27,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.352,995454 (regressionFit = 9.352,995453, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 34,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.409,898271 (regressionFit = 9.409,898270, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 27,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.076,381036 (regressionFit = 9.076,381035, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 34,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.405,053706 (regressionFit = 9.405,053705, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 26,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.409,751149 (regressionFit = 9.409,751148, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 25,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.404,155988 (regressionFit = 9.404,155987, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 29,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.282,364082 (regressionFit = 9.282,364081, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 32,0/304,0 pos, 0,0/0,0 neg]
%     Score = -8.931,849084 (regressionFit = 8.931,849083, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 30,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.398,346279 (regressionFit = 9.398,346278, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 38,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.321,839809 (regressionFit = 9.321,839808, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 37,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.346,750303 (regressionFit = 9.346,750301, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 92,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.409,698989 (regressionFit = 9.409,698988, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 82,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.316,516681 (regressionFit = 9.316,516680, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 43,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.206,580971 (regressionFit = 9.206,580970, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 437).  [covers 14,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.235,029013 (regressionFit = 9.235,029012, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 24,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.363,645052 (regressionFit = 9.363,645051, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 277).  [covers 11,0/304,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 264).  [covers 1,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.316,516681 (regressionFit = 9.316,516680, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 43,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.405,330368 (regressionFit = 9.405,330367, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 243).  [covers 4,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.350,968368 (regressionFit = 9.350,968367, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 281).  [covers 4,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.211,911633 (regressionFit = 9.211,911632, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 7).  [covers 16,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.271,103169 (regressionFit = 9.271,103168, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 26,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.343,498620 (regressionFit = 9.343,498619, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 44,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.302,058044 (regressionFit = 9.302,058043, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 50,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.159,990322 (regressionFit = 9.159,990321, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 33,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.361,523347 (regressionFit = 9.361,523346, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 38,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.399,326605 (regressionFit = 9.399,326604, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 66,0/304,0 pos, 0,0/0,0 neg]
%     Score = -8.494,263662 (regressionFit = 8.494,263661, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 26,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.401,144442 (regressionFit = 9.401,144440, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 24,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.387,020315 (regressionFit = 9.387,020314, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 35,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.394,811221 (regressionFit = 9.394,811220, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 21,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.386,143438 (regressionFit = 9.386,143437, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/304,0 pos, 0,0/0,0 neg]
%     Score = -8.923,225652 (regressionFit = 8.923,225651, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 33,0/304,0 pos, 0,0/0,0 neg]
%     Score = -8.884,974182 (regressionFit = 8.884,974181, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 22,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.405,800955 (regressionFit = 9.405,800954, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 39,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.303,864029 (regressionFit = 9.303,864028, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 33,0/304,0 pos, 0,0/0,0 neg]
%     Score = -8.879,213594 (regressionFit = 8.879,213593, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 27,0/304,0 pos, 0,0/0,0 neg]
%     Score = -9.036,958789 (regressionFit = 9.036,958788, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 33,0/304,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 1).  [covers 41,0/304,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 1).  [covers 41,0/304,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -30,954.
% Will extend: medv(A) :- rm(A, 1).  [covers 41,0/304,0 pos, 0,0/0,0 neg]
Comparing variance: 30.320107079119737 to score=0.0025 #egs=41.0
Comparing variance: 26.11788807124572 to score=0.0025 #egs=263.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 41,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-30,320107)
%         ILP node to extend: medv(A) :- rm(A, 1).  [covers 41,0/304,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -30,320107) into position #1 in the search queue (new size=5).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 263,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-26,117888)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 4 and with score = -26,117888) into position #4 in the search queue (new size=6).

% Time for loop #8: 152 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      medv(A) :- rm(A, 1).  [covers 41,0/304,0 pos, 0,0/0,0 neg]
% This clause covers 41 positive examples, of which 41 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (medv(A) :- rm(A, 1))
Created a leaf under (medv(A) :- age(A, 9))
Created a leaf under (medv(A) :- lstat(A, 3))
Created a leaf under (medv(A) :- rm(A, 1))
Created a leaf under (medv(A) :- lstat(A, 3))
Created a leaf under (medv(A) :- nox(A, 10))

%%%%%  WILL-Produced Tree #1 @ 14:10:01 10/20/22.  %%%%%


% FOR medv(A):
%   if ( nox(A, 10) )
%   then return 10.066666666666666;  // std dev = 3,388, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   else if ( rm(A, 3) )
%   | then if ( lstat(A, 3) )
%   | | then return 44.44230769230769;  // std dev = 5,156, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( age(A, 9) )
%   | | | then return 44.099999999999994;  // std dev = 10,708, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 33.65294117647059;  // std dev = 5,293, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( rm(A, 4) )
%   | | then if ( lstat(A, 3) )
%   | | | then return 34.06666666666666;  // std dev = 5,106, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else if ( crim(A, 2) )
%   | | | | then return 33.85;  // std dev = 7,066, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else return 26.404545454545453;  // std dev = 28,544, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( rm(A, 1) )
%   | | | then return 25.81951219512195;  // std dev = 5,506, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return 19.77072243346008;  // std dev = 5,111, 263,000 (wgt'ed) examples reached here.  /* #pos=263 */


% Clauses:

medv(A, 10.066666666666666) :- 
     nox(A, 10), 
     !. // Clause #1.

medv(A, 44.44230769230769) :- 
     rm(A, 3), 
     lstat(A, 3), 
     !. // Clause #2.

medv(A, 44.099999999999994) :- 
     rm(A, 3), 
     age(A, 9), 
     !. // Clause #3.

medv(A, 33.65294117647059) :- 
     rm(A, 3), 
     !. // Clause #4.

medv(A, 34.06666666666666) :- 
     rm(A, 4), 
     lstat(A, 3), 
     !. // Clause #5.

medv(A, 33.85) :- 
     rm(A, 4), 
     crim(A, 2), 
     !. // Clause #6.

medv(A, 26.404545454545453) :- 
     rm(A, 4), 
     !. // Clause #7.

medv(A, 25.81951219512195) :- 
     rm(A, 1), 
     !. // Clause #8.

medv(A, 19.77072243346008) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_medv(a, 10.066666666666666) :-  /* #pos=42 */ 
   nox(a, 10),
   !. // Flattened version of clause #1.

flattened_medv(a, 44.44230769230769) :-  /* #pos=26 */ 
   rm(a, 3),
   lstat(a, 3),
   !. // Flattened version of clause #2.

flattened_medv(a, 44.099999999999994) :-  /* #pos=4 */ 
   rm(a, 3),
   age(a, 9),
   !. // Flattened version of clause #3.

flattened_medv(a, 33.65294117647059) :-  /* #pos=17 */ 
   rm(a, 3),
   !. // Flattened version of clause #4.

flattened_medv(a, 34.06666666666666) :-  /* #pos=15 */ 
   rm(a, 4),
   lstat(a, 3),
   !. // Flattened version of clause #5.

flattened_medv(a, 33.85) :-  /* #pos=6 */ 
   rm(a, 4),
   crim(a, 2),
   !. // Flattened version of clause #6.

flattened_medv(a, 26.404545454545453) :-  /* #pos=22 */ 
   rm(a, 4),
   !. // Flattened version of clause #7.

flattened_medv(a, 25.81951219512195) :-  /* #pos=41 */ 
   rm(a, 1),
   !. // Flattened version of clause #8.

flattened_medv(underscore, 19.77072243346008) :-  /* #pos=263 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   crim(a, 2)
%   rm(a, 3)
%   age(a, 9)
%   rm(a, 1)
%   lstat(a, 3)
%   nox(a, 10)
%   rm(a, 4)

% Saving model in: data/boston_housing/train/models/bRDNs/medv.model.ckpt
% Time taken to learn 1 trees is 1,019 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:30.95366678930145
Set score:0.0025
% Kept 436 of the 436 positive examples.
% Kept 0 of the 0 negative examples.
% Dataset size: 436
Computing probabilities
prob time:160 milliseconds
No hidden examples for : medv
Time to build dataset: 165 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:90.91388624217711
Set score:0.0025

% Have these 10 positive seeds: 5 24 28 54 82 109 129 141 143 182

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -39.500,082272 (regressionFit = 39.500,082271, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -39.500,082272): medv(A) :- crim(A, 4).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.638,423239 (regressionFit = 39.638,423238, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.590,406547 (regressionFit = 39.590,406546, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.882,582117 (regressionFit = 38.882,582116, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -38.882,582117): medv(A) :- crim(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.633,198351 (regressionFit = 37.633,198350, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -37.633,198351): medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.808,608084 (regressionFit = 38.808,608083, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.638,438883 (regressionFit = 39.638,438882, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -34.695,525858 (regressionFit = 34.695,525857, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -34.695,525858): medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.544,441636 (regressionFit = 39.544,441635, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 12.5).  [covers 10,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.269,562343 (regressionFit = 38.269,562342, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 95).  [covers 4,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.297,402414 (regressionFit = 36.297,402413, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 20).  [covers 21,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.847,174720 (regressionFit = 38.847,174719, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.062,712310 (regressionFit = 39.062,712309, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 21,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.631,684911 (regressionFit = 39.631,684910, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.297,008630 (regressionFit = 36.297,008629, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -35.626,303821 (regressionFit = 35.626,303820, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.638,454131 (regressionFit = 39.638,454129, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 7).  [covers 17,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.605,322061 (regressionFit = 38.605,322060, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.577,860712 (regressionFit = 38.577,860711, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 401,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.632,582342 (regressionFit = 39.632,582341, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.461,894850 (regressionFit = 39.461,894849, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.626,263851 (regressionFit = 37.626,263850, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.241,449969 (regressionFit = 38.241,449968, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.737,632982 (regressionFit = 38.737,632980, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.164,941911 (regressionFit = 38.164,941910, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.985,856308 (regressionFit = 38.985,856307, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.237,169900 (regressionFit = 39.237,169899, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.105,510302 (regressionFit = 39.105,510301, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.918,648267 (regressionFit = 38.918,648266, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.786,777926 (regressionFit = 36.786,777925, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.701,593993 (regressionFit = 37.701,593992, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.337,595115 (regressionFit = 39.337,595114, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -23.480,435316 (regressionFit = 23.480,435315, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -23.480,435316): medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.637,117640 (regressionFit = 39.637,117639, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.591,206214 (regressionFit = 39.591,206213, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.264,281151 (regressionFit = 39.264,281150, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.382,744068 (regressionFit = 38.382,744067, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.492,286383 (regressionFit = 39.492,286382, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 37,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.506,109970 (regressionFit = 38.506,109969, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.756,045020 (regressionFit = 38.756,045019, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.398,506898 (regressionFit = 39.398,506897, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.266,420148 (regressionFit = 37.266,420147, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.799,230778 (regressionFit = 37.799,230777, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.463,672641 (regressionFit = 39.463,672640, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.019,345380 (regressionFit = 39.019,345379, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.604,017364 (regressionFit = 39.604,017363, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.686,412214 (regressionFit = 38.686,412213, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.277,314785 (regressionFit = 39.277,314784, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 23,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.771,322563 (regressionFit = 38.771,322562, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 37,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.322,715164 (regressionFit = 38.322,715163, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 24,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.591,372090 (regressionFit = 39.591,372089, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 384).  [covers 11,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.573,658935 (regressionFit = 39.573,658934, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 311).  [covers 7,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.539,357528 (regressionFit = 39.539,357527, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 188).  [covers 7,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.631,684911 (regressionFit = 39.631,684910, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.609,367600 (regressionFit = 39.609,367599, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 296).  [covers 8,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 402).  [covers 2,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.313,080423 (regressionFit = 39.313,080422, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 276).  [covers 9,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.559,265331 (regressionFit = 39.559,265329, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.912,077465 (regressionFit = 36.912,077464, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 264).  [covers 12,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.814,081682 (regressionFit = 38.814,081681, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.780,576849 (regressionFit = 38.780,576848, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.637,219163 (regressionFit = 39.637,219162, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.925,215304 (regressionFit = 36.925,215303, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.628,706874 (regressionFit = 38.628,706873, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.618,200219 (regressionFit = 39.618,200218, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.157,788402 (regressionFit = 39.157,788401, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 102,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.164,122699 (regressionFit = 39.164,122698, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.276,243343 (regressionFit = 39.276,243342, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.176,358937 (regressionFit = 39.176,358936, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.737,830459 (regressionFit = 38.737,830458, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.918,695790 (regressionFit = 38.918,695789, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 38,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.281,147198 (regressionFit = 39.281,147197, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.790,683127 (regressionFit = 33.790,683126, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.589,794420 (regressionFit = 39.589,794419, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -24.407,537186 (regressionFit = 24.407,537185, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.800,334242 (regressionFit = 38.800,334240, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 46,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
Comparing variance: 66.6171033683034 to score=0.0025 #egs=48.0
Comparing variance: 52.27529472592471 to score=0.0025 #egs=388.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 48,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-66,617103)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -66,617103) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 388,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-52,275295)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -52,275295) into the LAST position (#2) in the search queue.

% Time for loop #1: 316 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
% This clause covers 48 positive examples, of which 48 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3).  [covers 48,0/48,0 pos, 0,0/0,0 neg]'
%     Score = -23.480,435316 (regressionFit = 23.480,435315, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 48,0/48,0 pos, 0,0/0,0 neg]

% Have these 9 positive seeds: 10 11 14 20 21 31 43 44 45
% Gleaner: New best node found (score = -23.480,435316): medv(A) :- rm(A, 3).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.194,232164 (regressionFit = 3.194,232162, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 6).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.194,232164): medv(A) :- rm(A, 3), crim(A, 6).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.102,007848 (regressionFit = 3.102,007846, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 1).  [covers 10,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.102,007848): medv(A) :- rm(A, 3), crim(A, 1).  [covers 10,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.195,894698 (regressionFit = 3.195,894696, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 7).  [covers 14,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.089,560330 (regressionFit = 3.089,560328, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 5).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.089,560330): medv(A) :- rm(A, 3), crim(A, 5).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,534284 (regressionFit = 3.197,534282, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 8).  [covers 3,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 10).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.193,249832 (regressionFit = 3.193,249830, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 80).  [covers 3,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 95).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.190,999885 (regressionFit = 3.190,999883, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 0).  [covers 21,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.176,842593 (regressionFit = 3.176,842591, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 20).  [covers 12,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 35).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.189,109620 (regressionFit = 3.189,109618, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 1).  [covers 15,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.159,077517 (regressionFit = 3.159,077515, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 2).  [covers 12,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.181,002367 (regressionFit = 3.181,002365, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 4).  [covers 14,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 10).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.196,096869 (regressionFit = 3.196,096867, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 0).  [covers 41,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.196,096869 (regressionFit = 3.196,096867, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 1).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.071,905650 (regressionFit = 3.071,905648, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 6).  [covers 8,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.071,905650): medv(A) :- rm(A, 3), nox(A, 6).  [covers 8,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.196,493569 (regressionFit = 3.196,493567, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 4).  [covers 10,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,617839 (regressionFit = 3.197,617837, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 3).  [covers 3,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.194,835182 (regressionFit = 3.194,835180, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 8).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.135,642128 (regressionFit = 3.135,642126, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 5).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 9).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 10).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.060,940988 (regressionFit = 3.060,940986, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 8).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.060,940988): medv(A) :- rm(A, 3), age(A, 8).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.041,208995 (regressionFit = 3.041,208993, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), age(A, 3).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.041,208995): medv(A) :- rm(A, 3), age(A, 3).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.186,967230 (regressionFit = 3.186,967228, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 4).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 7).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.114,319463 (regressionFit = 3.114,319461, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 2).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.183,029131 (regressionFit = 3.183,029129, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 5).  [covers 3,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.104,532121 (regressionFit = 3.104,532119, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 5).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.182,783991 (regressionFit = 3.182,783989, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 2).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.181,317473 (regressionFit = 3.181,317471, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 4).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.096,255242 (regressionFit = 3.096,255240, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 8).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.114,336669 (regressionFit = 3.114,336667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 9).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 10).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.111,582321 (regressionFit = 3.111,582319, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 2).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.090,430832 (regressionFit = 3.090,430829, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 4).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,607069 (regressionFit = 3.197,607067, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 8).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.992,712694 (regressionFit = 2.992,712691, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 5).  [covers 17,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.992,712694): medv(A) :- rm(A, 3), rad(A, 5).  [covers 17,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 1).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 24).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 329).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 224).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,607069 (regressionFit = 3.197,607067, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 307).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.187,784182 (regressionFit = 3.187,784180, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 284).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 666).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.752,969700 (regressionFit = 2.752,969698, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 9).  [covers 20,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.752,969700): medv(A) :- rm(A, 3), ptratio(A, 9).  [covers 20,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,607069 (regressionFit = 3.197,607067, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 6).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.195,402832 (regressionFit = 3.195,402830, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 1).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 10).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.745,710734 (regressionFit = 2.745,710732, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 1).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.745,710734): medv(A) :- rm(A, 3), b(A, 1).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.189,701518 (regressionFit = 3.189,701516, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 2).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.155,722669 (regressionFit = 3.155,722667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 6).  [covers 10,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.123,733144 (regressionFit = 3.123,733142, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 8).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.083,082590 (regressionFit = 3.083,082588, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 5).  [covers 10,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,457155 (regressionFit = 3.197,457153, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), b(A, 3).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 9).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.062,354477 (regressionFit = 2.062,354475, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.062,354477): medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.137,920546 (regressionFit = 3.137,920544, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 9).  [covers 8,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.904,229191 (regressionFit = 2.904,229189, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 1).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 8).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 10).  [covers 1,0/48,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -66,617.
% Will extend: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
Comparing variance: 26.586286982248566 to score=0.0025 #egs=26.0
Comparing variance: 62.32322786476619 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 26,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-26,586287)
%         ILP node to extend: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -26,586287) into the LAST position (#2) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 22,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-62,323228)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -62,323228) into position #1 in the search queue (new size=3).

% Time for loop #2: 92 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
% This clause covers 26 positive examples, of which 26 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3).  [covers 48,0/22,0 pos, 0,0/0,0 neg]'
%     Score = -23.480,435316 (regressionFit = 23.480,435315, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 22,0/22,0 pos, 0,0/0,0 neg]

% Have these 10 positive seeds: 2 4 5 6 7 8 9 11 12 13
% Gleaner: New best node found (score = -23.480,435316): medv(A) :- rm(A, 3).  [covers 22,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.371,010791 (regressionFit = 1.371,010788, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 2).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.371,010791): medv(A) :- rm(A, 3), crim(A, 2).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.347,000253 (regressionFit = 1.347,000251, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 7).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.347,000253): medv(A) :- rm(A, 3), crim(A, 7).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.160,199523 (regressionFit = 1.160,199521, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 5).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.160,199523): medv(A) :- rm(A, 3), crim(A, 5).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 45).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.008,993268 (regressionFit = 1.008,993266, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 0).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.008,993268): medv(A) :- rm(A, 3), zn(A, 0).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -942,136720 (regressionFit = 942,136717, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 20).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -942,136720): medv(A) :- rm(A, 3), zn(A, 20).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -947,508512 (regressionFit = 947,508510, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 4).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.329,305518 (regressionFit = 1.329,305516, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 2).  [covers 5,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.281,403483 (regressionFit = 1.281,403481, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 0).  [covers 19,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 5).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.368,276860 (regressionFit = 1.368,276857, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 4).  [covers 5,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 3).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.143,944379 (regressionFit = 1.143,944377, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 8).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.366,692639 (regressionFit = 1.366,692637, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), age(A, 3).  [covers 6,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.314,368501 (regressionFit = 1.314,368499, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 2).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.360,572760 (regressionFit = 1.360,572758, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 4).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -937,456243 (regressionFit = 937,456241, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -937,456243): medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 6).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 7).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 2).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.339,531230 (regressionFit = 1.339,531228, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 4).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.368,201784 (regressionFit = 1.368,201782, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 1).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.366,989416 (regressionFit = 1.366,989414, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 9).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.368,971281 (regressionFit = 1.368,971279, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 8).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 7).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -947,508512 (regressionFit = 947,508510, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 5).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.326,545608 (regressionFit = 1.326,545606, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 8).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 398).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.326,545608 (regressionFit = 1.326,545606, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 307).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -923,327149 (regressionFit = 923,327147, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -923,327149): medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 1).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.326,545608 (regressionFit = 1.326,545606, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 6).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -952,846459 (regressionFit = 952,846457, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 9).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.191,762413 (regressionFit = 1.191,762411, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 1).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 8).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.295,508961 (regressionFit = 1.295,508959, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 6).  [covers 5,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.085,510932 (regressionFit = 1.085,510930, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 5).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.356,534401 (regressionFit = 1.356,534399, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 2).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.370,810775 (regressionFit = 1.370,810773, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 1).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.273,030566 (regressionFit = 1.273,030564, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 9).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 2).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 8).  [covers 2,0/22,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -62,323.
% Will extend: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
Comparing variance: 53.02000000000021 to score=0.0025 #egs=8.0
Comparing variance: 35.65479620429661 to score=0.0025 #egs=14.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 8,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-53,020000)
%         ILP node to extend: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -53,020000) into position #1 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 14,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-35,654796)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 22,0/22,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -35,654796) into position #3 in the search queue (new size=4).

% Time for loop #3: 43 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
% This clause covers 8 positive examples, of which 8 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/8,0 pos, 0,0/0,0 neg]'
%     Score = -923,327149 (regressionFit = 923,327147, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/8,0 pos, 0,0/0,0 neg]

***** Warning: % Have only 8 positive examples, so cannot choose 10 of them. *****


% Have these 8 positive seeds: 0 1 2 3 4 5 6 7
% Gleaner: New best node found (score = -923,327149): medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -421,280003 (regressionFit = 421,280000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), crim(A, 5).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -421,280003): medv(A) :- rm(A, 3), tax(A, 264), crim(A, 5).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -421,280003 (regressionFit = 421,280000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), crim(A, 7).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), zn(A, 20).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), indus(A, 4).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), chas(A, 0).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), nox(A, 8).  [covers 7,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), nox(A, 7).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -328,940003 (regressionFit = 328,940000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 9).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -328,940003): medv(A) :- rm(A, 3), tax(A, 264), age(A, 9).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 6).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 2).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 7).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 4).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -423,678670 (regressionFit = 423,678667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), dis(A, 9).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%     Score = -295,198670 (regressionFit = 295,198667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -295,198670): medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), dis(A, 7).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), rad(A, 5).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), ptratio(A, 9).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), b(A, 6).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -401,715003 (regressionFit = 401,715000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), b(A, 5).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), b(A, 2).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 1).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 2).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 8).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 9).  [covers 2,0/8,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -53,020.
% Will extend: medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
Comparing variance: 26.74888888888866 to score=0.0025 #egs=3.0
Comparing variance: 42.990399999999866 to score=0.0025 #egs=5.0
%   Creating a TRUE-branch leaf because length = 4 > 3
%   Creating a FALSE-branch leaf because wgtedCountFalseBranchPos = 5,0 < 2.1 * minPosCov = 6,3

% Time for loop #4: 24 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 34 47 55 184 197 213 268 301

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 388,0/388,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 388,0/388,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -20.278,984468 (regressionFit = 20.278,984467, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 33,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20.278,984468): medv(A) :- crim(A, 7).  [covers 33,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.253,453757 (regressionFit = 20.253,453756, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 29,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20.253,453757): medv(A) :- crim(A, 8).  [covers 29,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.199,612953 (regressionFit = 20.199,612952, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 42,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20.199,612953): medv(A) :- crim(A, 5).  [covers 42,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.802,272382 (regressionFit = 19.802,272381, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19.802,272382): medv(A) :- crim(A, 6).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.377,223361 (regressionFit = 19.377,223360, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19.377,223361): medv(A) :- crim(A, 1).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
%     Score = -16.124,518273 (regressionFit = 16.124,518272, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -16.124,518273): medv(A) :- crim(A, 10).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
%     Score = -18.021,840348 (regressionFit = 18.021,840347, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 286,0/388,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 33).  [covers 2,0/388,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 35).  [covers 2,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.087,343566 (regressionFit = 20.087,343565, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 21,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.213,411813 (regressionFit = 20.213,411812, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 25,0/388,0 pos, 0,0/0,0 neg]
%     Score = -18.742,525070 (regressionFit = 18.742,525069, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 33,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.279,312304 (regressionFit = 20.279,312303, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.937,034601 (regressionFit = 19.937,034600, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
%     Score = -16.995,755317 (regressionFit = 16.995,755316, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 88,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.723,422859 (regressionFit = 19.723,422858, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 360,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.723,422859 (regressionFit = 19.723,422858, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 28,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.968,527842 (regressionFit = 19.968,527841, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 29,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.326,040841 (regressionFit = 19.326,040840, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.515,729427 (regressionFit = 19.515,729426, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 38,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.070,171039 (regressionFit = 20.070,171038, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.793,885730 (regressionFit = 19.793,885729, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 46,0/388,0 pos, 0,0/0,0 neg]
%     Score = -15.169,561528 (regressionFit = 15.169,561527, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 10).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -15.169,561528): medv(A) :- nox(A, 10).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.256,627519 (regressionFit = 20.256,627518, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
%     Score = -18.785,767507 (regressionFit = 18.785,767506, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.254,946450 (regressionFit = 20.254,946449, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 43,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.236,036835 (regressionFit = 19.236,036834, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 43,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.199,492778 (regressionFit = 20.199,492777, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
%     Score = -18.947,910778 (regressionFit = 18.947,910777, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 47,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.086,444017 (regressionFit = 20.086,444016, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 38,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.078,166710 (regressionFit = 20.078,166709, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 38,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.266,250878 (regressionFit = 20.266,250877, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 30,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.111,741611 (regressionFit = 19.111,741610, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.210,795573 (regressionFit = 20.210,795572, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 34,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.923,363147 (regressionFit = 19.923,363146, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 35,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.599,028826 (regressionFit = 19.599,028825, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 50,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.033,176223 (regressionFit = 20.033,176222, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 36,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.067,644764 (regressionFit = 20.067,644763, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 45,0/388,0 pos, 0,0/0,0 neg]
%     Score = -18.182,114381 (regressionFit = 18.182,114380, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.282,807628 (regressionFit = 20.282,807627, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 97,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.996,817315 (regressionFit = 19.996,817314, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 95,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.044,280061 (regressionFit = 20.044,280060, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 13,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.208,555890 (regressionFit = 20.208,555889, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 13,0/388,0 pos, 0,0/0,0 neg]
%     Score = -16.995,755317 (regressionFit = 16.995,755316, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 88,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.088,754486 (regressionFit = 20.088,754485, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 437).  [covers 14,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.213,411813 (regressionFit = 20.213,411812, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 25,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.780,289898 (regressionFit = 19.780,289897, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 222).  [covers 5,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.268,754834 (regressionFit = 20.268,754833, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 14,0/388,0 pos, 0,0/0,0 neg]
%     Score = -16.995,755317 (regressionFit = 16.995,755316, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 88,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.094,737530 (regressionFit = 20.094,737529, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 7).  [covers 16,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.280,842598 (regressionFit = 20.280,842597, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 30,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.037,595788 (regressionFit = 20.037,595787, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 48,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.757,606524 (regressionFit = 19.757,606523, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
%     Score = -17.059,691061 (regressionFit = 17.059,691060, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 95,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.210,017162 (regressionFit = 20.210,017161, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 43,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.233,365487 (regressionFit = 20.233,365485, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 95,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.095,617711 (regressionFit = 20.095,617710, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.038,123905 (regressionFit = 20.038,123904, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 33,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.259,237409 (regressionFit = 20.259,237408, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -18.031,742571 (regressionFit = 18.031,742570, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.264,032117 (regressionFit = 20.264,032116, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/388,0 pos, 0,0/0,0 neg]
%     Score = -16.448,334076 (regressionFit = 16.448,334075, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.133,796910 (regressionFit = 20.133,796909, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 37,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.675,697803 (regressionFit = 19.675,697802, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 43,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.262,509284 (regressionFit = 20.262,509283, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 42,0/388,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 10).  [covers 41,0/388,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 10).  [covers 41,0/388,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -52,275.
% Will extend: medv(A) :- nox(A, 10).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
Comparing variance: 11.26486615110055 to score=0.0025 #egs=41.0
Comparing variance: 42.38530839934131 to score=0.0025 #egs=347.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 41,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-11,264866)
%         ILP node to extend: medv(A) :- nox(A, 10).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -11,264866) into the LAST position (#3) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 347,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-42,385308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -42,385308) into position #1 in the search queue (new size=4).

% Time for loop #5: 241 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #5, the best clause found is:
%      medv(A) :- nox(A, 10).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
% This clause covers 41 positive examples, of which 41 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 5 18 22 85 116 177 196 199

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 347,0/347,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 347,0/347,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -14.701,355710 (regressionFit = 14.701,355709, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 45,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -14.701,355710): medv(A) :- crim(A, 3).  [covers 45,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.191,644687 (regressionFit = 14.191,644686, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 45,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -14.191,644687): medv(A) :- crim(A, 2).  [covers 45,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.642,604165 (regressionFit = 14.642,604164, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 40,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.579,676799 (regressionFit = 13.579,676798, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 245,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -13.579,676799): medv(A) :- zn(A, 0).  [covers 245,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.677,371055 (regressionFit = 14.677,371054, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 70).  [covers 3,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.224,179040 (regressionFit = 14.224,179039, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.671,392442 (regressionFit = 14.671,392441, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.310,567625 (regressionFit = 14.310,567624, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 21,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.688,288218 (regressionFit = 13.688,288217, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 33,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.693,310337 (regressionFit = 14.693,310336, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 7).  [covers 17,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.422,962216 (regressionFit = 14.422,962215, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 319,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.422,962216 (regressionFit = 14.422,962215, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 28,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.707,661501 (regressionFit = 14.707,661500, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 40,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.136,346827 (regressionFit = 14.136,346826, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.563,202117 (regressionFit = 14.563,202116, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 26,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.318,658759 (regressionFit = 14.318,658758, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 38,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.349,417618 (regressionFit = 14.349,417617, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 40,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.668,412096 (regressionFit = 14.668,412095, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 38,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.484,702479 (regressionFit = 14.484,702478, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 42,0/347,0 pos, 0,0/0,0 neg]
%     Score = -11.286,513309 (regressionFit = 11.286,513307, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 43,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11.286,513309): medv(A) :- rm(A, 4).  [covers 43,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.706,922033 (regressionFit = 14.706,922032, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 38,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.698,017379 (regressionFit = 13.698,017378, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 41,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.688,391438 (regressionFit = 14.688,391437, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 38,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.680,765936 (regressionFit = 14.680,765935, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 29,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.698,334173 (regressionFit = 14.698,334172, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 30,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.935,772824 (regressionFit = 13.935,772822, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 35,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.051,080902 (regressionFit = 14.051,080901, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 44,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.676,109566 (regressionFit = 14.676,109565, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 39,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.674,899493 (regressionFit = 14.674,899492, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 25,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.545,569589 (regressionFit = 14.545,569588, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 26,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.041,692672 (regressionFit = 14.041,692671, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 33,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.643,897880 (regressionFit = 14.643,897879, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 36,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.568,957844 (regressionFit = 14.568,957843, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 42,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.686,325129 (regressionFit = 14.686,325128, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 45,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.698,863563 (regressionFit = 14.698,863562, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 95,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.688,049436 (regressionFit = 14.688,049435, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 18,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.706,362778 (regressionFit = 14.706,362777, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 16,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.188,845060 (regressionFit = 14.188,845059, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 33,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.500,474948 (regressionFit = 14.500,474947, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 97,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.692,697761 (regressionFit = 14.692,697760, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 384).  [covers 11,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.646,268532 (regressionFit = 14.646,268531, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 432).  [covers 9,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.650,126519 (regressionFit = 14.650,126518, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 188).  [covers 7,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.964,547154 (regressionFit = 13.964,547153, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 193).  [covers 6,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.680,367217 (regressionFit = 14.680,367216, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 276).  [covers 6,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.677,371055 (regressionFit = 14.677,371054, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 358).  [covers 3,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.635,042411 (regressionFit = 14.635,042410, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 14,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.706,927388 (regressionFit = 14.706,927387, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 287).  [covers 8,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.145,820633 (regressionFit = 14.145,820632, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 32,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.466,956106 (regressionFit = 14.466,956105, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 40,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.691,988973 (regressionFit = 14.691,988972, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 41,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.288,452876 (regressionFit = 14.288,452875, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 39,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.665,733803 (regressionFit = 14.665,733802, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 48,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.545,304253 (regressionFit = 14.545,304252, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 31,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.705,199475 (regressionFit = 14.705,199474, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 37,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.698,403930 (regressionFit = 14.698,403929, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 41,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.618,419267 (regressionFit = 14.618,419266, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 36,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.668,600937 (regressionFit = 14.668,600936, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 76,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.538,934210 (regressionFit = 14.538,934209, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.464,335248 (regressionFit = 14.464,335247, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 34,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.579,639026 (regressionFit = 13.579,639025, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 40,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.690,998287 (regressionFit = 14.690,998286, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 42,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.865,083245 (regressionFit = 13.865,083244, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 33,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.405,420551 (regressionFit = 14.405,420550, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 38,0/347,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 4).  [covers 43,0/347,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 4).  [covers 43,0/347,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -42,385.
% Will extend: medv(A) :- rm(A, 4).  [covers 43,0/347,0 pos, 0,0/0,0 neg]
Comparing variance: 43.641828015130585 to score=0.0025 #egs=43.0
Comparing variance: 30.95366678565039 to score=0.0025 #egs=304.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 43,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-43,641828)
%         ILP node to extend: medv(A) :- rm(A, 4).  [covers 43,0/347,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -43,641828) into position #1 in the search queue (new size=4).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 304,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-30,953667)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -30,953667) into position #3 in the search queue (new size=5).

% Time for loop #6: 224 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      medv(A) :- rm(A, 4).  [covers 43,0/347,0 pos, 0,0/0,0 neg]
% This clause covers 43 positive examples, of which 43 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 4).  [covers 43,0/43,0 pos, 0,0/0,0 neg]'
%     Score = -11.286,513309 (regressionFit = 11.286,513307, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 43,0/43,0 pos, 0,0/0,0 neg]

% Have these 5 positive seeds: 1 8 9 16 42
% Gleaner: New best node found (score = -11.286,513309): medv(A) :- rm(A, 4).  [covers 43,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.862,566669 (regressionFit = 1.862,566667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 5).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.862,566669): medv(A) :- rm(A, 4), crim(A, 5).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.867,042355 (regressionFit = 1.867,042353, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 6).  [covers 9,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.845,634207 (regressionFit = 1.845,634205, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 1).  [covers 11,0/43,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.845,634207): medv(A) :- rm(A, 4), crim(A, 1).  [covers 11,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.856,071784 (regressionFit = 1.856,071782, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0).  [covers 16,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.870,122669 (regressionFit = 1.870,122667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 80).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 95).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.855,083399 (regressionFit = 1.855,083397, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 20).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), indus(A, 9).  [covers 1,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.848,451507 (regressionFit = 1.848,451505, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), indus(A, 1).  [covers 12,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.855,331592 (regressionFit = 1.855,331590, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 4), indus(A, 4).  [covers 13,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.814,095160 (regressionFit = 1.814,095158, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), chas(A, 0).  [covers 38,0/43,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.814,095160): medv(A) :- rm(A, 4), chas(A, 0).  [covers 38,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.847,902669 (regressionFit = 1.847,902667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 7).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.871,199154 (regressionFit = 1.871,199152, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 6).  [covers 10,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.747,904419 (regressionFit = 1.747,904417, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 8).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.747,904419): medv(A) :- rm(A, 4), nox(A, 8).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.874,734416 (regressionFit = 1.874,734414, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 4).  [covers 6,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 5).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.847,647714 (regressionFit = 1.847,647712, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 8).  [covers 9,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.846,741608 (regressionFit = 1.846,741606, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 10).  [covers 10,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 2).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.875,861861 (regressionFit = 1.875,861859, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 1).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 9).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.865,418699 (regressionFit = 1.865,418697, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 5).  [covers 10,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.773,662669 (regressionFit = 1.773,662667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 8).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.845,245899 (regressionFit = 1.845,245897, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 4).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.846,258899 (regressionFit = 1.846,258897, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 5).  [covers 13,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.845,946419 (regressionFit = 1.845,946417, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 2).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.746,822859 (regressionFit = 1.746,822857, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 3).  [covers 8,0/43,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.746,822859): medv(A) :- rm(A, 4), rad(A, 3).  [covers 8,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 403).  [covers 1,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 329).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 402).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 264).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 270).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.849,392310 (regressionFit = 1.849,392308, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 9).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.858,005092 (regressionFit = 1.858,005090, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 6).  [covers 6,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.869,407714 (regressionFit = 1.869,407712, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 2).  [covers 9,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 9).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.828,377335 (regressionFit = 1.828,377333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 1).  [covers 10,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.875,618160 (regressionFit = 1.875,618158, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 5).  [covers 5,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.861,646476 (regressionFit = 1.861,646474, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 4), b(A, 4).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.517,113335 (regressionFit = 1.517,113333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), lstat(A, 3).  [covers 15,0/43,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.517,113335): medv(A) :- rm(A, 4), lstat(A, 3).  [covers 15,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.869,821669 (regressionFit = 1.869,821667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), lstat(A, 2).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), lstat(A, 10).  [covers 1,0/43,0 pos, 0,0/0,0 neg]
%     Score = -1.867,888002 (regressionFit = 1.867,888000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), lstat(A, 1).  [covers 13,0/43,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 4), lstat(A, 3).  [covers 15,0/43,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 4), lstat(A, 3).  [covers 15,0/43,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -43,642.
% Will extend: medv(A) :- rm(A, 4), lstat(A, 3).  [covers 15,0/43,0 pos, 0,0/0,0 neg]
Comparing variance: 26.072888888888944 to score=0.0025 #egs=15.0
Comparing variance: 40.21499999999131 to score=0.0025 #egs=28.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 15,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-26,072889)
%         ILP node to extend: medv(A) :- rm(A, 4), lstat(A, 3).  [covers 15,0/43,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -26,072889) into position #4 in the search queue (new size=5).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 28,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-40,215000)
%         ILP node to extend: medv(A) :- rm(A, 4).  [covers 43,0/43,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -40,215000) into position #1 in the search queue (new size=6).

% Time for loop #7: 115 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      medv(A) :- rm(A, 4), lstat(A, 3).  [covers 15,0/43,0 pos, 0,0/0,0 neg]
% This clause covers 15 positive examples, of which 15 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 4).  [covers 43,0/28,0 pos, 0,0/0,0 neg]'
%     Score = -11.286,513309 (regressionFit = 11.286,513307, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 28,0/28,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 5 8 9 14 19 21 22 24
% Gleaner: New best node found (score = -11.286,513309): medv(A) :- rm(A, 4).  [covers 28,0/28,0 pos, 0,0/0,0 neg]
%     Score = -864,684548 (regressionFit = 864,684545, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 2).  [covers 6,0/28,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -864,684548): medv(A) :- rm(A, 4), crim(A, 2).  [covers 6,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 7).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.123,093069 (regressionFit = 1.123,093067, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 5).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.118,792269 (regressionFit = 1.118,792267, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 1).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 10).  [covers 2,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.069,667085 (regressionFit = 1.069,667083, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 3).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 45).  [covers 2,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.070,294258 (regressionFit = 1.070,294256, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0).  [covers 13,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 90).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 40).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.025,661780 (regressionFit = 1.025,661778, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 4), indus(A, 4).  [covers 10,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.126,017085 (regressionFit = 1.126,017083, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), indus(A, 2).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.039,773002 (regressionFit = 1.039,773000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), indus(A, 1).  [covers 8,0/28,0 pos, 0,0/0,0 neg]
%     Score = -655,526669 (regressionFit = 655,526667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), indus(A, 10).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -655,526669): medv(A) :- rm(A, 4), indus(A, 10).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), chas(A, 0).  [covers 26,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), chas(A, 1).  [covers 2,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.109,648524 (regressionFit = 1.109,648522, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 5).  [covers 5,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.122,648335 (regressionFit = 1.122,648333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 3).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.120,174089 (regressionFit = 1.120,174087, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 6).  [covers 5,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 9).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.102,917085 (regressionFit = 1.102,917083, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 2).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.057,292729 (regressionFit = 1.057,292727, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 10).  [covers 6,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 9).  [covers 2,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 2).  [covers 2,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.110,246669 (regressionFit = 1.110,246667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 8).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -997,395002 (regressionFit = 997,395000, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 4), age(A, 4).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.096,267085 (regressionFit = 1.096,267083, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 1).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.099,685393 (regressionFit = 1.099,685391, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 3).  [covers 5,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.075,713335 (regressionFit = 1.075,713333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 6).  [covers 6,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.124,608335 (regressionFit = 1.124,608333, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 4).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.123,981517 (regressionFit = 1.123,981515, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 5).  [covers 6,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 9).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.069,371581 (regressionFit = 1.069,371579, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 5).  [covers 9,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.111,202402 (regressionFit = 1.111,202400, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 8).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.118,792269 (regressionFit = 1.118,792267, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 1).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -655,526669 (regressionFit = 655,526667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 24).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -959,417085 (regressionFit = 959,417083, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 3).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 398).  [covers 2,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 307).  [covers 2,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 285).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 335).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -655,526669 (regressionFit = 655,526667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 666).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 233).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 222).  [covers 2,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.004,974252 (regressionFit = 1.004,974250, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 1).  [covers 8,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.107,817085 (regressionFit = 1.107,817083, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 6).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 8).  [covers 2,0/28,0 pos, 0,0/0,0 neg]
%     Score = -655,526669 (regressionFit = 655,526667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 10).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.093,820002 (regressionFit = 1.093,820000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 2).  [covers 5,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 3).  [covers 2,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 8).  [covers 2,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.123,869602 (regressionFit = 1.123,869600, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 2).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.115,326972 (regressionFit = 1.115,326970, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 6).  [covers 6,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.023,144269 (regressionFit = 1.023,144267, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 3).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -655,526669 (regressionFit = 655,526667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 7).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 5).  [covers 2,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.048,876350 (regressionFit = 1.048,876348, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 1).  [covers 5,0/28,0 pos, 0,0/0,0 neg]
%     Score = -935,769335 (regressionFit = 935,769333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), lstat(A, 1).  [covers 13,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.093,730402 (regressionFit = 1.093,730400, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), lstat(A, 8).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.124,526669 (regressionFit = 1.124,526667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), lstat(A, 2).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -655,526669 (regressionFit = 655,526667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), lstat(A, 5).  [covers 3,0/28,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 4), indus(A, 10).  [covers 3,0/28,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 4), indus(A, 10).  [covers 3,0/28,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -40,215.
% Will extend: medv(A) :- rm(A, 4), indus(A, 10).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #8: 116 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      medv(A) :- rm(A, 4), indus(A, 10).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (medv(A) :- tax(A, 264))
Created a leaf under (medv(A) :- rm(A, 4))
Created a leaf under (medv(A) :- lstat(A, 3))
Created a leaf under (medv(A) :- lstat(A, 3))
Created a leaf under (medv(A) :- nox(A, 10))

%%%%%  WILL-Produced Tree #2 @ 14:10:02 10/20/22.  %%%%%


% FOR medv(A):
%   if ( rm(A, 3) )
%   then if ( lstat(A, 3) )
%   | then return 43.94230769230769;  // std dev = 5,156, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( tax(A, 264) )
%   | | then if ( dis(A, 8) )
%   | | | then return 34.96666666666667;  // std dev = 8,958, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 43.260000000000005;  // std dev = 14,661, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 30.771431605010545;  // std dev = 5,971, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( nox(A, 10) )
%   | then return 9.458579055513477;  // std dev = 3,356, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( rm(A, 4) )
%   | | then if ( lstat(A, 3) )
%   | | | then return 33.56666666666666;  // std dev = 5,106, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else if ( indus(A, 10) )
%   | | | | then return 15.666666666670077;  // std dev = 13,867, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 28.920000000002595;  // std dev = 21,523, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 20.086513160138235;  // std dev = 5,564, 304,000 (wgt'ed) examples reached here.  /* #pos=304 */


% Clauses:

medv(A, 43.94230769230769) :- 
     rm(A, 3), 
     lstat(A, 3), 
     !. // Clause #1.

medv(A, 34.96666666666667) :- 
     rm(A, 3), 
     tax(A, 264), 
     dis(A, 8), 
     !. // Clause #2.

medv(A, 43.260000000000005) :- 
     rm(A, 3), 
     tax(A, 264), 
     !. // Clause #3.

medv(A, 30.771431605010545) :- 
     rm(A, 3), 
     !. // Clause #4.

medv(A, 9.458579055513477) :- 
     nox(A, 10), 
     !. // Clause #5.

medv(A, 33.56666666666666) :- 
     rm(A, 4), 
     lstat(A, 3), 
     !. // Clause #6.

medv(A, 15.666666666670077) :- 
     rm(A, 4), 
     indus(A, 10), 
     !. // Clause #7.

medv(A, 28.920000000002595) :- 
     rm(A, 4), 
     !. // Clause #8.

medv(A, 20.086513160138235) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_medv(a, 43.94230769230769) :-  /* #pos=26 */ 
   rm(a, 3),
   lstat(a, 3),
   !. // Flattened version of clause #1.

flattened_medv(a, 34.96666666666667) :-  /* #pos=3 */ 
   rm(a, 3),
   tax(a, 264),
   dis(a, 8),
   !. // Flattened version of clause #2.

flattened_medv(a, 43.260000000000005) :-  /* #pos=5 */ 
   rm(a, 3),
   tax(a, 264),
   !. // Flattened version of clause #3.

flattened_medv(a, 30.771431605010545) :-  /* #pos=14 */ 
   rm(a, 3),
   !. // Flattened version of clause #4.

flattened_medv(a, 9.458579055513477) :-  /* #pos=41 */ 
   nox(a, 10),
   !. // Flattened version of clause #5.

flattened_medv(a, 33.56666666666666) :-  /* #pos=15 */ 
   rm(a, 4),
   lstat(a, 3),
   !. // Flattened version of clause #6.

flattened_medv(a, 15.666666666670077) :-  /* #pos=3 */ 
   rm(a, 4),
   indus(a, 10),
   !. // Flattened version of clause #7.

flattened_medv(a, 28.920000000002595) :-  /* #pos=25 */ 
   rm(a, 4),
   !. // Flattened version of clause #8.

flattened_medv(underscore, 20.086513160138235) :-  /* #pos=304 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   rm(a, 3)
%   tax(a, 264)
%   dis(a, 8)
%   indus(a, 10)
%   lstat(a, 3)
%   nox(a, 10)
%   rm(a, 4)

% Saving model in: data/boston_housing/train/models/bRDNs/medv.model.ckpt
% Time taken to learn 2 trees is 2,382 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:40.21499999999105
Set score:0.0025
% Kept 436 of the 436 positive examples.
% Kept 0 of the 0 negative examples.
% Dataset size: 436
Computing probabilities
prob time:292 milliseconds
No hidden examples for : medv
Time to build dataset: 296 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:90.91398929222771
Set score:0.0025

% Have these 8 positive seeds: 14 29 96 104 158 223 237 324

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -39.638,468158 (regressionFit = 39.638,468157, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -39.638,468158): medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.882,625337 (regressionFit = 38.882,625336, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -38.882,625337): medv(A) :- crim(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.633,240558 (regressionFit = 37.633,240557, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -37.633,240558): medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.808,651303 (regressionFit = 38.808,651302, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.630,944809 (regressionFit = 38.630,944808, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 9).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -34.695,563001 (regressionFit = 34.695,563000, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -34.695,563001): medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.996,512517 (regressionFit = 38.996,512516, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 45).  [covers 6,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.611,954905 (regressionFit = 39.611,954904, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 60).  [covers 4,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.635,842998 (regressionFit = 39.635,842997, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 30).  [covers 6,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.590,024401 (regressionFit = 39.590,024400, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 34).  [covers 3,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.505,053773 (regressionFit = 39.505,053772, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.062,758162 (regressionFit = 39.062,758161, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 21,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.297,050045 (regressionFit = 36.297,050044, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.638,397798 (regressionFit = 39.638,397797, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.605,364992 (regressionFit = 38.605,364991, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.338,864440 (regressionFit = 33.338,864439, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -33.338,864440): medv(A) :- indus(A, 10).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.577,903998 (regressionFit = 38.577,903997, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 401,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.737,679693 (regressionFit = 38.737,679692, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.461,939141 (regressionFit = 39.461,939140, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.428,299298 (regressionFit = 39.428,299297, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.241,492652 (regressionFit = 38.241,492651, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -32.266,679045 (regressionFit = 32.266,679044, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -32.266,679045): medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.337,639537 (regressionFit = 39.337,639536, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.918,693675 (regressionFit = 38.918,693674, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.701,638088 (regressionFit = 37.701,638087, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.236,069993 (regressionFit = 39.236,069992, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.591,251033 (regressionFit = 39.591,251032, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.264,324989 (regressionFit = 39.264,324988, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.446,839827 (regressionFit = 39.446,839826, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.506,152854 (regressionFit = 38.506,152853, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.756,088522 (regressionFit = 38.756,088521, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.604,062459 (regressionFit = 39.604,062458, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.019,388867 (regressionFit = 39.019,388866, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.398,550875 (regressionFit = 39.398,550874, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.463,716795 (regressionFit = 39.463,716794, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.980,541897 (regressionFit = 38.980,541896, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.608,466078 (regressionFit = 39.608,466077, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.266,455870 (regressionFit = 37.266,455869, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.569,949878 (regressionFit = 39.569,949877, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 18,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.277,358949 (regressionFit = 39.277,358948, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 23,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.686,454044 (regressionFit = 38.686,454043, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.533,010433 (regressionFit = 39.533,010432, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 15,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.323,052849 (regressionFit = 39.323,052848, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 16,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.459,259952 (regressionFit = 39.459,259951, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 101,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.338,864440 (regressionFit = 33.338,864439, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.527,726498 (regressionFit = 39.527,726497, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 432).  [covers 9,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.539,402675 (regressionFit = 39.539,402674, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 188).  [covers 7,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.420,217773 (regressionFit = 39.420,217772, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 398).  [covers 12,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 265).  [covers 2,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.634,685192 (regressionFit = 39.634,685191, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 300).  [covers 7,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.358,079277 (regressionFit = 39.358,079276, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 329).  [covers 6,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.497,238965 (regressionFit = 39.497,238964, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 14,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.338,864440 (regressionFit = 33.338,864439, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.966,688038 (regressionFit = 38.966,688037, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.637,264031 (regressionFit = 39.637,264030, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.780,620081 (regressionFit = 38.780,620080, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.628,749895 (regressionFit = 38.628,749894, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.612,829722 (regressionFit = 39.612,829721, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.258,024658 (regressionFit = 33.258,024657, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 97,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.576,713512 (regressionFit = 39.576,713511, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 27,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.737,874026 (regressionFit = 38.737,874025, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.618,245000 (regressionFit = 39.618,244999, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.164,167216 (regressionFit = 39.164,167215, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.108,046455 (regressionFit = 39.108,046454, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.157,831189 (regressionFit = 39.157,831188, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 102,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.589,839749 (regressionFit = 39.589,839748, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.001,294506 (regressionFit = 38.001,294505, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 38,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.800,377473 (regressionFit = 38.800,377472, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -24.407,574440 (regressionFit = 24.407,574439, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -24.407,574440): medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.918,361290 (regressionFit = 37.918,361289, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.454,238099 (regressionFit = 36.454,238098, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
Comparing variance: 70.95607843137188 to score=0.0025 #egs=51.0
Comparing variance: 53.99692061997749 to score=0.0025 #egs=385.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 51,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-70,956078)
%         ILP node to extend: medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -70,956078) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 385,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-53,996921)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -53,996921) into the LAST position (#2) in the search queue.

% Time for loop #1: 316 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
% This clause covers 51 positive examples, of which 51 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- lstat(A, 3).  [covers 51,0/51,0 pos, 0,0/0,0 neg]'
%     Score = -24.407,574440 (regressionFit = 24.407,574439, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 51,0/51,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 5 10 12 14 21 24 26 43
% Gleaner: New best node found (score = -24.407,574440): medv(A) :- lstat(A, 3).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.617,686785 (regressionFit = 3.617,686783, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 6).  [covers 5,0/51,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.617,686785): medv(A) :- lstat(A, 3), crim(A, 6).  [covers 5,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.438,595099 (regressionFit = 3.438,595097, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 1).  [covers 20,0/51,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.438,595099): medv(A) :- lstat(A, 3), crim(A, 1).  [covers 20,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.443,743194 (regressionFit = 3.443,743191, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 5).  [covers 4,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.547,712567 (regressionFit = 3.547,712565, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 2).  [covers 5,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 9).  [covers 2,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.993,288716 (regressionFit = 2.993,288714, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0).  [covers 21,0/51,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.993,288716): medv(A) :- lstat(A, 3), zn(A, 0).  [covers 21,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.486,745393 (regressionFit = 3.486,745391, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 80).  [covers 5,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.598,227077 (regressionFit = 3.598,227074, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 95).  [covers 4,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.462,572502 (regressionFit = 3.462,572500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 22).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.606,431460 (regressionFit = 3.606,431458, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 90).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.587,213844 (regressionFit = 3.587,213842, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 1).  [covers 14,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.618,718275 (regressionFit = 3.618,718273, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 2).  [covers 11,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.362,429567 (regressionFit = 3.362,429565, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 5).  [covers 5,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.419,136412 (regressionFit = 3.419,136410, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 4).  [covers 12,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.260,612502 (regressionFit = 3.260,612500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 10).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.300,945496 (regressionFit = 3.300,945494, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), chas(A, 0).  [covers 43,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.300,945496 (regressionFit = 3.300,945494, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), chas(A, 1).  [covers 8,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.576,370392 (regressionFit = 3.576,370390, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 4).  [covers 7,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.559,732224 (regressionFit = 3.559,732222, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 6).  [covers 15,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 3).  [covers 2,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.257,638606 (regressionFit = 3.257,638604, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 5).  [covers 7,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.260,612502 (regressionFit = 3.260,612500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 8).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -1.989,521064 (regressionFit = 1.989,521062, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 3).  [covers 26,0/51,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.989,521064): medv(A) :- lstat(A, 3), rm(A, 3).  [covers 26,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.122,336391 (regressionFit = 3.122,336389, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 4).  [covers 15,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.549,313194 (regressionFit = 3.549,313191, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 1).  [covers 4,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.561,100465 (regressionFit = 3.561,100463, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 8).  [covers 14,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.247,586334 (regressionFit = 3.247,586332, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 10).  [covers 14,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.579,713127 (regressionFit = 3.579,713125, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 4).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.183,599176 (regressionFit = 3.183,599174, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 5).  [covers 5,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.363,084523 (regressionFit = 3.363,084521, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 6).  [covers 4,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.167,018607 (regressionFit = 3.167,018605, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 5).  [covers 8,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.581,865643 (regressionFit = 3.581,865641, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 2).  [covers 12,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.616,267822 (regressionFit = 3.616,267820, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 4).  [covers 8,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.589,605002 (regressionFit = 3.589,605000, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 3).  [covers 9,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.260,612502 (regressionFit = 3.260,612500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 10).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.581,998606 (regressionFit = 3.581,998604, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 3).  [covers 7,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.614,848524 (regressionFit = 3.614,848522, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 2).  [covers 5,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.458,444612 (regressionFit = 3.458,444610, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 4).  [covers 10,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.516,918963 (regressionFit = 3.516,918961, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 8).  [covers 7,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.462,572502 (regressionFit = 3.462,572500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 7).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.260,612502 (regressionFit = 3.260,612500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 24).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 193).  [covers 1,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 329).  [covers 1,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 402).  [covers 2,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 224).  [covers 2,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.516,918963 (regressionFit = 3.516,918961, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 307).  [covers 7,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.462,572502 (regressionFit = 3.462,572500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 330).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 244).  [covers 1,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.260,612502 (regressionFit = 3.260,612500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 666).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.563,536194 (regressionFit = 3.563,536192, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 2).  [covers 8,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.810,910194 (regressionFit = 2.810,910192, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 9).  [covers 12,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.616,241100 (regressionFit = 3.616,241098, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 6).  [covers 10,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.362,429567 (regressionFit = 3.362,429565, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 5).  [covers 5,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.468,247939 (regressionFit = 3.468,247937, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 1).  [covers 9,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.260,612502 (regressionFit = 3.260,612500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 10).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.597,765496 (regressionFit = 3.597,765494, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 2).  [covers 8,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.046,957953 (regressionFit = 3.046,957951, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 1).  [covers 10,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.554,940258 (regressionFit = 3.554,940256, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 5).  [covers 12,0/51,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3), rm(A, 3).  [covers 26,0/51,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3), rm(A, 3).  [covers 26,0/51,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -70,956.
% Will extend: medv(A) :- lstat(A, 3), rm(A, 3).  [covers 26,0/51,0 pos, 0,0/0,0 neg]
Comparing variance: 26.586286982248566 to score=0.0025 #egs=26.0
Comparing variance: 51.93110400000034 to score=0.0025 #egs=25.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 26,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-26,586287)
%         ILP node to extend: medv(A) :- lstat(A, 3), rm(A, 3).  [covers 26,0/51,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -26,586287) into the LAST position (#2) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 25,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-51,931104)
%         ILP node to extend: medv(A) :- lstat(A, 3).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -51,931104) into position #2 in the search queue (new size=3).

% Time for loop #2: 98 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      medv(A) :- lstat(A, 3), rm(A, 3).  [covers 26,0/51,0 pos, 0,0/0,0 neg]
% This clause covers 26 positive examples, of which 26 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 59 77 81 98 125 178 273 274

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 385,0/385,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 385,0/385,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -20.787,485384 (regressionFit = 20.787,485383, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 45,0/385,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20.787,485384): medv(A) :- crim(A, 5).  [covers 45,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.592,151518 (regressionFit = 19.592,151517, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 46,0/385,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19.592,151518): medv(A) :- crim(A, 2).  [covers 46,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.443,603286 (regressionFit = 20.443,603285, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 38,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.355,412945 (regressionFit = 20.355,412944, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 38,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.840,224576 (regressionFit = 19.840,224575, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 9).  [covers 30,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.672,373597 (regressionFit = 20.672,373596, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 29,0/385,0 pos, 0,0/0,0 neg]
%     Score = -17.606,823837 (regressionFit = 17.606,823836, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 286,0/385,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -17.606,823837): medv(A) :- zn(A, 0).  [covers 286,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.627,074124 (regressionFit = 20.627,074123, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 24,0/385,0 pos, 0,0/0,0 neg]
%     Score = -17.938,597063 (regressionFit = 17.938,597062, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 37,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.629,604454 (regressionFit = 20.629,604453, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.361,811893 (regressionFit = 20.361,811892, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 40,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.706,211621 (regressionFit = 20.706,211620, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 7).  [covers 17,0/385,0 pos, 0,0/0,0 neg]
%     Score = -16.062,822220 (regressionFit = 16.062,822219, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 87,0/385,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -16.062,822220): medv(A) :- indus(A, 10).  [covers 87,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.611,929570 (regressionFit = 20.611,929569, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 27,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.611,929570 (regressionFit = 20.611,929569, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 358,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.864,201028 (regressionFit = 19.864,201027, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 42,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.691,830905 (regressionFit = 20.691,830904, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 41,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.565,798941 (regressionFit = 20.565,798940, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 46,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.399,239051 (regressionFit = 20.399,239050, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 43,0/385,0 pos, 0,0/0,0 neg]
%     Score = -15.647,646687 (regressionFit = 15.647,646686, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 10).  [covers 42,0/385,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -15.647,646687): medv(A) :- nox(A, 10).  [covers 42,0/385,0 pos, 0,0/0,0 neg]
%     Score = -18.877,291830 (regressionFit = 18.877,291829, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 43,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.652,385028 (regressionFit = 20.652,385027, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 45,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.678,469762 (regressionFit = 19.678,469761, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 31,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.012,626310 (regressionFit = 20.012,626309, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 44,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.321,786012 (regressionFit = 20.321,786011, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 36,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.706,616491 (regressionFit = 20.706,616490, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 39,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.723,117990 (regressionFit = 20.723,117989, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 38,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.559,699110 (regressionFit = 20.559,699109, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 34,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.345,487093 (regressionFit = 20.345,487092, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 42,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.944,962520 (regressionFit = 19.944,962519, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 36,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.785,850883 (regressionFit = 20.785,850882, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 37,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.116,637484 (regressionFit = 19.116,637483, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 48,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.174,127869 (regressionFit = 20.174,127868, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 28,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.414,782775 (regressionFit = 20.414,782774, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 37,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.691,178982 (regressionFit = 20.691,178981, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 41,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.362,698113 (regressionFit = 19.362,698112, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 42,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.677,427239 (regressionFit = 20.677,427238, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 38,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.961,401920 (regressionFit = 19.961,401919, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 98,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.754,720608 (regressionFit = 20.754,720607, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 91,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.480,012733 (regressionFit = 20.480,012732, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 17,0/385,0 pos, 0,0/0,0 neg]
%     Score = -16.062,822220 (regressionFit = 16.062,822219, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 87,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.627,074124 (regressionFit = 20.627,074123, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 24,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.655,445144 (regressionFit = 20.655,445143, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 296).  [covers 8,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.779,414041 (regressionFit = 20.779,414040, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 32,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.733,300077 (regressionFit = 20.733,300076, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 289).  [covers 5,0/385,0 pos, 0,0/0,0 neg]
%     Score = -16.062,822220 (regressionFit = 16.062,822219, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 87,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.155,005494 (regressionFit = 20.155,005493, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 38,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.350,418435 (regressionFit = 20.350,418434, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 38,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.527,822604 (regressionFit = 20.527,822603, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 32,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.092,395394 (regressionFit = 20.092,395393, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 36,0/385,0 pos, 0,0/0,0 neg]
%     Score = -16.183,735579 (regressionFit = 16.183,735578, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 94,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.724,309893 (regressionFit = 20.724,309892, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 40,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.679,657009 (regressionFit = 20.679,657008, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 32,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.368,584294 (regressionFit = 20.368,584293, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 42,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.671,634485 (regressionFit = 20.671,634484, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 44,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.756,559010 (regressionFit = 20.756,559008, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 37,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.770,604046 (regressionFit = 20.770,604045, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.722,655247 (regressionFit = 20.722,655246, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 44,0/385,0 pos, 0,0/0,0 neg]
%     Score = -18.788,262878 (regressionFit = 18.788,262877, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 46,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.943,651658 (regressionFit = 19.943,651657, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.073,102762 (regressionFit = 20.073,102761, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 38,0/385,0 pos, 0,0/0,0 neg]
%     Score = -18.971,575572 (regressionFit = 18.971,575571, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 39,0/385,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 10).  [covers 42,0/385,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 10).  [covers 42,0/385,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -53,997.
% Will extend: medv(A) :- nox(A, 10).  [covers 42,0/385,0 pos, 0,0/0,0 neg]
Comparing variance: 11.476031745332214 to score=0.0025 #egs=42.0
Comparing variance: 44.214732806908415 to score=0.0025 #egs=343.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 42,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-11,476032)
%         ILP node to extend: medv(A) :- nox(A, 10).  [covers 42,0/385,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -11,476032) into the LAST position (#3) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 343,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-44,214733)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -44,214733) into position #2 in the search queue (new size=4).

% Time for loop #3: 189 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      medv(A) :- nox(A, 10).  [covers 42,0/385,0 pos, 0,0/0,0 neg]
% This clause covers 42 positive examples, of which 42 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- lstat(A, 3).  [covers 51,0/25,0 pos, 0,0/0,0 neg]'
%     Score = -24.407,574440 (regressionFit = 24.407,574439, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 25,0/25,0 pos, 0,0/0,0 neg]

% Have these 6 positive seeds: 5 6 8 18 20 22
% Gleaner: New best node found (score = -24.407,574440): medv(A) :- lstat(A, 3).  [covers 25,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 7).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 4).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 6).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 9).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.178,559938 (regressionFit = 1.178,559936, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 1).  [covers 12,0/25,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.178,559938): medv(A) :- lstat(A, 3), crim(A, 1).  [covers 12,0/25,0 pos, 0,0/0,0 neg]
%     Score = -922,002145 (regressionFit = 922,002143, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -922,002145): medv(A) :- lstat(A, 3), zn(A, 0).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 22).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.293,878184 (regressionFit = 1.293,878182, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 40).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 75).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.289,130002 (regressionFit = 1.289,130000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 2).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.237,042383 (regressionFit = 1.237,042381, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 5).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -385,389548 (regressionFit = 385,389545, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 10).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -385,389548): medv(A) :- lstat(A, 3), indus(A, 10).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.212,832066 (regressionFit = 1.212,832063, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 4).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.291,308002 (regressionFit = 1.291,308000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 1).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.013,077026 (regressionFit = 1.013,077024, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), chas(A, 0).  [covers 21,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.013,077026 (regressionFit = 1.013,077024, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), chas(A, 1).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 4).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.214,738002 (regressionFit = 1.214,738000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 5).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.297,394002 (regressionFit = 1.297,394000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 2).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -385,389548 (regressionFit = 385,389545, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 8).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.272,708573 (regressionFit = 1.272,708571, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 1).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 2).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.265,797335 (regressionFit = 1.265,797333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 4).  [covers 15,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.134,394933 (regressionFit = 1.134,394931, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 10).  [covers 9,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.274,855002 (regressionFit = 1.274,855000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 8).  [covers 8,0/25,0 pos, 0,0/0,0 neg]
%     Score = -680,280002 (regressionFit = 680,280000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 5).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.292,492578 (regressionFit = 1.292,492576, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 3).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 4).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.227,886581 (regressionFit = 1.227,886579, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 5).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 1).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -385,389548 (regressionFit = 385,389545, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 10).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.291,939288 (regressionFit = 1.291,939286, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 2).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.208,749526 (regressionFit = 1.208,749524, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 3).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 8).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 7).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.165,673256 (regressionFit = 1.165,673254, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 4).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -385,389548 (regressionFit = 385,389545, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 24).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.297,868002 (regressionFit = 1.297,868000, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 3).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 307).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 330).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.293,878184 (regressionFit = 1.293,878182, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 254).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -385,389548 (regressionFit = 385,389545, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 666).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 252).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 222).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.290,402383 (regressionFit = 1.290,402381, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 6).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.237,042383 (regressionFit = 1.237,042381, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 5).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.288,113216 (regressionFit = 1.288,113214, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 2).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -385,389548 (regressionFit = 385,389545, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 10).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.250,697026 (regressionFit = 1.250,697024, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 3).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.237,000265 (regressionFit = 1.237,000263, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 5).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.186,773216 (regressionFit = 1.186,773214, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 8).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.183,496113 (regressionFit = 1.183,496111, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 1).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 4).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 3).  [covers 1,0/25,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3), indus(A, 10).  [covers 3,0/25,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3), indus(A, 10).  [covers 3,0/25,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -51,931.
% Will extend: medv(A) :- lstat(A, 3), indus(A, 10).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
Comparing variance: 0.0 to score=0.0025 #egs=3.0
Comparing variance: 17.517706611570414 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 3,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 22,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-17,517707)
%         ILP node to extend: medv(A) :- lstat(A, 3).  [covers 25,0/25,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -17,517707) into position #3 in the search queue (new size=4).

% Time for loop #4: 40 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      medv(A) :- lstat(A, 3), indus(A, 10).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 3 46 48 52 174 201 242 253

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 343,0/343,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 343,0/343,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -15.157,157833 (regressionFit = 15.157,157832, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 45,0/343,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -15.157,157833): medv(A) :- crim(A, 3).  [covers 45,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.101,002647 (regressionFit = 15.101,002646, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 45,0/343,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -15.101,002647): medv(A) :- crim(A, 5).  [covers 45,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.869,116114 (regressionFit = 14.869,116113, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 27,0/343,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -14.869,116114): medv(A) :- crim(A, 8).  [covers 27,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.097,173308 (regressionFit = 15.097,173307, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 29,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.058,604257 (regressionFit = 15.058,604256, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 38,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.997,047740 (regressionFit = 14.997,047739, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 9).  [covers 16,0/343,0 pos, 0,0/0,0 neg]
%     Score = -13.354,390844 (regressionFit = 13.354,390843, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 244,0/343,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -13.354,390844): medv(A) :- zn(A, 0).  [covers 244,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.121,796558 (regressionFit = 15.121,796557, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 80).  [covers 9,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.674,431163 (regressionFit = 14.674,431162, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.794,488393 (regressionFit = 14.794,488392, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 24,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.164,118154 (regressionFit = 15.164,118153, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 43,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.125,572930 (regressionFit = 15.125,572929, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 35,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.308,369853 (regressionFit = 14.308,369852, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 45,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.124,190845 (regressionFit = 15.124,190844, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 316,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.124,190845 (regressionFit = 15.124,190844, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 27,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.164,226017 (regressionFit = 15.164,226016, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 41,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.571,290890 (regressionFit = 14.571,290889, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 46,0/343,0 pos, 0,0/0,0 neg]
%     Score = -13.606,634464 (regressionFit = 13.606,634463, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 42,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.066,119724 (regressionFit = 15.066,119723, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 33,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.862,514892 (regressionFit = 14.862,514891, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 33,0/343,0 pos, 0,0/0,0 neg]
%     Score = -13.989,247430 (regressionFit = 13.989,247429, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 28,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.937,951778 (regressionFit = 14.937,951777, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 42,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.414,002782 (regressionFit = 14.414,002781, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 29,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.145,296150 (regressionFit = 14.145,296149, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 41,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.857,222377 (regressionFit = 14.857,222376, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 34,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.140,405771 (regressionFit = 15.140,405770, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 37,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.124,574059 (regressionFit = 15.124,574058, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 38,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.165,356275 (regressionFit = 15.165,356274, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 37,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.111,315489 (regressionFit = 15.111,315488, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 34,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.103,219907 (regressionFit = 15.103,219906, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 39,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.942,544404 (regressionFit = 14.942,544403, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 29,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.927,536826 (regressionFit = 14.927,536825, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 35,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.164,523008 (regressionFit = 15.164,523007, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 32,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.846,956858 (regressionFit = 14.846,956857, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 28,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.143,527108 (regressionFit = 15.143,527107, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 38,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.959,698660 (regressionFit = 14.959,698659, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 28,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.039,495494 (regressionFit = 15.039,495493, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 37,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.138,236415 (regressionFit = 15.138,236414, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 27,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.958,073634 (regressionFit = 14.958,073633, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 98,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.758,250401 (regressionFit = 14.758,250400, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 91,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.308,369853 (regressionFit = 14.308,369852, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 45,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.150,092389 (regressionFit = 15.150,092388, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 384).  [covers 11,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.051,595677 (regressionFit = 15.051,595676, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 32,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.794,488393 (regressionFit = 14.794,488392, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 24,0/343,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 245).  [covers 1,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.083,533260 (regressionFit = 15.083,533259, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 13,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.308,369853 (regressionFit = 14.308,369852, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 45,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.597,199487 (regressionFit = 14.597,199486, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 32,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.877,100996 (regressionFit = 14.877,100995, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 38,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.163,681122 (regressionFit = 15.163,681121, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 37,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.114,053227 (regressionFit = 15.114,053226, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 47,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.259,930126 (regressionFit = 14.259,930125, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 52,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.156,517660 (regressionFit = 15.156,517659, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 24,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.153,916124 (regressionFit = 15.153,916123, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 72,0/343,0 pos, 0,0/0,0 neg]
%     Score = -13.723,609072 (regressionFit = 13.723,609071, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 29,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.140,265178 (regressionFit = 15.140,265177, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 42,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.026,211540 (regressionFit = 15.026,211539, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 42,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.164,100558 (regressionFit = 15.164,100557, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 34,0/343,0 pos, 0,0/0,0 neg]
%     Score = -13.885,187831 (regressionFit = 13.885,187830, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 46,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.761,350208 (regressionFit = 14.761,350207, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/343,0 pos, 0,0/0,0 neg]
%     Score = -13.619,448570 (regressionFit = 13.619,448569, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 25,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.314,647208 (regressionFit = 14.314,647207, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 33,0/343,0 pos, 0,0/0,0 neg]
%     Score = -12.784,043436 (regressionFit = 12.784,043435, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 49,0/343,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -12.784,043436): medv(A) :- lstat(A, 1).  [covers 49,0/343,0 pos, 0,0/0,0 neg]
%     Score = -15.164,868441 (regressionFit = 15.164,868440, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 44,0/343,0 pos, 0,0/0,0 neg]
%     Score = -14.992,832886 (regressionFit = 14.992,832885, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/343,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 1).  [covers 49,0/343,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 1).  [covers 49,0/343,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -44,215.
% Will extend: medv(A) :- lstat(A, 1).  [covers 49,0/343,0 pos, 0,0/0,0 neg]
Comparing variance: 39.45918367346954 to score=0.0025 #egs=49.0
Comparing variance: 36.906610324401555 to score=0.0025 #egs=294.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 49,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-39,459184)
%         ILP node to extend: medv(A) :- lstat(A, 1).  [covers 49,0/343,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -39,459184) into position #1 in the search queue (new size=4).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 294,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-36,906610)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -36,906610) into position #2 in the search queue (new size=5).

% Time for loop #5: 180 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #5, the best clause found is:
%      medv(A) :- lstat(A, 1).  [covers 49,0/343,0 pos, 0,0/0,0 neg]
% This clause covers 49 positive examples, of which 49 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- lstat(A, 1).  [covers 49,0/49,0 pos, 0,0/0,0 neg]'
%     Score = -12.784,043436 (regressionFit = 12.784,043435, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 49,0/49,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 3 8 10 13 14 15 18 36
% Gleaner: New best node found (score = -12.784,043436): medv(A) :- lstat(A, 1).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.857,700959 (regressionFit = 1.857,700957, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), crim(A, 2).  [covers 11,0/49,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.857,700959): medv(A) :- lstat(A, 1), crim(A, 2).  [covers 11,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.874,427275 (regressionFit = 1.874,427273, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), crim(A, 7).  [covers 5,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.899,694850 (regressionFit = 1.899,694848, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), crim(A, 3).  [covers 8,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.910,412627 (regressionFit = 1.910,412625, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), zn(A, 0).  [covers 23,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.840,643190 (regressionFit = 1.840,643188, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), zn(A, 45).  [covers 3,0/49,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.840,643190): medv(A) :- lstat(A, 1), zn(A, 45).  [covers 3,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), zn(A, 30).  [covers 1,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), zn(A, 22).  [covers 1,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.929,079060 (regressionFit = 1.929,079058, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), zn(A, 40).  [covers 3,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.871,364060 (regressionFit = 1.871,364058, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), zn(A, 80).  [covers 3,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.545,539978 (regressionFit = 1.545,539976, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), indus(A, 4).  [covers 11,0/49,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.545,539978): medv(A) :- lstat(A, 1), indus(A, 4).  [covers 11,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.918,311010 (regressionFit = 1.918,311008, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), indus(A, 2).  [covers 6,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.847,680467 (regressionFit = 1.847,680465, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), indus(A, 5).  [covers 6,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.929,660866 (regressionFit = 1.929,660864, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 1), indus(A, 1).  [covers 17,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.927,447756 (regressionFit = 1.927,447754, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), chas(A, 0).  [covers 46,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.927,447756 (regressionFit = 1.927,447754, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 1), chas(A, 1).  [covers 3,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.919,106613 (regressionFit = 1.919,106611, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), nox(A, 3).  [covers 4,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.933,386466 (regressionFit = 1.933,386464, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), nox(A, 5).  [covers 12,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.906,846801 (regressionFit = 1.906,846799, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), nox(A, 2).  [covers 8,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.805,417310 (regressionFit = 1.805,417308, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), nox(A, 6).  [covers 10,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.912,499361 (regressionFit = 1.912,499359, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 1).  [covers 10,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.456,249308 (regressionFit = 1.456,249306, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3).  [covers 9,0/49,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.456,249308): medv(A) :- lstat(A, 1), rm(A, 3).  [covers 9,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.810,193335 (regressionFit = 1.810,193333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 2).  [covers 7,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 8).  [covers 1,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.900,918925 (regressionFit = 1.900,918923, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), age(A, 8).  [covers 11,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.928,458335 (regressionFit = 1.928,458333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), age(A, 3).  [covers 7,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.932,623190 (regressionFit = 1.932,623188, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), age(A, 4).  [covers 3,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.850,556002 (regressionFit = 1.850,556000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), age(A, 10).  [covers 14,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.801,402002 (regressionFit = 1.801,402000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), dis(A, 6).  [covers 4,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.928,291974 (regressionFit = 1.928,291972, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), dis(A, 2).  [covers 9,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.931,712925 (regressionFit = 1.931,712923, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), dis(A, 3).  [covers 10,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.926,714785 (regressionFit = 1.926,714783, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 1), dis(A, 1).  [covers 3,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.715,799980 (regressionFit = 1.715,799977, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), dis(A, 5).  [covers 12,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.858,045154 (regressionFit = 1.858,045152, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rad(A, 5).  [covers 16,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rad(A, 8).  [covers 2,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rad(A, 6).  [covers 1,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rad(A, 7).  [covers 2,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.795,011103 (regressionFit = 1.795,011100, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rad(A, 4).  [covers 11,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.909,458263 (regressionFit = 1.909,458261, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), tax(A, 296).  [covers 3,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.840,643190 (regressionFit = 1.840,643188, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), tax(A, 398).  [covers 3,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), tax(A, 307).  [covers 2,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), tax(A, 300).  [covers 1,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), tax(A, 330).  [covers 1,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), tax(A, 254).  [covers 1,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), tax(A, 334).  [covers 1,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.900,587776 (regressionFit = 1.900,587774, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), ptratio(A, 6).  [covers 8,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.896,194394 (regressionFit = 1.896,194392, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 1), ptratio(A, 1).  [covers 12,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.825,125002 (regressionFit = 1.825,125000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), ptratio(A, 5).  [covers 7,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.902,248310 (regressionFit = 1.902,248308, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), ptratio(A, 2).  [covers 10,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), ptratio(A, 7).  [covers 1,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.915,392347 (regressionFit = 1.915,392344, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), b(A, 6).  [covers 11,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.931,486013 (regressionFit = 1.931,486011, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 1), b(A, 1).  [covers 17,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.907,040002 (regressionFit = 1.907,040000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), b(A, 8).  [covers 7,0/49,0 pos, 0,0/0,0 neg]
%     Score = -1.892,506613 (regressionFit = 1.892,506611, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), b(A, 4).  [covers 4,0/49,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 1), rm(A, 3).  [covers 9,0/49,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 1), rm(A, 3).  [covers 9,0/49,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -39,459.
% Will extend: medv(A) :- lstat(A, 1), rm(A, 3).  [covers 9,0/49,0 pos, 0,0/0,0 neg]
Comparing variance: 69.0039506172838 to score=0.0025 #egs=9.0
Comparing variance: 20.880343750000158 to score=0.0025 #egs=40.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 9,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-69,003951)
%         ILP node to extend: medv(A) :- lstat(A, 1), rm(A, 3).  [covers 9,0/49,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -69,003951) into position #1 in the search queue (new size=5).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 40,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-20,880344)
%         ILP node to extend: medv(A) :- lstat(A, 1).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -20,880344) into position #4 in the search queue (new size=6).

% Time for loop #6: 61 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      medv(A) :- lstat(A, 1), rm(A, 3).  [covers 9,0/49,0 pos, 0,0/0,0 neg]
% This clause covers 9 positive examples, of which 9 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- lstat(A, 1), rm(A, 3).  [covers 9,0/9,0 pos, 0,0/0,0 neg]'
%     Score = -1.456,249308 (regressionFit = 1.456,249306, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3).  [covers 9,0/9,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 0 1 2 3 4 5 6 7
% Gleaner: New best node found (score = -1.456,249308): medv(A) :- lstat(A, 1), rm(A, 3).  [covers 9,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), crim(A, 2).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -602,835003 (regressionFit = 602,835000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), crim(A, 7).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -602,835003): medv(A) :- lstat(A, 1), rm(A, 3), crim(A, 7).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), crim(A, 5).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), crim(A, 3).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), crim(A, 1).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -383,215503 (regressionFit = 383,215500, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), zn(A, 0).  [covers 4,0/9,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -383,215503): medv(A) :- lstat(A, 1), rm(A, 3), zn(A, 0).  [covers 4,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), zn(A, 45).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), zn(A, 20).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), zn(A, 40).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), zn(A, 35).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), indus(A, 1).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -236,466670 (regressionFit = 236,466667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), indus(A, 4).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -236,466670): medv(A) :- lstat(A, 1), rm(A, 3), indus(A, 4).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -575,275003 (regressionFit = 575,275000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), indus(A, 2).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), chas(A, 0).  [covers 7,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), chas(A, 1).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), nox(A, 2).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), nox(A, 5).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), nox(A, 4).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), nox(A, 3).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), nox(A, 8).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), age(A, 1).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -607,688336 (regressionFit = 607,688333, penalties=3.0500000000000004E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), age(A, 3).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), age(A, 4).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), age(A, 9).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), dis(A, 4).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), dis(A, 2).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), dis(A, 1).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), dis(A, 9).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), dis(A, 7).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), dis(A, 5).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), rad(A, 2).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -236,466670 (regressionFit = 236,466667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), rad(A, 5).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), rad(A, 8).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), rad(A, 4).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), rad(A, 1).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), tax(A, 276).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), tax(A, 398).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), tax(A, 307).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), tax(A, 264).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), tax(A, 254).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), tax(A, 284).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), ptratio(A, 2).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), ptratio(A, 1).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), ptratio(A, 6).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), ptratio(A, 9).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), b(A, 1).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), b(A, 8).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -582,900003 (regressionFit = 582,900000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), b(A, 6).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), b(A, 5).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- lstat(A, 1), rm(A, 3), b(A, 3).  [covers 1,0/9,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 1), rm(A, 3), indus(A, 4).  [covers 3,0/9,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 1), rm(A, 3), indus(A, 4).  [covers 3,0/9,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -69,004.
% Will extend: medv(A) :- lstat(A, 1), rm(A, 3), indus(A, 4).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #7: 33 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      medv(A) :- lstat(A, 1), rm(A, 3), indus(A, 4).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 14 79 84 145 148 162 169 190

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 294,0/294,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 294,0/294,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -10.836,338697 (regressionFit = 10.836,338696, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 37,0/294,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10.836,338697): medv(A) :- crim(A, 3).  [covers 37,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.509,404325 (regressionFit = 10.509,404324, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 35,0/294,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10.509,404325): medv(A) :- crim(A, 2).  [covers 35,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.707,262821 (regressionFit = 10.707,262820, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 28,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.830,041979 (regressionFit = 10.830,041978, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 20,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.774,868444 (regressionFit = 10.774,868443, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 33,0/294,0 pos, 0,0/0,0 neg]
%     Score = -9.701,699840 (regressionFit = 9.701,699839, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 221,0/294,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.701,699840): medv(A) :- zn(A, 0).  [covers 221,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.783,000800 (regressionFit = 10.783,000799, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 80).  [covers 6,0/294,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 40).  [covers 1,0/294,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 55).  [covers 2,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.419,292467 (regressionFit = 10.419,292466, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 33).  [covers 4,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.850,540043 (regressionFit = 10.850,540042, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 33,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.046,455338 (regressionFit = 10.046,455337, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 17,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.724,867743 (regressionFit = 10.724,867742, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 34,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.843,831085 (regressionFit = 10.843,831084, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 37,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.767,828001 (regressionFit = 10.767,828000, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 270,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.538,486196 (regressionFit = 10.538,486195, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 44,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.277,827491 (regressionFit = 10.277,827490, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 32,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.748,068289 (regressionFit = 10.748,068288, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 23,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.815,048213 (regressionFit = 10.815,048212, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 30,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.825,545785 (regressionFit = 10.825,545784, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 37,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.791,048907 (regressionFit = 10.791,048906, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 41,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.850,485486 (regressionFit = 10.850,485484, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 36,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.477,086395 (regressionFit = 10.477,086394, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 15,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.842,654993 (regressionFit = 10.842,654992, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 30,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.619,260325 (regressionFit = 10.619,260324, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 24,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.826,335367 (regressionFit = 10.826,335366, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 31,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.153,354686 (regressionFit = 10.153,354685, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 33,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.825,362177 (regressionFit = 10.825,362176, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 32,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.832,398992 (regressionFit = 10.832,398991, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 24,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.822,252203 (regressionFit = 10.822,252202, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 31,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.819,411823 (regressionFit = 10.819,411822, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 25,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.789,061580 (regressionFit = 10.789,061579, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 26,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.848,453665 (regressionFit = 10.848,453664, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 43,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.699,078500 (regressionFit = 10.699,078499, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 31,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.848,859252 (regressionFit = 10.848,859250, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 29,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.850,338005 (regressionFit = 10.850,338004, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 17,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.707,285199 (regressionFit = 10.707,285198, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 23,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.816,119965 (regressionFit = 10.816,119964, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 14,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.621,028819 (regressionFit = 10.621,028818, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 80,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.850,522947 (regressionFit = 10.850,522946, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 8,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.592,594926 (regressionFit = 10.592,594925, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 11,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.750,354832 (regressionFit = 10.750,354831, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 82,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.828,988750 (regressionFit = 10.828,988749, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 432).  [covers 9,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.287,105001 (regressionFit = 10.287,105000, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 193).  [covers 4,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.645,406673 (regressionFit = 10.645,406672, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 329).  [covers 4,0/294,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 254).  [covers 1,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.844,368334 (regressionFit = 10.844,368333, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 300).  [covers 6,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.419,292467 (regressionFit = 10.419,292466, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 222).  [covers 4,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.819,341455 (regressionFit = 10.819,341454, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 12,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.832,579133 (regressionFit = 10.832,579132, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 224).  [covers 6,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.782,624613 (regressionFit = 10.782,624612, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 29,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.655,949561 (regressionFit = 10.655,949560, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 35,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.795,919853 (regressionFit = 10.795,919852, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 24,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.716,843537 (regressionFit = 10.716,843536, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 43,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.339,468321 (regressionFit = 10.339,468320, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 50,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.809,789370 (regressionFit = 10.809,789369, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 38,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.841,604066 (regressionFit = 10.841,604065, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 55,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.825,585576 (regressionFit = 10.825,585575, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 35,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.708,028022 (regressionFit = 10.708,028021, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 29,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.327,254498 (regressionFit = 10.327,254497, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 33,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.054,932044 (regressionFit = 10.054,932043, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/294,0 pos, 0,0/0,0 neg]
%     Score = -8.897,028332 (regressionFit = 8.897,028331, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 46,0/294,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.897,028332): medv(A) :- lstat(A, 9).  [covers 46,0/294,0 pos, 0,0/0,0 neg]
%     Score = -10.803,741059 (regressionFit = 10.803,741058, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 44,0/294,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 9).  [covers 46,0/294,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 9).  [covers 46,0/294,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -36,907.
% Will extend: medv(A) :- lstat(A, 9).  [covers 46,0/294,0 pos, 0,0/0,0 neg]
Comparing variance: 36.34195179584071 to score=0.0025 #egs=46.0
Comparing variance: 29.134268340270218 to score=0.0025 #egs=248.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 46,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-36,341952)
%         ILP node to extend: medv(A) :- lstat(A, 9).  [covers 46,0/294,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -36,341952) into position #1 in the search queue (new size=5).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 248,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-29,134268)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 4 and with score = -29,134268) into position #2 in the search queue (new size=6).

% Time for loop #8: 170 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      medv(A) :- lstat(A, 9).  [covers 46,0/294,0 pos, 0,0/0,0 neg]
% This clause covers 46 positive examples, of which 46 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (medv(A) :- lstat(A, 9))
Created a leaf under (medv(A) :- lstat(A, 9))
Created a leaf under (medv(A) :- rm(A, 3))
Created a leaf under (medv(A) :- rm(A, 3))
Created a leaf under (medv(A) :- indus(A, 10))
Created a leaf under (medv(A) :- nox(A, 10))

%%%%%  WILL-Produced Tree #3 @ 14:10:03 10/20/22.  %%%%%


% FOR medv(A):
%   if ( lstat(A, 3) )
%   then if ( rm(A, 3) )
%   | then return 43.94230769230769;  // std dev = 5,156, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( indus(A, 10) )
%   | | then return 49;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 30.404545454545453;  // std dev = 4,185, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( nox(A, 10) )
%   | then return 9.566666669901323;  // std dev = 3,388, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | else if ( lstat(A, 1) )
%   | | then if ( rm(A, 3) )
%   | | | then if ( indus(A, 4) )
%   | | | | then return 43.56666666666666;  // std dev = 11,870, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 29.7;  // std dev = 9,777, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 26.2625;  // std dev = 4,570, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( lstat(A, 9) )
%   | | | then return 26.19782608695653;  // std dev = 6,028, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | | else return 19.102419354838716;  // std dev = 5,398, 248,000 (wgt'ed) examples reached here.  /* #pos=248 */


% Clauses:

medv(A, 43.94230769230769) :- 
     lstat(A, 3), 
     rm(A, 3), 
     !. // Clause #1.

medv(A, 49) :- 
     lstat(A, 3), 
     indus(A, 10), 
     !. // Clause #2.

medv(A, 30.404545454545453) :- 
     lstat(A, 3), 
     !. // Clause #3.

medv(A, 9.566666669901323) :- 
     nox(A, 10), 
     !. // Clause #4.

medv(A, 43.56666666666666) :- 
     lstat(A, 1), 
     rm(A, 3), 
     indus(A, 4), 
     !. // Clause #5.

medv(A, 29.7) :- 
     lstat(A, 1), 
     rm(A, 3), 
     !. // Clause #6.

medv(A, 26.2625) :- 
     lstat(A, 1), 
     !. // Clause #7.

medv(A, 26.19782608695653) :- 
     lstat(A, 9), 
     !. // Clause #8.

medv(A, 19.102419354838716) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_medv(a, 43.94230769230769) :-  /* #pos=26 */ 
   lstat(a, 3),
   rm(a, 3),
   !. // Flattened version of clause #1.

flattened_medv(a, 49) :-  /* #pos=3 */ 
   lstat(a, 3),
   indus(a, 10),
   !. // Flattened version of clause #2.

flattened_medv(a, 30.404545454545453) :-  /* #pos=22 */ 
   lstat(a, 3),
   !. // Flattened version of clause #3.

flattened_medv(a, 9.566666669901323) :-  /* #pos=42 */ 
   nox(a, 10),
   !. // Flattened version of clause #4.

flattened_medv(a, 43.56666666666666) :-  /* #pos=3 */ 
   lstat(a, 1),
   rm(a, 3),
   indus(a, 4),
   !. // Flattened version of clause #5.

flattened_medv(a, 29.7) :-  /* #pos=6 */ 
   lstat(a, 1),
   rm(a, 3),
   !. // Flattened version of clause #6.

flattened_medv(a, 26.2625) :-  /* #pos=40 */ 
   lstat(a, 1),
   !. // Flattened version of clause #7.

flattened_medv(a, 26.19782608695653) :-  /* #pos=46 */ 
   lstat(a, 9),
   !. // Flattened version of clause #8.

flattened_medv(underscore, 19.102419354838716) :-  /* #pos=248 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   indus(a, 4)
%   rm(a, 3)
%   lstat(a, 1)
%   lstat(a, 9)
%   indus(a, 10)
%   lstat(a, 3)
%   nox(a, 10)

% Saving model in: data/boston_housing/train/models/bRDNs/medv.model.ckpt
% Time taken to learn 3 trees is 3,790 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:36.90661032440306
Set score:0.0025
% Kept 436 of the 436 positive examples.
% Kept 0 of the 0 negative examples.
% Dataset size: 436
Computing probabilities
prob time:220 milliseconds
No hidden examples for : medv
Time to build dataset: 224 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:90.91398930014259
Set score:0.0025

% Have these 8 positive seeds: 28 61 84 137 141 189 195 252

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -39.638,468162 (regressionFit = 39.638,468161, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -39.638,468162): medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.638,483808 (regressionFit = 39.638,483807, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.882,625340 (regressionFit = 38.882,625339, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -38.882,625340): medv(A) :- crim(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.808,651307 (regressionFit = 38.808,651306, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -38.808,651307): medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.272,609528 (regressionFit = 39.272,609527, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -34.695,563004 (regressionFit = 34.695,563003, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -34.695,563004): medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.297,445126 (regressionFit = 36.297,445124, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 20).  [covers 21,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.315,392215 (regressionFit = 39.315,392214, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 40).  [covers 7,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.062,758165 (regressionFit = 39.062,758164, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 21,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.631,729726 (regressionFit = 39.631,729725, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.297,050048 (regressionFit = 36.297,050047, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.605,364995 (regressionFit = 38.605,364994, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.577,904001 (regressionFit = 38.577,904000, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 401,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.577,904001 (regressionFit = 38.577,904000, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 35,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.461,939144 (regressionFit = 39.461,939143, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.626,311286 (regressionFit = 37.626,311285, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.632,627139 (regressionFit = 39.632,627138, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.164,984537 (regressionFit = 38.164,984536, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.931,488693 (regressionFit = 38.931,488692, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.918,693679 (regressionFit = 38.918,693678, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.237,214598 (regressionFit = 39.237,214597, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.105,555484 (regressionFit = 39.105,555483, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.337,639541 (regressionFit = 39.337,639540, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -23.480,474260 (regressionFit = 23.480,474259, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -23.480,474260): medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.236,069996 (regressionFit = 39.236,069995, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.264,324993 (regressionFit = 39.264,324992, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.446,839830 (regressionFit = 39.446,839829, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.591,251036 (regressionFit = 39.591,251035, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.413,493707 (regressionFit = 39.413,493706, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.514,302075 (regressionFit = 38.514,302074, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.266,455873 (regressionFit = 37.266,455872, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.019,388871 (regressionFit = 39.019,388870, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.608,466081 (regressionFit = 39.608,466080, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.398,550879 (regressionFit = 39.398,550878, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.277,358952 (regressionFit = 39.277,358951, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 23,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.686,454048 (regressionFit = 38.686,454047, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.322,758601 (regressionFit = 38.322,758600, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 24,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.771,365965 (regressionFit = 38.771,365964, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 37,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.459,259956 (regressionFit = 39.459,259954, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 101,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.539,402678 (regressionFit = 39.539,402677, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 188).  [covers 7,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.631,729726 (regressionFit = 39.631,729725, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.609,412408 (regressionFit = 39.609,412407, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 296).  [covers 8,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.559,309787 (regressionFit = 39.559,309786, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.614,917746 (regressionFit = 39.614,917745, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 223).  [covers 5,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.246,876873 (regressionFit = 39.246,876872, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 254).  [covers 5,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.618,171194 (regressionFit = 39.618,171193, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 430).  [covers 3,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.637,264034 (regressionFit = 39.637,264033, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.925,257034 (regressionFit = 36.925,257033, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.628,749898 (regressionFit = 38.628,749897, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.612,829726 (regressionFit = 39.612,829724, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.966,688041 (regressionFit = 38.966,688040, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.164,167220 (regressionFit = 39.164,167219, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.276,288528 (regressionFit = 39.276,288527, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.176,403309 (regressionFit = 39.176,403308, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.157,831192 (regressionFit = 39.157,831191, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 102,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.618,245003 (regressionFit = 39.618,245002, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.790,712816 (regressionFit = 33.790,712815, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.918,740592 (regressionFit = 38.918,740591, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 38,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.589,839753 (regressionFit = 39.589,839752, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.800,377476 (regressionFit = 38.800,377475, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.453,241329 (regressionFit = 39.453,241328, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
Comparing variance: 66.61714843749905 to score=0.0025 #egs=48.0
Comparing variance: 52.27538952067023 to score=0.0025 #egs=388.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 48,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-66,617148)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -66,617148) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 388,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-52,275390)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -52,275390) into the LAST position (#2) in the search queue.

% Time for loop #1: 210 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
% This clause covers 48 positive examples, of which 48 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3).  [covers 48,0/48,0 pos, 0,0/0,0 neg]'
%     Score = -23.480,474260 (regressionFit = 23.480,474259, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 48,0/48,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 1 9 21 23 24 30 40 43
% Gleaner: New best node found (score = -23.480,474260): medv(A) :- rm(A, 3).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.089,562441 (regressionFit = 3.089,562439, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 5).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.089,562441): medv(A) :- rm(A, 3), crim(A, 5).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.102,009949 (regressionFit = 3.102,009947, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 1).  [covers 10,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.195,896851 (regressionFit = 3.195,896849, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 7).  [covers 14,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.194,234320 (regressionFit = 3.194,234318, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 6).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.191,002013 (regressionFit = 3.191,002011, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 0).  [covers 21,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.193,252002 (regressionFit = 3.193,252000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 80).  [covers 3,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 22).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.176,844724 (regressionFit = 3.176,844722, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 20).  [covers 12,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 33).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 35).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.801,209775 (regressionFit = 2.801,209773, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 9).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.801,209775): medv(A) :- rm(A, 3), indus(A, 9).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.189,111760 (regressionFit = 3.189,111758, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 1).  [covers 15,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.159,079724 (regressionFit = 3.159,079722, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 2).  [covers 12,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 5).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.181,004498 (regressionFit = 3.181,004496, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 4).  [covers 14,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.196,099026 (regressionFit = 3.196,099024, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 0).  [covers 41,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.708,247383 (regressionFit = 2.708,247381, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 7).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.708,247383): medv(A) :- rm(A, 3), nox(A, 7).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.071,907752 (regressionFit = 3.071,907750, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 6).  [covers 8,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,620002 (regressionFit = 3.197,620000, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 3).  [covers 3,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.135,644320 (regressionFit = 3.135,644318, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 5).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.194,837354 (regressionFit = 3.194,837352, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 8).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.196,495739 (regressionFit = 3.196,495737, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 4).  [covers 10,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.095,211669 (regressionFit = 3.095,211667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 9).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.060,943097 (regressionFit = 3.060,943095, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 8).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.186,969410 (regressionFit = 3.186,969408, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 4).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.141,492002 (regressionFit = 3.141,492000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 10).  [covers 5,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.041,211222 (regressionFit = 3.041,211220, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), age(A, 3).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.096,257354 (regressionFit = 3.096,257352, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 8).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.105,111072 (regressionFit = 3.105,111070, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 3).  [covers 5,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.181,319660 (regressionFit = 3.181,319658, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 4).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.074,532446 (regressionFit = 3.074,532444, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 1).  [covers 3,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.104,534320 (regressionFit = 3.104,534318, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 5).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 7).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.992,714727 (regressionFit = 2.992,714725, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 5).  [covers 17,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.090,432957 (regressionFit = 3.090,432955, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 4).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,609233 (regressionFit = 3.197,609231, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 8).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.168,139113 (regressionFit = 3.168,139111, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 7).  [covers 3,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 1).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.801,209775 (regressionFit = 2.801,209773, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 403).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 255).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,609233 (regressionFit = 3.197,609231, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 307).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 330).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.187,786327 (regressionFit = 3.187,786325, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 222).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 284).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.752,971645 (regressionFit = 2.752,971643, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 9).  [covers 20,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,609233 (regressionFit = 3.197,609231, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 6).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 5).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.098,388002 (regressionFit = 3.098,388000, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 3).  [covers 3,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.195,405002 (regressionFit = 3.195,405000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 1).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.123,735263 (regressionFit = 3.123,735261, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 8).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,459320 (regressionFit = 3.197,459318, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), b(A, 3).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.083,084686 (regressionFit = 3.083,084684, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 5).  [covers 10,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.155,724792 (regressionFit = 3.155,724789, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 6).  [covers 10,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.745,712267 (regressionFit = 2.745,712265, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 1).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.062,356191 (regressionFit = 2.062,356189, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.062,356191): medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.904,231455 (regressionFit = 2.904,231453, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 1).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.137,922752 (regressionFit = 3.137,922750, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 9).  [covers 8,0/48,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -66,617.
% Will extend: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
Comparing variance: 26.586286982248566 to score=0.0025 #egs=26.0
Comparing variance: 62.323305785123836 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 26,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-26,586287)
%         ILP node to extend: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -26,586287) into the LAST position (#2) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 22,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-62,323306)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -62,323306) into position #1 in the search queue (new size=3).

% Time for loop #2: 74 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
% This clause covers 26 positive examples, of which 26 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3).  [covers 48,0/22,0 pos, 0,0/0,0 neg]'
%     Score = -23.480,474260 (regressionFit = 23.480,474259, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 22,0/22,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 0 1 2 3 8 10 14 20
% Gleaner: New best node found (score = -23.480,474260): medv(A) :- rm(A, 3).  [covers 22,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.371,012502 (regressionFit = 1.371,012500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 2).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.371,012502): medv(A) :- rm(A, 3), crim(A, 2).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 1).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.160,201113 (regressionFit = 1.160,201111, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 5).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.160,201113): medv(A) :- rm(A, 3), crim(A, 5).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.347,001907 (regressionFit = 1.347,001905, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 7).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 8).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.008,994478 (regressionFit = 1.008,994476, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 0).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.008,994478): medv(A) :- rm(A, 3), zn(A, 0).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 45).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 80).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -942,138122 (regressionFit = 942,138120, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 20).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -942,138122): medv(A) :- rm(A, 3), zn(A, 20).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.370,730835 (regressionFit = 1.370,730833, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 1).  [covers 6,0/22,0 pos, 0,0/0,0 neg]
%     Score = -947,509917 (regressionFit = 947,509915, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 4).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 10).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.281,405265 (regressionFit = 1.281,405263, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 0).  [covers 19,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.281,405265 (regressionFit = 1.281,405263, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 1).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.365,104563 (regressionFit = 1.365,104561, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 2).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.368,278590 (regressionFit = 1.368,278588, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 4).  [covers 5,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 5).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 6).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.143,945907 (regressionFit = 1.143,945905, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 8).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 7).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 9).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 1).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.314,370280 (regressionFit = 1.314,370278, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 2).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.366,694377 (regressionFit = 1.366,694375, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), age(A, 3).  [covers 6,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 6).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -937,457780 (regressionFit = 937,457778, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -937,457780): medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.360,574446 (regressionFit = 1.360,574444, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 4).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.339,532985 (regressionFit = 1.339,532982, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 4).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 6).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 2).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 5).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.366,991113 (regressionFit = 1.366,991111, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 9).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.368,972985 (regressionFit = 1.368,972982, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 8).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 7).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 2).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 3).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -947,509917 (regressionFit = 947,509915, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 5).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 24).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 276).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 193).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 398).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 329).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -923,328573 (regressionFit = 923,328571, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -923,328573): medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 666).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.370,947370 (regressionFit = 1.370,947368, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 2).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 1).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -952,847865 (regressionFit = 952,847863, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 9).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 10).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.191,763613 (regressionFit = 1.191,763611, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 1).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 4).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.356,536142 (regressionFit = 1.356,536140, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 2).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.085,512502 (regressionFit = 1.085,512500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 5).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.295,510590 (regressionFit = 1.295,510588, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 6).  [covers 5,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 9).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.370,812481 (regressionFit = 1.370,812479, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 1).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.273,032145 (regressionFit = 1.273,032143, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 9).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 2).  [covers 2,0/22,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -62,323.
% Will extend: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
Comparing variance: 53.02000000000021 to score=0.0025 #egs=8.0
Comparing variance: 35.65489795918347 to score=0.0025 #egs=14.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 8,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-53,020000)
%         ILP node to extend: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -53,020000) into position #1 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 14,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-35,654898)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 22,0/22,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -35,654898) into position #3 in the search queue (new size=4).

% Time for loop #3: 42 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
% This clause covers 8 positive examples, of which 8 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/8,0 pos, 0,0/0,0 neg]'
%     Score = -923,328573 (regressionFit = 923,328571, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/8,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 0 1 2 3 4 5 6 7
% Gleaner: New best node found (score = -923,328573): medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -421,280003 (regressionFit = 421,280000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), crim(A, 5).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -421,280003): medv(A) :- rm(A, 3), tax(A, 264), crim(A, 5).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -421,280003 (regressionFit = 421,280000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), crim(A, 7).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), zn(A, 20).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), indus(A, 4).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), chas(A, 0).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), nox(A, 8).  [covers 7,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), nox(A, 7).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -328,940003 (regressionFit = 328,940000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 9).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -328,940003): medv(A) :- rm(A, 3), tax(A, 264), age(A, 9).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 6).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 2).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 7).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 4).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -423,678670 (regressionFit = 423,678667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), dis(A, 9).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%     Score = -295,198670 (regressionFit = 295,198667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -295,198670): medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), dis(A, 7).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), rad(A, 5).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), ptratio(A, 9).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), b(A, 6).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -401,715003 (regressionFit = 401,715000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), b(A, 5).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), b(A, 2).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 1).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 2).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 8).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 9).  [covers 2,0/8,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -53,020.
% Will extend: medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
Comparing variance: 26.74888888888866 to score=0.0025 #egs=3.0
Comparing variance: 42.990399999999866 to score=0.0025 #egs=5.0
%   Creating a TRUE-branch leaf because length = 4 > 3
%   Creating a FALSE-branch leaf because wgtedCountFalseBranchPos = 5,0 < 2.1 * minPosCov = 6,3

% Time for loop #4: 25 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 5 positive seeds: 13 23 237 262 352

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 388,0/388,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 388,0/388,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -20.152,832076 (regressionFit = 20.152,832075, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 45,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20.152,832076): medv(A) :- crim(A, 3).  [covers 45,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.253,490632 (regressionFit = 20.253,490631, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 29,0/388,0 pos, 0,0/0,0 neg]
%     Score = -16.124,537208 (regressionFit = 16.124,537207, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -16.124,537208): medv(A) :- crim(A, 10).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.377,258363 (regressionFit = 19.377,258362, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
%     Score = -18.021,872107 (regressionFit = 18.021,872106, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 286,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.274,728117 (regressionFit = 20.274,728116, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 12.5).  [covers 10,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.279,348978 (regressionFit = 20.279,348977, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.121,966555 (regressionFit = 20.121,966554, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/388,0 pos, 0,0/0,0 neg]
%     Score = -16.995,773383 (regressionFit = 16.995,773382, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 88,0/388,0 pos, 0,0/0,0 neg]
%     Score = -18.742,559735 (regressionFit = 18.742,559734, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 33,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.723,458473 (regressionFit = 19.723,458472, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 360,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.723,458473 (regressionFit = 19.723,458472, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 28,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.070,208776 (regressionFit = 20.070,208775, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.216,698895 (regressionFit = 20.216,698894, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.326,079501 (regressionFit = 19.326,079500, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
%     Score = -15.169,561531 (regressionFit = 15.169,561529, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 10).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -15.169,561531): medv(A) :- nox(A, 10).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.778,487722 (regressionFit = 19.778,487721, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.236,072484 (regressionFit = 19.236,072483, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 43,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.199,529705 (regressionFit = 20.199,529704, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.256,664206 (regressionFit = 20.256,664205, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.197,132334 (regressionFit = 20.197,132333, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 34,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.210,832171 (regressionFit = 20.210,832170, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 34,0/388,0 pos, 0,0/0,0 neg]
%     Score = -18.947,941265 (regressionFit = 18.947,941264, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 47,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.078,202657 (regressionFit = 20.078,202656, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 38,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.911,660248 (regressionFit = 19.911,660246, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 26,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.067,680605 (regressionFit = 20.067,680604, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 45,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.278,847408 (regressionFit = 20.278,847407, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 27,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.599,060990 (regressionFit = 19.599,060989, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 50,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.281,849028 (regressionFit = 20.281,849027, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 18,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.996,852393 (regressionFit = 19.996,852392, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 95,0/388,0 pos, 0,0/0,0 neg]
%     Score = -16.995,773383 (regressionFit = 16.995,773382, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 88,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.374,003183 (regressionFit = 19.374,003182, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 33,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.266,535856 (regressionFit = 20.266,535855, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 432).  [covers 9,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.277,371685 (regressionFit = 20.277,371684, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 311).  [covers 7,0/388,0 pos, 0,0/0,0 neg]
%     Score = -16.995,773383 (regressionFit = 16.995,773382, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 88,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.780,326226 (regressionFit = 19.780,326225, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 222).  [covers 5,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.719,093507 (regressionFit = 19.719,093506, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.467,369423 (regressionFit = 19.467,369422, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
%     Score = -17.059,710215 (regressionFit = 17.059,710214, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 95,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.037,631528 (regressionFit = 20.037,631527, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 48,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.177,623706 (regressionFit = 20.177,623705, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 25,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.233,401635 (regressionFit = 20.233,401634, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 95,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.241,784299 (regressionFit = 20.241,784298, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 37,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.210,053644 (regressionFit = 20.210,053643, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 43,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.262,545787 (regressionFit = 20.262,545786, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 42,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.264,069164 (regressionFit = 20.264,069163, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/388,0 pos, 0,0/0,0 neg]
%     Score = -18.461,591564 (regressionFit = 18.461,591563, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
%     Score = -18.544,702343 (regressionFit = 18.544,702342, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 40,0/388,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 10).  [covers 41,0/388,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 10).  [covers 41,0/388,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -52,275.
% Will extend: medv(A) :- nox(A, 10).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
Comparing variance: 11.264866151100572 to score=0.0025 #egs=41.0
Comparing variance: 42.38530840717846 to score=0.0025 #egs=347.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 41,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-11,264866)
%         ILP node to extend: medv(A) :- nox(A, 10).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -11,264866) into the LAST position (#3) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 347,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-42,385308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -42,385308) into position #1 in the search queue (new size=4).

% Time for loop #5: 183 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #5, the best clause found is:
%      medv(A) :- nox(A, 10).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
% This clause covers 41 positive examples, of which 41 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 35 56 86 155 197 214 228 247

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 347,0/347,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 347,0/347,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -14.191,644690 (regressionFit = 14.191,644689, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 45,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -14.191,644690): medv(A) :- crim(A, 2).  [covers 45,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.390,384585 (regressionFit = 14.390,384584, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 42,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.701,355713 (regressionFit = 14.701,355712, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 45,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.517,372762 (regressionFit = 14.517,372761, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 39,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.676,702329 (regressionFit = 14.676,702328, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 33,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.222,722652 (regressionFit = 14.222,722651, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 39,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.768,422029 (regressionFit = 13.768,422028, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 19,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -13.768,422029): medv(A) :- crim(A, 10).  [covers 19,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.660,660051 (regressionFit = 14.660,660050, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 12.5).  [covers 10,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.579,676802 (regressionFit = 13.579,676801, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 245,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -13.579,676802): medv(A) :- zn(A, 0).  [covers 245,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.401,429898 (regressionFit = 14.401,429897, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 40).  [covers 6,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.623,440491 (regressionFit = 14.623,440490, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 80).  [covers 11,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.224,179042 (regressionFit = 14.224,179041, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.688,288220 (regressionFit = 13.688,288219, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 33,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.598,547684 (regressionFit = 14.598,547683, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 39,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.671,392445 (regressionFit = 14.671,392444, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.693,013541 (regressionFit = 14.693,013540, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 47,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.468,593499 (regressionFit = 14.468,593498, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 47,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.422,962219 (regressionFit = 14.422,962218, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 319,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.422,962219 (regressionFit = 14.422,962218, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 28,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.707,661503 (regressionFit = 14.707,661502, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 40,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.136,346829 (regressionFit = 14.136,346828, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.318,658762 (regressionFit = 14.318,658761, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 38,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.505,447393 (regressionFit = 14.505,447392, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 40,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.533,394452 (regressionFit = 14.533,394451, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 46,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.591,196371 (regressionFit = 14.591,196370, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 29,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.484,702481 (regressionFit = 14.484,702480, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 42,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.668,412099 (regressionFit = 14.668,412098, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 38,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.944,310568 (regressionFit = 13.944,310567, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 41,0/347,0 pos, 0,0/0,0 neg]
%     Score = -11.286,513310 (regressionFit = 11.286,513309, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 43,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11.286,513310): medv(A) :- rm(A, 4).  [covers 43,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.688,391440 (regressionFit = 14.688,391439, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 38,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.706,922036 (regressionFit = 14.706,922035, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 38,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.242,422223 (regressionFit = 14.242,422222, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 30,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.676,109569 (regressionFit = 14.676,109568, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 39,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.639,559498 (regressionFit = 14.639,559497, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 29,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.935,772826 (regressionFit = 13.935,772825, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 35,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.266,644518 (regressionFit = 14.266,644517, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 43,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.698,334176 (regressionFit = 14.698,334175, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 30,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.561,398236 (regressionFit = 14.561,398235, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 29,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.544,122119 (regressionFit = 14.544,122118, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 43,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.686,325132 (regressionFit = 14.686,325131, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 45,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.545,569591 (regressionFit = 14.545,569590, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 26,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.643,897882 (regressionFit = 14.643,897881, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 36,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.673,935430 (regressionFit = 14.673,935429, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 45,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.568,957846 (regressionFit = 14.568,957845, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 42,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.703,408467 (regressionFit = 14.703,408466, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 31,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.698,863565 (regressionFit = 14.698,863564, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 95,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.500,474950 (regressionFit = 14.500,474949, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 97,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.188,845063 (regressionFit = 14.188,845062, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 33,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.468,593499 (regressionFit = 14.468,593498, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 47,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.675,454673 (regressionFit = 14.675,454672, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 311).  [covers 7,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.499,033280 (regressionFit = 14.499,033279, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 30,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.964,547156 (regressionFit = 13.964,547155, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 193).  [covers 6,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.351,465453 (regressionFit = 14.351,465452, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 254).  [covers 4,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.635,042414 (regressionFit = 14.635,042413, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 14,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.667,176337 (regressionFit = 14.667,176336, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 224).  [covers 7,0/347,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 280).  [covers 1,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.468,593499 (regressionFit = 14.468,593498, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 47,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.288,452879 (regressionFit = 14.288,452878, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 39,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.145,820636 (regressionFit = 14.145,820635, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 32,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.466,956109 (regressionFit = 14.466,956107, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 40,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.665,733806 (regressionFit = 14.665,733805, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 48,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.416,438636 (regressionFit = 14.416,438635, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 54,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.488,698280 (regressionFit = 14.488,698279, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 39,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.705,199478 (regressionFit = 14.705,199477, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 37,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.660,012724 (regressionFit = 14.660,012723, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 35,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.668,600940 (regressionFit = 14.668,600939, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 76,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.698,403933 (regressionFit = 14.698,403932, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 41,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.276,103333 (regressionFit = 13.276,103332, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 29,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.865,083248 (regressionFit = 13.865,083246, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 33,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.690,998290 (regressionFit = 14.690,998289, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 42,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.579,639028 (regressionFit = 13.579,639027, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 40,0/347,0 pos, 0,0/0,0 neg]
%     Score = -11.225,733036 (regressionFit = 11.225,733035, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 25,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11.225,733036): medv(A) :- lstat(A, 3).  [covers 25,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.538,934213 (regressionFit = 14.538,934212, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/347,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3).  [covers 25,0/347,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3).  [covers 25,0/347,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -42,385.
% Will extend: medv(A) :- lstat(A, 3).  [covers 25,0/347,0 pos, 0,0/0,0 neg]
Comparing variance: 51.9311040000002 to score=0.0025 #egs=25.0
Comparing variance: 30.83060694031874 to score=0.0025 #egs=322.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 25,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-51,931104)
%         ILP node to extend: medv(A) :- lstat(A, 3).  [covers 25,0/347,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -51,931104) into position #1 in the search queue (new size=4).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 322,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-30,830607)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -30,830607) into position #3 in the search queue (new size=5).

% Time for loop #6: 207 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      medv(A) :- lstat(A, 3).  [covers 25,0/347,0 pos, 0,0/0,0 neg]
% This clause covers 25 positive examples, of which 25 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- lstat(A, 3).  [covers 25,0/25,0 pos, 0,0/0,0 neg]'
%     Score = -11.225,733036 (regressionFit = 11.225,733035, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 25,0/25,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 0 2 4 7 8 9 11 12
% Gleaner: New best node found (score = -11.225,733036): medv(A) :- lstat(A, 3).  [covers 25,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 5).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.178,559938 (regressionFit = 1.178,559936, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 1).  [covers 12,0/25,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.178,559938): medv(A) :- lstat(A, 3), crim(A, 1).  [covers 12,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.296,750305 (regressionFit = 1.296,750303, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 2).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 6).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -922,002145 (regressionFit = 922,002143, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -922,002145): medv(A) :- lstat(A, 3), zn(A, 0).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 60).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 95).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 22).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.293,878184 (regressionFit = 1.293,878182, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 40).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 20).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.247,237578 (regressionFit = 1.247,237576, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 80).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 9).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.212,832066 (regressionFit = 1.212,832063, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 4).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.291,308002 (regressionFit = 1.291,308000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 1).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.237,042383 (regressionFit = 1.237,042381, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 5).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.289,130002 (regressionFit = 1.289,130000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 2).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.013,077026 (regressionFit = 1.013,077024, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), chas(A, 0).  [covers 21,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.013,077026 (regressionFit = 1.013,077024, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), chas(A, 1).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 7).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.215,753458 (regressionFit = 1.215,753456, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 6).  [covers 8,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.214,738002 (regressionFit = 1.214,738000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 5).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.297,394002 (regressionFit = 1.297,394000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 2).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.265,797335 (regressionFit = 1.265,797333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 4).  [covers 15,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.272,708573 (regressionFit = 1.272,708571, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 1).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -680,280002 (regressionFit = 680,280000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 5).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -680,280002): medv(A) :- lstat(A, 3), age(A, 5).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.134,394933 (regressionFit = 1.134,394931, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 10).  [covers 9,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.274,855002 (regressionFit = 1.274,855000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 8).  [covers 8,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.292,492578 (regressionFit = 1.292,492576, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 3).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 9).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.208,749526 (regressionFit = 1.208,749524, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 3).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.227,886581 (regressionFit = 1.227,886579, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 5).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 1).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.291,939288 (regressionFit = 1.291,939286, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 2).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.296,997546 (regressionFit = 1.296,997544, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 5).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 1).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.297,868002 (regressionFit = 1.297,868000, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 3).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 7).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.165,673256 (regressionFit = 1.165,673254, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 4).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 403).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 265).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 402).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 330).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.293,878184 (regressionFit = 1.293,878182, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 254).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 216).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 245).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 9).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.210,105502 (regressionFit = 1.210,105500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 1).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.290,402383 (regressionFit = 1.290,402381, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 6).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.237,042383 (regressionFit = 1.237,042381, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 5).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.288,113216 (regressionFit = 1.288,113214, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 2).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 9).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.186,773216 (regressionFit = 1.186,773214, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 8).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.237,000265 (regressionFit = 1.237,000263, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 5).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.183,496113 (regressionFit = 1.183,496111, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 1).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.226,257026 (regressionFit = 1.226,257024, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 2).  [covers 4,0/25,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3), age(A, 5).  [covers 3,0/25,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3), age(A, 5).  [covers 3,0/25,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -51,931.
% Will extend: medv(A) :- lstat(A, 3), age(A, 5).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
Comparing variance: 16.81999999999971 to score=0.0025 #egs=3.0
Comparing variance: 28.62818181818197 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 3,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 22,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-28,628182)
%         ILP node to extend: medv(A) :- lstat(A, 3).  [covers 25,0/25,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -28,628182) into position #3 in the search queue (new size=5).

% Time for loop #7: 55 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      medv(A) :- lstat(A, 3), age(A, 5).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3).  [covers 22,0/14,0 pos, 0,0/0,0 neg]'
%     Score = -23.480,474260 (regressionFit = 23.480,474259, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 14,0/14,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 0 1 2 3 5 7 8 10
% Gleaner: New best node found (score = -23.480,474260): medv(A) :- rm(A, 3).  [covers 14,0/14,0 pos, 0,0/0,0 neg]
%     Score = -428,452502 (regressionFit = 428,452500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 2).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -428,452502): medv(A) :- rm(A, 3), crim(A, 2).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 1).  [covers 2,0/14,0 pos, 0,0/0,0 neg]
%     Score = -499,056366 (regressionFit = 499,056364, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 7).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 4).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 3).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -409,657145 (regressionFit = 409,657143, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 0).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -409,657145): medv(A) :- rm(A, 3), zn(A, 0).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 45).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 80).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 20).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 40).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 33).  [covers 2,0/14,0 pos, 0,0/0,0 neg]
%     Score = -391,968335 (regressionFit = 391,968333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 1).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -391,968335): medv(A) :- rm(A, 3), indus(A, 1).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 4).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -493,300891 (regressionFit = 493,300889, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 2).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -488,501820 (regressionFit = 488,501818, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 0).  [covers 11,0/14,0 pos, 0,0/0,0 neg]
%     Score = -488,501820 (regressionFit = 488,501818, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 1).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -482,406669 (regressionFit = 482,406667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 2).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -440,410224 (regressionFit = 440,410222, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 4).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 5).  [covers 2,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 6).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 1).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -497,447275 (regressionFit = 497,447273, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 2).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -423,833752 (regressionFit = 423,833750, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), age(A, 3).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -498,467275 (regressionFit = 498,467273, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 4).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -498,572123 (regressionFit = 498,572121, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 4).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 6).  [covers 2,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 2).  [covers 2,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 5).  [covers 2,0/14,0 pos, 0,0/0,0 neg]
%     Score = -475,395760 (regressionFit = 475,395758, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 1).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 2).  [covers 2,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 3).  [covers 2,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 5).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -499,056366 (regressionFit = 499,056364, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 8).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 4).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 7).  [covers 2,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 276).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 193).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 398).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 329).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -499,056366 (regressionFit = 499,056364, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 307).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 223).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 254).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 222).  [covers 2,0/14,0 pos, 0,0/0,0 neg]
%     Score = -448,896366 (regressionFit = 448,896364, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 2).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 1).  [covers 2,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 9).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -499,056366 (regressionFit = 499,056364, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 6).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -461,796366 (regressionFit = 461,796364, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 3).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -459,948502 (regressionFit = 459,948500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 1).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 4).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 2).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 8).  [covers 2,0/14,0 pos, 0,0/0,0 neg]
%     Score = -490,247275 (regressionFit = 490,247273, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 6).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -496,057145 (regressionFit = 496,057143, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 1).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
%     Score = -381,667085 (regressionFit = 381,667083, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 9).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -381,667085): medv(A) :- rm(A, 3), lstat(A, 9).  [covers 6,0/14,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), lstat(A, 9).  [covers 6,0/14,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), lstat(A, 9).  [covers 6,0/14,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -35,655.
% Will extend: medv(A) :- rm(A, 3), lstat(A, 9).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
Comparing variance: 6.414722222222281 to score=0.0025 #egs=6.0
Comparing variance: 42.89734375000023 to score=0.0025 #egs=8.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 6,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 8,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-42,897344)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 14,0/14,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -42,897344) into position #1 in the search queue (new size=5).

% Time for loop #8: 39 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      medv(A) :- rm(A, 3), lstat(A, 9).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
% This clause covers 6 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (medv(A) :- lstat(A, 9))
Created a leaf under (medv(A) :- lstat(A, 3))
Created a leaf under (medv(A) :- age(A, 5))
Created a leaf under (medv(A) :- lstat(A, 3))
Created a leaf under (medv(A) :- nox(A, 10))

%%%%%  WILL-Produced Tree #4 @ 14:10:04 10/20/22.  %%%%%


% FOR medv(A):
%   if ( rm(A, 3) )
%   then if ( lstat(A, 3) )
%   | then return 43.94230769230769;  // std dev = 5,156, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( tax(A, 264) )
%   | | then if ( dis(A, 8) )
%   | | | then return 34.96666666666667;  // std dev = 8,958, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 43.260000000000005;  // std dev = 14,661, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( lstat(A, 9) )
%   | | | then return 34.11666666666667;  // std dev = 6,204, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 28.262499999999996;  // std dev = 6,550, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( nox(A, 10) )
%   | then return 9.458536585366085;  // std dev = 3,356, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( lstat(A, 3) )
%   | | then if ( age(A, 5) )
%   | | | then return 46.1;  // std dev = 7,104, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 30.799999999999997;  // std dev = 5,351, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 20.38478260869565;  // std dev = 5,553, 322,000 (wgt'ed) examples reached here.  /* #pos=322 */


% Clauses:

medv(A, 43.94230769230769) :- 
     rm(A, 3), 
     lstat(A, 3), 
     !. // Clause #1.

medv(A, 34.96666666666667) :- 
     rm(A, 3), 
     tax(A, 264), 
     dis(A, 8), 
     !. // Clause #2.

medv(A, 43.260000000000005) :- 
     rm(A, 3), 
     tax(A, 264), 
     !. // Clause #3.

medv(A, 34.11666666666667) :- 
     rm(A, 3), 
     lstat(A, 9), 
     !. // Clause #4.

medv(A, 28.262499999999996) :- 
     rm(A, 3), 
     !. // Clause #5.

medv(A, 9.458536585366085) :- 
     nox(A, 10), 
     !. // Clause #6.

medv(A, 46.1) :- 
     lstat(A, 3), 
     age(A, 5), 
     !. // Clause #7.

medv(A, 30.799999999999997) :- 
     lstat(A, 3), 
     !. // Clause #8.

medv(A, 20.38478260869565) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_medv(a, 43.94230769230769) :-  /* #pos=26 */ 
   rm(a, 3),
   lstat(a, 3),
   !. // Flattened version of clause #1.

flattened_medv(a, 34.96666666666667) :-  /* #pos=3 */ 
   rm(a, 3),
   tax(a, 264),
   dis(a, 8),
   !. // Flattened version of clause #2.

flattened_medv(a, 43.260000000000005) :-  /* #pos=5 */ 
   rm(a, 3),
   tax(a, 264),
   !. // Flattened version of clause #3.

flattened_medv(a, 34.11666666666667) :-  /* #pos=6 */ 
   rm(a, 3),
   lstat(a, 9),
   !. // Flattened version of clause #4.

flattened_medv(a, 28.262499999999996) :-  /* #pos=8 */ 
   rm(a, 3),
   !. // Flattened version of clause #5.

flattened_medv(a, 9.458536585366085) :-  /* #pos=41 */ 
   nox(a, 10),
   !. // Flattened version of clause #6.

flattened_medv(a, 46.1) :-  /* #pos=3 */ 
   lstat(a, 3),
   age(a, 5),
   !. // Flattened version of clause #7.

flattened_medv(a, 30.799999999999997) :-  /* #pos=22 */ 
   lstat(a, 3),
   !. // Flattened version of clause #8.

flattened_medv(underscore, 20.38478260869565) :-  /* #pos=322 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   rm(a, 3)
%   age(a, 5)
%   tax(a, 264)
%   dis(a, 8)
%   lstat(a, 9)
%   lstat(a, 3)
%   nox(a, 10)

% Saving model in: data/boston_housing/train/models/bRDNs/medv.model.ckpt
% Time taken to learn 4 trees is 4,876 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:35.6548979591837
Set score:0.0025
% Kept 436 of the 436 positive examples.
% Kept 0 of the 0 negative examples.
% Dataset size: 436
Computing probabilities
prob time:315 milliseconds
No hidden examples for : medv
Time to build dataset: 320 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:90.91398930014299
Set score:0.0025

% Have these 8 positive seeds: 69 121 123 131 255 308 315 379

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -39.590,451598 (regressionFit = 39.590,451597, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -39.590,451598): medv(A) :- crim(A, 8).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.500,127853 (regressionFit = 39.500,127852, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -39.500,127853): medv(A) :- crim(A, 4).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.808,651307 (regressionFit = 38.808,651306, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -38.808,651307): medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.638,468162 (regressionFit = 39.638,468161, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.633,240561 (regressionFit = 37.633,240560, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -37.633,240561): medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.315,657792 (regressionFit = 33.315,657791, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -33.315,657792): medv(A) :- crim(A, 10).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.630,944812 (regressionFit = 38.630,944811, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 9).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -34.695,563004 (regressionFit = 34.695,563003, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.638,472580 (regressionFit = 39.638,472579, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 35).  [covers 3,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.631,729726 (regressionFit = 39.631,729725, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.505,053776 (regressionFit = 39.505,053775, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.638,499063 (regressionFit = 39.638,499062, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 7).  [covers 17,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.605,364995 (regressionFit = 38.605,364994, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.338,864441 (regressionFit = 33.338,864440, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.577,904001 (regressionFit = 38.577,904000, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 35,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.577,904001 (regressionFit = 38.577,904000, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 401,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.461,939144 (regressionFit = 39.461,939143, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.164,984537 (regressionFit = 38.164,984536, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.737,679697 (regressionFit = 38.737,679696, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.428,299302 (regressionFit = 39.428,299301, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -32.266,679045 (regressionFit = 32.266,679044, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -32.266,679045): medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -23.480,474260 (regressionFit = 23.480,474259, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -23.480,474260): medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.105,555484 (regressionFit = 39.105,555483, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.786,815820 (regressionFit = 36.786,815819, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.546,760680 (regressionFit = 39.546,760679, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.337,639541 (regressionFit = 39.337,639540, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.237,214598 (regressionFit = 39.237,214597, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.264,324993 (regressionFit = 39.264,324992, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.382,788103 (regressionFit = 38.382,788102, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.637,162592 (regressionFit = 39.637,162591, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.506,152858 (regressionFit = 38.506,152857, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.201,871597 (regressionFit = 37.201,871596, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.604,062463 (regressionFit = 39.604,062462, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.608,466081 (regressionFit = 39.608,466080, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.019,388871 (regressionFit = 39.019,388870, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.398,550879 (regressionFit = 39.398,550878, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.799,267521 (regressionFit = 37.799,267520, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.629,781185 (regressionFit = 39.629,781184, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.686,454048 (regressionFit = 38.686,454047, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.459,259956 (regressionFit = 39.459,259954, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 101,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.533,010437 (regressionFit = 39.533,010435, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 15,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.338,864441 (regressionFit = 33.338,864440, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.631,729726 (regressionFit = 39.631,729725, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.638,457648 (regressionFit = 39.638,457647, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 277).  [covers 11,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.313,124909 (regressionFit = 39.313,124908, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 276).  [covers 9,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.497,238969 (regressionFit = 39.497,238968, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 14,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.338,864441 (regressionFit = 33.338,864440, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.925,257034 (regressionFit = 36.925,257033, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.612,829726 (regressionFit = 39.612,829724, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.780,620084 (regressionFit = 38.780,620083, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.628,749898 (regressionFit = 38.628,749897, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.258,024659 (regressionFit = 33.258,024658, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 97,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.108,046458 (regressionFit = 39.108,046457, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.176,403309 (regressionFit = 39.176,403308, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.618,245003 (regressionFit = 39.618,245002, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.276,288528 (regressionFit = 39.276,288527, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.157,831192 (regressionFit = 39.157,831191, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 102,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.164,167220 (regressionFit = 39.164,167219, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -24.407,574443 (regressionFit = 24.407,574442, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.001,294509 (regressionFit = 38.001,294508, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 38,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.790,712816 (regressionFit = 33.790,712815, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.589,839753 (regressionFit = 39.589,839752, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.453,241329 (regressionFit = 39.453,241328, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.454,238102 (regressionFit = 36.454,238101, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
Comparing variance: 66.61714843749905 to score=0.0025 #egs=48.0
Comparing variance: 52.27538952067098 to score=0.0025 #egs=388.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 48,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-66,617148)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -66,617148) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 388,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-52,275390)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -52,275390) into the LAST position (#2) in the search queue.

% Time for loop #1: 226 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
% This clause covers 48 positive examples, of which 48 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3).  [covers 48,0/48,0 pos, 0,0/0,0 neg]'
%     Score = -23.480,474260 (regressionFit = 23.480,474259, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 48,0/48,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 6 20 23 24 29 31 37 43
% Gleaner: New best node found (score = -23.480,474260): medv(A) :- rm(A, 3).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.194,234320 (regressionFit = 3.194,234318, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 6).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.194,234320): medv(A) :- rm(A, 3), crim(A, 6).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.195,896851 (regressionFit = 3.195,896849, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 7).  [covers 14,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.089,562441 (regressionFit = 3.089,562439, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 5).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.089,562441): medv(A) :- rm(A, 3), crim(A, 5).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.102,009949 (regressionFit = 3.102,009947, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 1).  [covers 10,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.191,002013 (regressionFit = 3.191,002011, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 0).  [covers 21,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 22).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.176,844724 (regressionFit = 3.176,844722, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 20).  [covers 12,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 35).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.189,111760 (regressionFit = 3.189,111758, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 1).  [covers 15,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.159,079724 (regressionFit = 3.159,079722, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 2).  [covers 12,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 5).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.181,004498 (regressionFit = 3.181,004496, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 4).  [covers 14,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.196,099026 (regressionFit = 3.196,099024, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 0).  [covers 41,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.196,495739 (regressionFit = 3.196,495737, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 4).  [covers 10,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,620002 (regressionFit = 3.197,620000, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 3).  [covers 3,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.135,644320 (regressionFit = 3.135,644318, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 5).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.194,837354 (regressionFit = 3.194,837352, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 8).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.170,082752 (regressionFit = 3.170,082750, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 2).  [covers 8,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.193,189676 (regressionFit = 3.193,189674, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 1).  [covers 5,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.186,969410 (regressionFit = 3.186,969408, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 4).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.141,492002 (regressionFit = 3.141,492000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 10).  [covers 5,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.095,211669 (regressionFit = 3.095,211667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 9).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 7).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.041,211222 (regressionFit = 3.041,211220, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), age(A, 3).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.041,211222): medv(A) :- rm(A, 3), age(A, 3).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.131,104526 (regressionFit = 3.131,104524, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 6).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.181,319660 (regressionFit = 3.181,319658, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 4).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.074,532446 (regressionFit = 3.074,532444, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 1).  [covers 3,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.104,534320 (regressionFit = 3.104,534318, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 5).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.096,257354 (regressionFit = 3.096,257352, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 8).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.182,786134 (regressionFit = 3.182,786132, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 2).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.183,777957 (regressionFit = 3.183,777955, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 3).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,609233 (regressionFit = 3.197,609231, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 8).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.168,139113 (regressionFit = 3.168,139111, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 7).  [covers 3,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.992,714727 (regressionFit = 2.992,714725, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 5).  [covers 17,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.992,714727): medv(A) :- rm(A, 3), rad(A, 5).  [covers 17,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 1).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 193).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,609233 (regressionFit = 3.197,609231, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 307).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 330).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.187,786327 (regressionFit = 3.187,786325, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 216).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 284).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.181,293242 (regressionFit = 3.181,293240, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 2).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,609233 (regressionFit = 3.197,609231, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 6).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 5).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.752,971645 (regressionFit = 2.752,971643, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 9).  [covers 20,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.752,971645): medv(A) :- rm(A, 3), ptratio(A, 9).  [covers 20,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.195,405002 (regressionFit = 3.195,405000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 1).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.189,703695 (regressionFit = 3.189,703693, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 2).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.123,735263 (regressionFit = 3.123,735261, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 8).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.155,724792 (regressionFit = 3.155,724789, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 6).  [covers 10,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.745,712267 (regressionFit = 2.745,712265, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 1).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.745,712267): medv(A) :- rm(A, 3), b(A, 1).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.083,084686 (regressionFit = 3.083,084684, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 5).  [covers 10,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,459320 (regressionFit = 3.197,459318, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), b(A, 3).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.062,356191 (regressionFit = 2.062,356189, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.062,356191): medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.904,231455 (regressionFit = 2.904,231453, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 1).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.137,922752 (regressionFit = 3.137,922750, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 9).  [covers 8,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 8).  [covers 2,0/48,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -66,617.
% Will extend: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
Comparing variance: 26.586286982248566 to score=0.0025 #egs=26.0
Comparing variance: 62.323305785123836 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 26,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-26,586287)
%         ILP node to extend: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -26,586287) into the LAST position (#2) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 22,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-62,323306)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -62,323306) into position #1 in the search queue (new size=3).

% Time for loop #2: 73 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
% This clause covers 26 positive examples, of which 26 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3).  [covers 48,0/22,0 pos, 0,0/0,0 neg]'
%     Score = -23.480,474260 (regressionFit = 23.480,474259, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 22,0/22,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 2 3 4 5 6 7 8 13
% Gleaner: New best node found (score = -23.480,474260): medv(A) :- rm(A, 3).  [covers 22,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.371,012502 (regressionFit = 1.371,012500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 2).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.371,012502): medv(A) :- rm(A, 3), crim(A, 2).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 1).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.347,001907 (regressionFit = 1.347,001905, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 7).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.347,001907): medv(A) :- rm(A, 3), crim(A, 7).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.160,201113 (regressionFit = 1.160,201111, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 5).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.160,201113): medv(A) :- rm(A, 3), crim(A, 5).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 45).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 80).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.008,994478 (regressionFit = 1.008,994476, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 0).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.008,994478): medv(A) :- rm(A, 3), zn(A, 0).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -942,138122 (regressionFit = 942,138120, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 20).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -942,138122): medv(A) :- rm(A, 3), zn(A, 20).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -947,509917 (regressionFit = 947,509915, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 4).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.370,730835 (regressionFit = 1.370,730833, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 1).  [covers 6,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.329,307296 (regressionFit = 1.329,307294, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 2).  [covers 5,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.281,405265 (regressionFit = 1.281,405263, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 0).  [covers 19,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 5).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 6).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.368,278590 (regressionFit = 1.368,278588, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 4).  [covers 5,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 3).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.143,945907 (regressionFit = 1.143,945905, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 8).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.366,694377 (regressionFit = 1.366,694375, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), age(A, 3).  [covers 6,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.314,370280 (regressionFit = 1.314,370278, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 2).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.360,574446 (regressionFit = 1.360,574444, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 4).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -937,457780 (regressionFit = 937,457778, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -937,457780): medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 6).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 2).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 5).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.339,532985 (regressionFit = 1.339,532982, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 4).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.368,203511 (regressionFit = 1.368,203509, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 1).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.366,991113 (regressionFit = 1.366,991111, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 9).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -947,509917 (regressionFit = 947,509915, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 5).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 2).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.326,547370 (regressionFit = 1.326,547368, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 8).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 398).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 329).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.326,547370 (regressionFit = 1.326,547368, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 307).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -923,328573 (regressionFit = 923,328571, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -923,328573): medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 1).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -952,847865 (regressionFit = 952,847863, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 9).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.326,547370 (regressionFit = 1.326,547368, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 6).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.191,763613 (regressionFit = 1.191,763611, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 1).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.356,536142 (regressionFit = 1.356,536140, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 2).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 8).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.295,510590 (regressionFit = 1.295,510588, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 6).  [covers 5,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.085,512502 (regressionFit = 1.085,512500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 5).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.370,812481 (regressionFit = 1.370,812479, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 1).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.273,032145 (regressionFit = 1.273,032143, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 9).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 2).  [covers 2,0/22,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -62,323.
% Will extend: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
Comparing variance: 53.02000000000021 to score=0.0025 #egs=8.0
Comparing variance: 35.65489795918347 to score=0.0025 #egs=14.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 8,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-53,020000)
%         ILP node to extend: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -53,020000) into position #1 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 14,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-35,654898)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 22,0/22,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -35,654898) into position #3 in the search queue (new size=4).

% Time for loop #3: 37 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
% This clause covers 8 positive examples, of which 8 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/8,0 pos, 0,0/0,0 neg]'
%     Score = -923,328573 (regressionFit = 923,328571, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/8,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 0 1 2 3 4 5 6 7
% Gleaner: New best node found (score = -923,328573): medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -421,280003 (regressionFit = 421,280000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), crim(A, 5).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -421,280003): medv(A) :- rm(A, 3), tax(A, 264), crim(A, 5).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -421,280003 (regressionFit = 421,280000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), crim(A, 7).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), zn(A, 20).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), indus(A, 4).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), chas(A, 0).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), nox(A, 8).  [covers 7,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), nox(A, 7).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -328,940003 (regressionFit = 328,940000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 9).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -328,940003): medv(A) :- rm(A, 3), tax(A, 264), age(A, 9).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 6).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 2).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 7).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 4).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -423,678670 (regressionFit = 423,678667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), dis(A, 9).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%     Score = -295,198670 (regressionFit = 295,198667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -295,198670): medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), dis(A, 7).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), rad(A, 5).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), ptratio(A, 9).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), b(A, 6).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -401,715003 (regressionFit = 401,715000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), b(A, 5).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), b(A, 2).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 1).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 2).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 8).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 9).  [covers 2,0/8,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -53,020.
% Will extend: medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
Comparing variance: 26.74888888888866 to score=0.0025 #egs=3.0
Comparing variance: 42.990399999999866 to score=0.0025 #egs=5.0
%   Creating a TRUE-branch leaf because length = 4 > 3
%   Creating a FALSE-branch leaf because wgtedCountFalseBranchPos = 5,0 < 2.1 * minPosCov = 6,3

% Time for loop #4: 28 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 16 89 102 144 179 201 237 247

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 388,0/388,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 388,0/388,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -20.152,832076 (regressionFit = 20.152,832075, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 45,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20.152,832076): medv(A) :- crim(A, 3).  [covers 45,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.294,180129 (regressionFit = 19.294,180128, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 45,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19.294,180129): medv(A) :- crim(A, 2).  [covers 45,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.282,748757 (regressionFit = 20.282,748756, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.802,307867 (regressionFit = 19.802,307866, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.253,490632 (regressionFit = 20.253,490631, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 29,0/388,0 pos, 0,0/0,0 neg]
%     Score = -16.124,537208 (regressionFit = 16.124,537207, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -16.124,537208): medv(A) :- crim(A, 10).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
%     Score = -18.021,872107 (regressionFit = 18.021,872106, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 286,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.766,276225 (regressionFit = 19.766,276224, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 45).  [covers 4,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.104,303893 (regressionFit = 20.104,303892, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 80).  [covers 11,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.223,952278 (regressionFit = 20.223,952277, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 70).  [covers 3,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.279,348978 (regressionFit = 20.279,348977, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.013,904208 (regressionFit = 19.013,904207, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 35,0/388,0 pos, 0,0/0,0 neg]
%     Score = -18.742,559735 (regressionFit = 18.742,559734, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 33,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.121,966555 (regressionFit = 20.121,966554, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/388,0 pos, 0,0/0,0 neg]
%     Score = -16.995,773383 (regressionFit = 16.995,773382, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 88,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.723,458473 (regressionFit = 19.723,458472, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 360,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.723,458473 (regressionFit = 19.723,458472, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 28,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.070,208776 (regressionFit = 20.070,208775, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.793,921077 (regressionFit = 19.793,921076, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 46,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.515,764594 (regressionFit = 19.515,764592, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 38,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.546,665423 (regressionFit = 19.546,665422, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.326,079501 (regressionFit = 19.326,079500, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.968,563732 (regressionFit = 19.968,563731, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 29,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.261,128412 (regressionFit = 20.261,128411, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -16.706,506889 (regressionFit = 16.706,506888, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 46,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.254,983198 (regressionFit = 20.254,983196, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 43,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.256,664206 (regressionFit = 20.256,664205, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
%     Score = -18.785,799367 (regressionFit = 18.785,799366, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.197,132334 (regressionFit = 20.197,132333, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 34,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.092,406243 (regressionFit = 20.092,406242, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.411,196110 (regressionFit = 19.411,196109, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 43,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.078,202657 (regressionFit = 20.078,202656, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 38,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.210,832171 (regressionFit = 20.210,832170, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 34,0/388,0 pos, 0,0/0,0 neg]
%     Score = -18.947,941265 (regressionFit = 18.947,941264, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 47,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.923,400412 (regressionFit = 19.923,400411, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 35,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.033,212110 (regressionFit = 20.033,212109, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 36,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.264,227893 (regressionFit = 20.264,227892, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 45,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.872,466756 (regressionFit = 19.872,466755, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 42,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.278,847408 (regressionFit = 20.278,847407, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 27,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.599,060990 (regressionFit = 19.599,060989, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 50,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.281,849028 (regressionFit = 20.281,849027, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 18,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.996,852393 (regressionFit = 19.996,852392, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 95,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.282,844400 (regressionFit = 20.282,844399, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 97,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.208,592387 (regressionFit = 20.208,592386, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 13,0/388,0 pos, 0,0/0,0 neg]
%     Score = -16.995,773383 (regressionFit = 16.995,773382, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 88,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.266,535856 (regressionFit = 20.266,535855, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 432).  [covers 9,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.057,031356 (regressionFit = 20.057,031354, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 398).  [covers 10,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.233,852733 (regressionFit = 20.233,852732, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 277).  [covers 11,0/388,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 315).  [covers 2,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.223,952278 (regressionFit = 20.223,952277, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 358).  [covers 3,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.263,089212 (regressionFit = 20.263,089211, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 287).  [covers 8,0/388,0 pos, 0,0/0,0 neg]
%     Score = -16.995,773383 (regressionFit = 16.995,773382, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 88,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.719,093507 (regressionFit = 19.719,093506, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.467,369423 (regressionFit = 19.467,369422, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.037,631528 (regressionFit = 20.037,631527, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 48,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.129,458290 (regressionFit = 20.129,458289, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
%     Score = -17.059,710215 (regressionFit = 17.059,710214, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 95,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.241,784299 (regressionFit = 20.241,784298, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 37,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.210,053644 (regressionFit = 20.210,053643, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 43,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.038,160325 (regressionFit = 20.038,160324, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 33,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.233,401635 (regressionFit = 20.233,401634, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 95,0/388,0 pos, 0,0/0,0 neg]
%     Score = -18.031,774794 (regressionFit = 18.031,774793, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.262,545787 (regressionFit = 20.262,545786, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 42,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.639,039902 (regressionFit = 19.639,039901, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 38,0/388,0 pos, 0,0/0,0 neg]
%     Score = -18.544,702343 (regressionFit = 18.544,702342, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.264,069164 (regressionFit = 20.264,069163, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/388,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- crim(A, 10).  [covers 44,0/388,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- crim(A, 10).  [covers 44,0/388,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -52,275.
% Will extend: medv(A) :- crim(A, 10).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
Comparing variance: 27.107246900826507 to score=0.0025 #egs=44.0
Comparing variance: 43.40644867157861 to score=0.0025 #egs=344.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 44,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-27,107247)
%         ILP node to extend: medv(A) :- crim(A, 10).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -27,107247) into position #2 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 344,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-43,406449)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -43,406449) into position #1 in the search queue (new size=4).

% Time for loop #5: 212 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #5, the best clause found is:
%      medv(A) :- crim(A, 10).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
% This clause covers 44 positive examples, of which 44 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 6 positive seeds: 11 132 147 196 301 341

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 344,0/344,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 344,0/344,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -14.922,362301 (regressionFit = 14.922,362300, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 45,0/344,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -14.922,362301): medv(A) :- crim(A, 3).  [covers 45,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.632,828278 (regressionFit = 14.632,828277, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 42,0/344,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -14.632,828278): medv(A) :- crim(A, 5).  [covers 42,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.874,745119 (regressionFit = 14.874,745118, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 40,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.423,528357 (regressionFit = 14.423,528356, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 39,0/344,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -14.423,528357): medv(A) :- crim(A, 1).  [covers 39,0/344,0 pos, 0,0/0,0 neg]
%     Score = -13.736,405677 (regressionFit = 13.736,405676, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 242,0/344,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -13.736,405677): medv(A) :- zn(A, 0).  [covers 242,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.931,233048 (regressionFit = 14.931,233047, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 30).  [covers 6,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.822,519532 (regressionFit = 14.822,519531, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 75).  [covers 3,0/344,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 28).  [covers 2,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.472,322067 (regressionFit = 14.472,322066, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.912,427493 (regressionFit = 14.912,427492, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 47,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.901,122826 (regressionFit = 14.901,122825, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.117,177897 (regressionFit = 14.117,177896, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 35,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.914,842005 (regressionFit = 14.914,842004, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 7).  [covers 17,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.632,321868 (regressionFit = 14.632,321867, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 316,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.931,717962 (regressionFit = 14.931,717961, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 40,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.742,131855 (regressionFit = 14.742,131854, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 46,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.386,546602 (regressionFit = 14.386,546601, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.553,228146 (regressionFit = 14.553,228145, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 40,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.714,316567 (regressionFit = 14.714,316566, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 40,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.828,082298 (regressionFit = 14.828,082297, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 41,0/344,0 pos, 0,0/0,0 neg]
%     Score = -13.950,426470 (regressionFit = 13.950,426469, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 38,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.762,454881 (regressionFit = 14.762,454880, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 41,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.929,894313 (regressionFit = 14.929,894312, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 38,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.852,259249 (regressionFit = 14.852,259248, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 37,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.779,938983 (regressionFit = 14.779,938982, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 32,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.931,818114 (regressionFit = 14.931,818113, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 29,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.894,183885 (regressionFit = 14.894,183884, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 39,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.467,229768 (regressionFit = 14.467,229767, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 43,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.758,997555 (regressionFit = 14.758,997554, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 26,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.891,255152 (regressionFit = 14.891,255151, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 45,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.915,234885 (regressionFit = 14.915,234884, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 45,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.780,064689 (regressionFit = 14.780,064688, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 42,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.859,904269 (regressionFit = 14.859,904268, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 36,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.916,916393 (regressionFit = 14.916,916392, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 95,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.915,020829 (regressionFit = 14.915,020828, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 18,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.748,906100 (regressionFit = 14.748,906099, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 97,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.391,057953 (regressionFit = 14.391,057952, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 33,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.918,754263 (regressionFit = 14.918,754262, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 384).  [covers 11,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.931,413040 (regressionFit = 14.931,413039, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 300).  [covers 7,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.735,545528 (regressionFit = 14.735,545527, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 30,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.864,063053 (regressionFit = 14.864,063052, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 14,0/344,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 469).  [covers 1,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.906,141795 (regressionFit = 14.906,141794, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 270).  [covers 5,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.390,929969 (regressionFit = 14.390,929968, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 32,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.697,182624 (regressionFit = 14.697,182623, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 39,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.882,001009 (regressionFit = 14.882,001008, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 48,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.587,785763 (regressionFit = 14.587,785762, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 7).  [covers 16,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.674,439179 (regressionFit = 14.674,439178, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 40,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.856,775269 (regressionFit = 14.856,775268, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 33,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.926,192308 (regressionFit = 14.926,192307, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 42,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.843,263696 (regressionFit = 14.843,263695, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 35,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.931,522949 (regressionFit = 14.931,522948, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 81,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.913,973112 (regressionFit = 14.913,973111, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 25,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.740,129725 (regressionFit = 14.740,129724, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 40,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.038,729586 (regressionFit = 14.038,729585, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 35,0/344,0 pos, 0,0/0,0 neg]
%     Score = -14.746,729969 (regressionFit = 14.746,729968, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 32,0/344,0 pos, 0,0/0,0 neg]
%     Score = -13.767,372567 (regressionFit = 13.767,372566, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 40,0/344,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0).  [covers 242,0/344,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0).  [covers 242,0/344,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -43,406.
% Will extend: medv(A) :- zn(A, 0).  [covers 242,0/344,0 pos, 0,0/0,0 neg]
Comparing variance: 45.91754046854764 to score=0.0025 #egs=242.0
Comparing variance: 25.729028258362188 to score=0.0025 #egs=102.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 242,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-45,917540)
%         ILP node to extend: medv(A) :- zn(A, 0).  [covers 242,0/344,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -45,917540) into position #1 in the search queue (new size=4).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 102,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-25,729028)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -25,729028) into the LAST position (#5) in the search queue.

% Time for loop #6: 180 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      medv(A) :- zn(A, 0).  [covers 242,0/344,0 pos, 0,0/0,0 neg]
% This clause covers 242 positive examples, of which 242 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- zn(A, 0).  [covers 242,0/242,0 pos, 0,0/0,0 neg]'
%     Score = -13.736,405677 (regressionFit = 13.736,405676, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 242,0/242,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 37 61 94 120 123 124 136 228
% Gleaner: New best node found (score = -13.736,405677): medv(A) :- zn(A, 0).  [covers 242,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.109,298993 (regressionFit = 11.109,298991, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 7).  [covers 31,0/242,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11.109,298993): medv(A) :- zn(A, 0), crim(A, 7).  [covers 31,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.940,899502 (regressionFit = 10.940,899500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 5).  [covers 39,0/242,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10.940,899502): medv(A) :- zn(A, 0), crim(A, 5).  [covers 39,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.110,419037 (regressionFit = 11.110,419035, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 4).  [covers 28,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.747,319041 (regressionFit = 10.747,319039, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 2).  [covers 27,0/242,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10.747,319041): medv(A) :- zn(A, 0), crim(A, 2).  [covers 27,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.004,574297 (regressionFit = 11.004,574295, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 3).  [covers 29,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.914,929397 (regressionFit = 10.914,929395, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 8).  [covers 21,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.948,891992 (regressionFit = 10.948,891990, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 3).  [covers 40,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.107,256021 (regressionFit = 11.107,256019, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 6).  [covers 36,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.042,871509 (regressionFit = 11.042,871507, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 7).  [covers 15,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.680,158579 (regressionFit = 10.680,158577, penalties=2.0300000000000005E-6) for clause:  medv(A) :- zn(A, 0), chas(A, 0).  [covers 217,0/242,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10.680,158579): medv(A) :- zn(A, 0), chas(A, 0).  [covers 217,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.680,158579 (regressionFit = 10.680,158577, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), chas(A, 1).  [covers 25,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.700,479349 (regressionFit = 10.700,479347, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 8).  [covers 20,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.870,376089 (regressionFit = 10.870,376087, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 1).  [covers 46,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.480,290409 (regressionFit = 10.480,290407, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 4).  [covers 34,0/242,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10.480,290409): medv(A) :- zn(A, 0), nox(A, 4).  [covers 34,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.101,558336 (regressionFit = 11.101,558334, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 5).  [covers 13,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.082,847723 (regressionFit = 11.082,847721, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 2).  [covers 27,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.611,759261 (regressionFit = 10.611,759259, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 7).  [covers 32,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.100,650188 (regressionFit = 11.100,650186, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 5).  [covers 30,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.204,166431 (regressionFit = 10.204,166429, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1).  [covers 19,0/242,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10.204,166431): medv(A) :- zn(A, 0), rm(A, 1).  [covers 19,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.066,554919 (regressionFit = 11.066,554917, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 10).  [covers 29,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.077,737475 (regressionFit = 11.077,737473, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 5).  [covers 32,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.870,201541 (regressionFit = 10.870,201538, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 1).  [covers 26,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.062,317684 (regressionFit = 11.062,317682, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 3).  [covers 22,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.111,649809 (regressionFit = 11.111,649807, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 9).  [covers 29,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.066,935638 (regressionFit = 11.066,935636, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 4).  [covers 22,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.529,218033 (regressionFit = 10.529,218031, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 9).  [covers 25,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.089,668802 (regressionFit = 11.089,668800, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 1).  [covers 36,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.948,768142 (regressionFit = 10.948,768140, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 4).  [covers 32,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.109,862951 (regressionFit = 11.109,862949, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 2).  [covers 26,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.983,715296 (regressionFit = 10.983,715294, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 3).  [covers 17,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.913,006778 (regressionFit = 10.913,006776, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 4).  [covers 70,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.109,184388 (regressionFit = 11.109,184386, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 5).  [covers 72,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.917,761048 (regressionFit = 10.917,761046, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 437).  [covers 14,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.059,939952 (regressionFit = 11.059,939950, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 307).  [covers 30,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.060,260262 (regressionFit = 11.060,260260, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 277).  [covers 11,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.055,095681 (regressionFit = 11.055,095679, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 289).  [covers 5,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.106,762147 (regressionFit = 11.106,762145, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 304).  [covers 12,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.111,415426 (regressionFit = 11.111,415424, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 398).  [covers 6,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.917,761048 (regressionFit = 10.917,761046, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 7).  [covers 14,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.842,187812 (regressionFit = 10.842,187810, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 4).  [covers 32,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.011,138245 (regressionFit = 11.011,138243, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 3).  [covers 38,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.047,898312 (regressionFit = 11.047,898310, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 1).  [covers 10,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.063,018716 (regressionFit = 11.063,018714, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 3).  [covers 30,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.105,222498 (regressionFit = 11.105,222496, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 4).  [covers 15,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.109,154507 (regressionFit = 11.109,154505, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 6).  [covers 23,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.090,046391 (regressionFit = 11.090,046389, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 1).  [covers 52,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.090,711608 (regressionFit = 11.090,711606, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 5).  [covers 24,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.059,019327 (regressionFit = 11.059,019325, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 10).  [covers 27,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.606,206206 (regressionFit = 10.606,206204, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 2).  [covers 24,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.573,880002 (regressionFit = 10.573,880000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 7).  [covers 33,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.077,858278 (regressionFit = 11.077,858276, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 8).  [covers 37,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.098,709640 (regressionFit = 11.098,709638, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 4).  [covers 31,0/242,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), rm(A, 1).  [covers 19,0/242,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), rm(A, 1).  [covers 19,0/242,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -45,918.
% Will extend: medv(A) :- zn(A, 0), rm(A, 1).  [covers 19,0/242,0 pos, 0,0/0,0 neg]
Comparing variance: 42.55606648199443 to score=0.0025 #egs=19.0
Comparing variance: 42.13274065434671 to score=0.0025 #egs=223.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 19,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-42,556066)
%         ILP node to extend: medv(A) :- zn(A, 0), rm(A, 1).  [covers 19,0/242,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -42,556066) into position #1 in the search queue (new size=5).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 223,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-42,132741)
%         ILP node to extend: medv(A) :- zn(A, 0).  [covers 242,0/242,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -42,132741) into position #2 in the search queue (new size=6).

% Time for loop #7: 274 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      medv(A) :- zn(A, 0), rm(A, 1).  [covers 19,0/242,0 pos, 0,0/0,0 neg]
% This clause covers 19 positive examples, of which 19 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- zn(A, 0), rm(A, 1).  [covers 19,0/19,0 pos, 0,0/0,0 neg]'
%     Score = -10.204,166431 (regressionFit = 10.204,166429, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1).  [covers 19,0/19,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 1 5 7 8 10 11 13 15
% Gleaner: New best node found (score = -10.204,166431): medv(A) :- zn(A, 0), rm(A, 1).  [covers 19,0/19,0 pos, 0,0/0,0 neg]
%     Score = -807,761289 (regressionFit = 807,761286, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), crim(A, 3).  [covers 5,0/19,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -807,761289): medv(A) :- zn(A, 0), rm(A, 1), crim(A, 3).  [covers 5,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), crim(A, 2).  [covers 2,0/19,0 pos, 0,0/0,0 neg]
%     Score = -799,184146 (regressionFit = 799,184143, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), crim(A, 7).  [covers 5,0/19,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -799,184146): medv(A) :- zn(A, 0), rm(A, 1), crim(A, 7).  [covers 5,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), crim(A, 6).  [covers 2,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), crim(A, 1).  [covers 1,0/19,0 pos, 0,0/0,0 neg]
%     Score = -736,986045 (regressionFit = 736,986042, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), indus(A, 6).  [covers 3,0/19,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -736,986045): medv(A) :- zn(A, 0), rm(A, 1), indus(A, 6).  [covers 3,0/19,0 pos, 0,0/0,0 neg]
%     Score = -807,611045 (regressionFit = 807,611042, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), indus(A, 7).  [covers 3,0/19,0 pos, 0,0/0,0 neg]
%     Score = -799,880836 (regressionFit = 799,880833, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), indus(A, 2).  [covers 4,0/19,0 pos, 0,0/0,0 neg]
%     Score = -796,819378 (regressionFit = 796,819375, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), indus(A, 1).  [covers 3,0/19,0 pos, 0,0/0,0 neg]
%     Score = -629,777503 (regressionFit = 629,777500, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), chas(A, 0).  [covers 16,0/19,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -629,777503): medv(A) :- zn(A, 0), rm(A, 1), chas(A, 0).  [covers 16,0/19,0 pos, 0,0/0,0 neg]
%     Score = -629,777503 (regressionFit = 629,777500, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), chas(A, 1).  [covers 3,0/19,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -629,777503): medv(A) :- zn(A, 0), rm(A, 1), chas(A, 1).  [covers 3,0/19,0 pos, 0,0/0,0 neg]
%     Score = -710,796574 (regressionFit = 710,796571, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), nox(A, 1).  [covers 5,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), nox(A, 4).  [covers 2,0/19,0 pos, 0,0/0,0 neg]
%     Score = -792,604106 (regressionFit = 792,604103, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), nox(A, 3).  [covers 6,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), nox(A, 5).  [covers 2,0/19,0 pos, 0,0/0,0 neg]
%     Score = -798,202289 (regressionFit = 798,202286, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), age(A, 2).  [covers 5,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), age(A, 10).  [covers 1,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), age(A, 4).  [covers 2,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), age(A, 8).  [covers 2,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), age(A, 3).  [covers 1,0/19,0 pos, 0,0/0,0 neg]
%     Score = -757,596670 (regressionFit = 757,596667, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), age(A, 1).  [covers 3,0/19,0 pos, 0,0/0,0 neg]
%     Score = -807,610003 (regressionFit = 807,610000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), dis(A, 6).  [covers 4,0/19,0 pos, 0,0/0,0 neg]
%     Score = -808,343813 (regressionFit = 808,343810, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), dis(A, 4).  [covers 7,0/19,0 pos, 0,0/0,0 neg]
%     Score = -763,691045 (regressionFit = 763,691042, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), dis(A, 3).  [covers 3,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), rad(A, 6).  [covers 1,0/19,0 pos, 0,0/0,0 neg]
%     Score = -807,791503 (regressionFit = 807,791500, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), rad(A, 5).  [covers 4,0/19,0 pos, 0,0/0,0 neg]
%     Score = -799,880836 (regressionFit = 799,880833, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), rad(A, 8).  [covers 4,0/19,0 pos, 0,0/0,0 neg]
%     Score = -749,280574 (regressionFit = 749,280571, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), rad(A, 4).  [covers 5,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), rad(A, 1).  [covers 1,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), tax(A, 432).  [covers 1,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), tax(A, 276).  [covers 2,0/19,0 pos, 0,0/0,0 neg]
%     Score = -808,049146 (regressionFit = 808,049143, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), tax(A, 307).  [covers 5,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), tax(A, 289).  [covers 2,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), tax(A, 304).  [covers 2,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), tax(A, 422).  [covers 1,0/19,0 pos, 0,0/0,0 neg]
%     Score = -808,277503 (regressionFit = 808,277500, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), ptratio(A, 2).  [covers 3,0/19,0 pos, 0,0/0,0 neg]
%     Score = -779,604836 (regressionFit = 779,604833, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), ptratio(A, 1).  [covers 4,0/19,0 pos, 0,0/0,0 neg]
%     Score = -795,185146 (regressionFit = 795,185143, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), ptratio(A, 6).  [covers 5,0/19,0 pos, 0,0/0,0 neg]
%     Score = -771,724378 (regressionFit = 771,724375, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), ptratio(A, 3).  [covers 3,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), b(A, 4).  [covers 2,0/19,0 pos, 0,0/0,0 neg]
%     Score = -808,486045 (regressionFit = 808,486042, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), b(A, 2).  [covers 3,0/19,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), b(A, 5).  [covers 2,0/19,0 pos, 0,0/0,0 neg]
%     Score = -806,740003 (regressionFit = 806,740000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), b(A, 9).  [covers 3,0/19,0 pos, 0,0/0,0 neg]
%     Score = -804,604003 (regressionFit = 804,604000, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), b(A, 1).  [covers 4,0/19,0 pos, 0,0/0,0 neg]
%     Score = -753,006045 (regressionFit = 753,006042, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), b(A, 6).  [covers 3,0/19,0 pos, 0,0/0,0 neg]
%     Score = -793,116045 (regressionFit = 793,116042, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), lstat(A, 8).  [covers 3,0/19,0 pos, 0,0/0,0 neg]
%     Score = -626,396670 (regressionFit = 626,396667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), lstat(A, 3).  [covers 3,0/19,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -626,396670): medv(A) :- zn(A, 0), rm(A, 1), lstat(A, 3).  [covers 3,0/19,0 pos, 0,0/0,0 neg]
%     Score = -749,449336 (regressionFit = 749,449333, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), lstat(A, 2).  [covers 4,0/19,0 pos, 0,0/0,0 neg]
%     Score = -785,384170 (regressionFit = 785,384167, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), lstat(A, 1).  [covers 3,0/19,0 pos, 0,0/0,0 neg]
%     Score = -806,760003 (regressionFit = 806,760000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1), lstat(A, 9).  [covers 5,0/19,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), rm(A, 1), lstat(A, 3).  [covers 3,0/19,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), rm(A, 1), lstat(A, 3).  [covers 3,0/19,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -42,556.
% Will extend: medv(A) :- zn(A, 0), rm(A, 1), lstat(A, 3).  [covers 3,0/19,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #8: 43 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      medv(A) :- zn(A, 0), rm(A, 1), lstat(A, 3).  [covers 3,0/19,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (medv(A) :- rm(A, 1))
Created a leaf under (medv(A) :- tax(A, 264))
Created a leaf under (medv(A) :- crim(A, 10))
Created a leaf under (medv(A) :- lstat(A, 3))
Created a leaf under (medv(A) :- zn(A, 0))

%%%%%  WILL-Produced Tree #5 @ 14:10:06 10/20/22.  %%%%%


% FOR medv(A):
%   if ( rm(A, 3) )
%   then if ( lstat(A, 3) )
%   | then return 43.94230769230769;  // std dev = 5,156, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( tax(A, 264) )
%   | | then if ( dis(A, 8) )
%   | | | then return 34.96666666666667;  // std dev = 8,958, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 43.260000000000005;  // std dev = 14,661, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 30.771428571428572;  // std dev = 5,971, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( crim(A, 10) )
%   | then return 10.865909090909089;  // std dev = 5,206, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else if ( zn(A, 0) )
%   | | then if ( rm(A, 1) )
%   | | | then if ( lstat(A, 3) )
%   | | | | then return 33.766666666666666;  // std dev = 19,645, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 25.275;  // std dev = 15,507, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 19.41479820627803;  // std dev = 6,491, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | | else return 24.061764705882354;  // std dev = 5,072, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */


% Clauses:

medv(A, 43.94230769230769) :- 
     rm(A, 3), 
     lstat(A, 3), 
     !. // Clause #1.

medv(A, 34.96666666666667) :- 
     rm(A, 3), 
     tax(A, 264), 
     dis(A, 8), 
     !. // Clause #2.

medv(A, 43.260000000000005) :- 
     rm(A, 3), 
     tax(A, 264), 
     !. // Clause #3.

medv(A, 30.771428571428572) :- 
     rm(A, 3), 
     !. // Clause #4.

medv(A, 10.865909090909089) :- 
     crim(A, 10), 
     !. // Clause #5.

medv(A, 33.766666666666666) :- 
     zn(A, 0), 
     rm(A, 1), 
     lstat(A, 3), 
     !. // Clause #6.

medv(A, 25.275) :- 
     zn(A, 0), 
     rm(A, 1), 
     !. // Clause #7.

medv(A, 19.41479820627803) :- 
     zn(A, 0), 
     !. // Clause #8.

medv(A, 24.061764705882354) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_medv(a, 43.94230769230769) :-  /* #pos=26 */ 
   rm(a, 3),
   lstat(a, 3),
   !. // Flattened version of clause #1.

flattened_medv(a, 34.96666666666667) :-  /* #pos=3 */ 
   rm(a, 3),
   tax(a, 264),
   dis(a, 8),
   !. // Flattened version of clause #2.

flattened_medv(a, 43.260000000000005) :-  /* #pos=5 */ 
   rm(a, 3),
   tax(a, 264),
   !. // Flattened version of clause #3.

flattened_medv(a, 30.771428571428572) :-  /* #pos=14 */ 
   rm(a, 3),
   !. // Flattened version of clause #4.

flattened_medv(a, 10.865909090909089) :-  /* #pos=44 */ 
   crim(a, 10),
   !. // Flattened version of clause #5.

flattened_medv(a, 33.766666666666666) :-  /* #pos=3 */ 
   zn(a, 0),
   rm(a, 1),
   lstat(a, 3),
   !. // Flattened version of clause #6.

flattened_medv(a, 25.275) :-  /* #pos=16 */ 
   zn(a, 0),
   rm(a, 1),
   !. // Flattened version of clause #7.

flattened_medv(a, 19.41479820627803) :-  /* #pos=223 */ 
   zn(a, 0),
   !. // Flattened version of clause #8.

flattened_medv(underscore, 24.061764705882354) :-  /* #pos=102 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   rm(a, 3)
%   crim(a, 10)
%   tax(a, 264)
%   dis(a, 8)
%   rm(a, 1)
%   lstat(a, 3)
%   zn(a, 0)

% Saving model in: data/boston_housing/train/models/bRDNs/medv.model.ckpt
% Time taken to learn 5 trees is 6,301 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:42.556066481994435
Set score:0.0025
% Kept 436 of the 436 positive examples.
% Kept 0 of the 0 negative examples.
% Dataset size: 436
Computing probabilities
prob time:322 milliseconds
No hidden examples for : medv
Time to build dataset: 327 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:90.91398930014299
Set score:0.0025

% Have these 8 positive seeds: 30 59 115 117 148 187 214 266

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -39.500,127853 (regressionFit = 39.500,127852, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -39.500,127853): medv(A) :- crim(A, 4).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.638,483808 (regressionFit = 39.638,483807, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.633,240561 (regressionFit = 37.633,240560, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -37.633,240561): medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.808,651307 (regressionFit = 38.808,651306, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.638,468162 (regressionFit = 39.638,468161, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -34.695,563004 (regressionFit = 34.695,563003, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -34.695,563004): medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.269,606668 (regressionFit = 38.269,606667, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 95).  [covers 4,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.062,758165 (regressionFit = 39.062,758164, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 21,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.631,729726 (regressionFit = 39.631,729725, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -35.626,344947 (regressionFit = 35.626,344946, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.505,053776 (regressionFit = 39.505,053775, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.605,364995 (regressionFit = 38.605,364994, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.847,221324 (regressionFit = 38.847,221323, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.638,499063 (regressionFit = 39.638,499062, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 7).  [covers 17,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.577,904001 (regressionFit = 38.577,904000, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 401,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.577,904001 (regressionFit = 38.577,904000, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 35,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.461,939144 (regressionFit = 39.461,939143, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.626,311286 (regressionFit = 37.626,311285, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.241,492656 (regressionFit = 38.241,492655, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.164,984537 (regressionFit = 38.164,984536, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.632,627139 (regressionFit = 39.632,627138, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.737,679697 (regressionFit = 38.737,679696, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.428,299302 (regressionFit = 39.428,299301, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.105,555484 (regressionFit = 39.105,555483, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.786,815820 (regressionFit = 36.786,815819, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -23.480,474260 (regressionFit = 23.480,474259, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -23.480,474260): medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.546,760680 (regressionFit = 39.546,760679, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.337,639541 (regressionFit = 39.337,639540, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.815,121425 (regressionFit = 37.815,121424, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.637,162592 (regressionFit = 39.637,162591, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.514,302075 (regressionFit = 38.514,302074, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.446,839830 (regressionFit = 39.446,839829, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.492,330687 (regressionFit = 39.492,330686, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 37,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.413,493707 (regressionFit = 39.413,493706, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.604,062463 (regressionFit = 39.604,062462, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.799,267521 (regressionFit = 37.799,267520, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.980,541901 (regressionFit = 38.980,541899, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.608,466081 (regressionFit = 39.608,466080, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.019,388871 (regressionFit = 39.019,388870, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.398,550879 (regressionFit = 39.398,550878, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.277,358952 (regressionFit = 39.277,358951, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 23,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.686,454048 (regressionFit = 38.686,454047, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.459,259956 (regressionFit = 39.459,259954, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 101,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.322,758601 (regressionFit = 38.322,758600, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 24,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.533,010437 (regressionFit = 39.533,010435, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 15,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.539,402678 (regressionFit = 39.539,402677, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 188).  [covers 7,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.631,729726 (regressionFit = 39.631,729725, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.541,413386 (regressionFit = 39.541,413385, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 224).  [covers 9,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.638,457648 (regressionFit = 39.638,457647, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 277).  [covers 11,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.559,309787 (regressionFit = 39.559,309786, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.631,702433 (regressionFit = 39.631,702432, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 289).  [covers 5,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 422).  [covers 1,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.637,264034 (regressionFit = 39.637,264033, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.925,257034 (regressionFit = 36.925,257033, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.612,829726 (regressionFit = 39.612,829724, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.628,749898 (regressionFit = 38.628,749897, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.814,127996 (regressionFit = 38.814,127995, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.780,620084 (regressionFit = 38.780,620083, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.737,874029 (regressionFit = 38.737,874028, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.276,288528 (regressionFit = 39.276,288527, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.108,046458 (regressionFit = 39.108,046457, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.618,245003 (regressionFit = 39.618,245002, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.164,167220 (regressionFit = 39.164,167219, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.157,831192 (regressionFit = 39.157,831191, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 102,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.918,740592 (regressionFit = 38.918,740591, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 38,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.281,193186 (regressionFit = 39.281,193185, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -24.407,574443 (regressionFit = 24.407,574442, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.589,839753 (regressionFit = 39.589,839752, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.453,241329 (regressionFit = 39.453,241328, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.918,361293 (regressionFit = 37.918,361292, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
Comparing variance: 66.61714843749905 to score=0.0025 #egs=48.0
Comparing variance: 52.27538952067098 to score=0.0025 #egs=388.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 48,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-66,617148)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -66,617148) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 388,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-52,275390)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -52,275390) into the LAST position (#2) in the search queue.

% Time for loop #1: 214 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
% This clause covers 48 positive examples, of which 48 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3).  [covers 48,0/48,0 pos, 0,0/0,0 neg]'
%     Score = -23.480,474260 (regressionFit = 23.480,474259, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 48,0/48,0 pos, 0,0/0,0 neg]

% Have these 7 positive seeds: 0 10 12 18 20 25 42
% Gleaner: New best node found (score = -23.480,474260): medv(A) :- rm(A, 3).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.111,104526 (regressionFit = 3.111,104524, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 2).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.111,104526): medv(A) :- rm(A, 3), crim(A, 2).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.194,234320 (regressionFit = 3.194,234318, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 6).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.102,009949 (regressionFit = 3.102,009947, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 1).  [covers 10,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.102,009949): medv(A) :- rm(A, 3), crim(A, 1).  [covers 10,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.195,896851 (regressionFit = 3.195,896849, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 7).  [covers 14,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.191,002013 (regressionFit = 3.191,002011, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 0).  [covers 21,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.193,252002 (regressionFit = 3.193,252000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 80).  [covers 3,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 82.5).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 90).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.189,111760 (regressionFit = 3.189,111758, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 1).  [covers 15,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.159,079724 (regressionFit = 3.159,079722, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 2).  [covers 12,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.181,004498 (regressionFit = 3.181,004496, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 4).  [covers 14,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.196,099026 (regressionFit = 3.196,099024, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 0).  [covers 41,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.170,082752 (regressionFit = 3.170,082750, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 2).  [covers 8,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.071,907752 (regressionFit = 3.071,907750, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 6).  [covers 8,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.071,907752): medv(A) :- rm(A, 3), nox(A, 6).  [covers 8,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.196,495739 (regressionFit = 3.196,495737, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 4).  [covers 10,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.193,189676 (regressionFit = 3.193,189674, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 1).  [covers 5,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.060,943097 (regressionFit = 3.060,943095, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 8).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.060,943097): medv(A) :- rm(A, 3), age(A, 8).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.141,492002 (regressionFit = 3.141,492000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 10).  [covers 5,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.114,321669 (regressionFit = 3.114,321667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 2).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.186,969410 (regressionFit = 3.186,969408, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 4).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.181,319660 (regressionFit = 3.181,319658, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 4).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.104,534320 (regressionFit = 3.104,534318, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 5).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.105,111072 (regressionFit = 3.105,111070, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 3).  [covers 5,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.182,786134 (regressionFit = 3.182,786132, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 2).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.111,584532 (regressionFit = 3.111,584530, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 2).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,609233 (regressionFit = 3.197,609231, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 8).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.183,777957 (regressionFit = 3.183,777955, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 3).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.186,045780 (regressionFit = 3.186,045778, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 276).  [covers 3,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 329).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 348).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,609233 (regressionFit = 3.197,609231, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 307).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 244).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 242).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.181,293242 (regressionFit = 3.181,293240, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 2).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.752,971645 (regressionFit = 2.752,971643, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 9).  [covers 20,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.752,971645): medv(A) :- rm(A, 3), ptratio(A, 9).  [covers 20,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,609233 (regressionFit = 3.197,609231, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 6).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.195,405002 (regressionFit = 3.195,405000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 1).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.745,712267 (regressionFit = 2.745,712265, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 1).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.745,712267): medv(A) :- rm(A, 3), b(A, 1).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,459320 (regressionFit = 3.197,459318, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), b(A, 3).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.123,735263 (regressionFit = 3.123,735261, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 8).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.083,084686 (regressionFit = 3.083,084684, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 5).  [covers 10,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.189,703695 (regressionFit = 3.189,703693, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 2).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.904,231455 (regressionFit = 2.904,231453, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 1).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.062,356191 (regressionFit = 2.062,356189, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.062,356191): medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.137,922752 (regressionFit = 3.137,922750, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 9).  [covers 8,0/48,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -66,617.
% Will extend: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
Comparing variance: 26.586286982248566 to score=0.0025 #egs=26.0
Comparing variance: 62.323305785123836 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 26,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-26,586287)
%         ILP node to extend: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -26,586287) into the LAST position (#2) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 22,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-62,323306)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -62,323306) into position #1 in the search queue (new size=3).

% Time for loop #2: 53 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
% This clause covers 26 positive examples, of which 26 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3).  [covers 48,0/22,0 pos, 0,0/0,0 neg]'
%     Score = -23.480,474260 (regressionFit = 23.480,474259, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 22,0/22,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 0 2 6 8 11 14 18 21
% Gleaner: New best node found (score = -23.480,474260): medv(A) :- rm(A, 3).  [covers 22,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.371,012502 (regressionFit = 1.371,012500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 2).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.371,012502): medv(A) :- rm(A, 3), crim(A, 2).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.347,001907 (regressionFit = 1.347,001905, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 7).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.347,001907): medv(A) :- rm(A, 3), crim(A, 7).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.160,201113 (regressionFit = 1.160,201111, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 5).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.160,201113): medv(A) :- rm(A, 3), crim(A, 5).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 10).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.008,994478 (regressionFit = 1.008,994476, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 0).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.008,994478): medv(A) :- rm(A, 3), zn(A, 0).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 45).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -942,138122 (regressionFit = 942,138120, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 20).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -942,138122): medv(A) :- rm(A, 3), zn(A, 20).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 33).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.370,730835 (regressionFit = 1.370,730833, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 1).  [covers 6,0/22,0 pos, 0,0/0,0 neg]
%     Score = -947,509917 (regressionFit = 947,509915, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 4).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.329,307296 (regressionFit = 1.329,307294, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 2).  [covers 5,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 10).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.281,405265 (regressionFit = 1.281,405263, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 0).  [covers 19,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.365,104563 (regressionFit = 1.365,104561, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 2).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 5).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 3).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.143,945907 (regressionFit = 1.143,945905, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 8).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 7).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.368,278590 (regressionFit = 1.368,278588, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 4).  [covers 5,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 10).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 1).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.366,694377 (regressionFit = 1.366,694375, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), age(A, 3).  [covers 6,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.360,574446 (regressionFit = 1.360,574444, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 4).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 6).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -937,457780 (regressionFit = 937,457778, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -937,457780): medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 5).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.339,532985 (regressionFit = 1.339,532982, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 4).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 2).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.368,203511 (regressionFit = 1.368,203509, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 1).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.366,991113 (regressionFit = 1.366,991111, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 9).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 7).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 6).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 10).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 2).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -947,509917 (regressionFit = 947,509915, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 5).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.326,547370 (regressionFit = 1.326,547368, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 8).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 7).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 24).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 276).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 398).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.326,547370 (regressionFit = 1.326,547368, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 307).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -923,328573 (regressionFit = 923,328571, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -923,328573): medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 222).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 666).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.370,947370 (regressionFit = 1.370,947368, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 2).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 1).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.326,547370 (regressionFit = 1.326,547368, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 6).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -952,847865 (regressionFit = 952,847863, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 9).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.370,836844 (regressionFit = 1.370,836842, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 3).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 10).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.191,763613 (regressionFit = 1.191,763611, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 1).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.295,510590 (regressionFit = 1.295,510588, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 6).  [covers 5,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.085,512502 (regressionFit = 1.085,512500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 5).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.370,812481 (regressionFit = 1.370,812479, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 1).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 2).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.273,032145 (regressionFit = 1.273,032143, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 9).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 10).  [covers 1,0/22,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -62,323.
% Will extend: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
Comparing variance: 53.02000000000021 to score=0.0025 #egs=8.0
Comparing variance: 35.65489795918347 to score=0.0025 #egs=14.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 8,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-53,020000)
%         ILP node to extend: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -53,020000) into position #1 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 14,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-35,654898)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 22,0/22,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -35,654898) into position #3 in the search queue (new size=4).

% Time for loop #3: 43 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
% This clause covers 8 positive examples, of which 8 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/8,0 pos, 0,0/0,0 neg]'
%     Score = -923,328573 (regressionFit = 923,328571, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/8,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 0 1 2 3 4 5 6 7
% Gleaner: New best node found (score = -923,328573): medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -421,280003 (regressionFit = 421,280000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), crim(A, 5).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -421,280003): medv(A) :- rm(A, 3), tax(A, 264), crim(A, 5).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -421,280003 (regressionFit = 421,280000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), crim(A, 7).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), zn(A, 20).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), indus(A, 4).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), chas(A, 0).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), nox(A, 8).  [covers 7,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), nox(A, 7).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -328,940003 (regressionFit = 328,940000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 9).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -328,940003): medv(A) :- rm(A, 3), tax(A, 264), age(A, 9).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 6).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 2).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 7).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 4).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -423,678670 (regressionFit = 423,678667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), dis(A, 9).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%     Score = -295,198670 (regressionFit = 295,198667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -295,198670): medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), dis(A, 7).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), rad(A, 5).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), ptratio(A, 9).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), b(A, 6).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -401,715003 (regressionFit = 401,715000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), b(A, 5).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), b(A, 2).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 1).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 2).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 8).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 9).  [covers 2,0/8,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -53,020.
% Will extend: medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
Comparing variance: 26.74888888888866 to score=0.0025 #egs=3.0
Comparing variance: 42.990399999999866 to score=0.0025 #egs=5.0
%   Creating a TRUE-branch leaf because length = 4 > 3
%   Creating a FALSE-branch leaf because wgtedCountFalseBranchPos = 5,0 < 2.1 * minPosCov = 6,3

% Time for loop #4: 18 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 5 positive seeds: 90 143 253 348 358

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 388,0/388,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 388,0/388,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -20.152,832076 (regressionFit = 20.152,832075, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 45,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20.152,832076): medv(A) :- crim(A, 3).  [covers 45,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.294,180129 (regressionFit = 19.294,180128, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 45,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19.294,180129): medv(A) :- crim(A, 2).  [covers 45,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.912,150307 (regressionFit = 19.912,150305, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 9).  [covers 32,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.282,748757 (regressionFit = 20.282,748756, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.766,276225 (regressionFit = 19.766,276224, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 45).  [covers 4,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.222,510619 (regressionFit = 20.222,510618, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 22).  [covers 8,0/388,0 pos, 0,0/0,0 neg]
%     Score = -18.021,872107 (regressionFit = 18.021,872106, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 286,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -18.021,872107): medv(A) :- zn(A, 0).  [covers 286,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.262,141673 (regressionFit = 20.262,141672, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 25).  [covers 10,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.274,728117 (regressionFit = 20.274,728116, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 12.5).  [covers 10,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.013,904208 (regressionFit = 19.013,904207, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 35,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.115,755157 (regressionFit = 20.115,755156, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 47,0/388,0 pos, 0,0/0,0 neg]
%     Score = -16.995,773383 (regressionFit = 16.995,773382, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 88,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -16.995,773383): medv(A) :- indus(A, 10).  [covers 88,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.937,070282 (regressionFit = 19.937,070281, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.723,458473 (regressionFit = 19.723,458472, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 360,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.723,458473 (regressionFit = 19.723,458472, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 28,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.793,921077 (regressionFit = 19.793,921076, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 46,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.968,563732 (regressionFit = 19.968,563731, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 29,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.778,487722 (regressionFit = 19.778,487721, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.546,665423 (regressionFit = 19.546,665422, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.236,072484 (regressionFit = 19.236,072483, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 43,0/388,0 pos, 0,0/0,0 neg]
%     Score = -16.706,506889 (regressionFit = 16.706,506888, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 46,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -16.706,506889): medv(A) :- rm(A, 4).  [covers 46,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.144,894065 (regressionFit = 20.144,894064, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 45,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.254,983198 (regressionFit = 20.254,983196, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 43,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.503,517229 (regressionFit = 19.503,517228, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.411,196110 (regressionFit = 19.411,196109, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 43,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.111,776227 (regressionFit = 19.111,776226, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.210,832171 (regressionFit = 20.210,832170, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 34,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.826,047734 (regressionFit = 19.826,047733, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 43,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.872,466756 (regressionFit = 19.872,466755, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 42,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.599,060990 (regressionFit = 19.599,060989, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 50,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.067,680605 (regressionFit = 20.067,680604, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 45,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.996,852393 (regressionFit = 19.996,852392, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 95,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.044,316333 (regressionFit = 20.044,316332, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 13,0/388,0 pos, 0,0/0,0 neg]
%     Score = -16.995,773383 (regressionFit = 16.995,773382, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 88,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.113,575565 (regressionFit = 20.113,575564, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 15,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.282,844400 (regressionFit = 20.282,844399, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 97,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.057,031356 (regressionFit = 20.057,031354, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 398).  [covers 10,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.222,510619 (regressionFit = 20.222,510618, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 330).  [covers 8,0/388,0 pos, 0,0/0,0 neg]
%     Score = -16.995,773383 (regressionFit = 16.995,773382, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 88,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.282,557279 (regressionFit = 20.282,557277, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 284).  [covers 6,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.280,294443 (regressionFit = 20.280,294442, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 345).  [covers 3,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.467,369423 (regressionFit = 19.467,369422, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.129,458290 (regressionFit = 20.129,458289, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
%     Score = -17.059,710215 (regressionFit = 17.059,710214, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 95,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.278,034304 (regressionFit = 20.278,034303, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 8).  [covers 8,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.147,875528 (regressionFit = 20.147,875527, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 36,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.259,274274 (regressionFit = 20.259,274273, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.241,784299 (regressionFit = 20.241,784298, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 37,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.233,401635 (regressionFit = 20.233,401634, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 95,0/388,0 pos, 0,0/0,0 neg]
%     Score = -16.029,444929 (regressionFit = 16.029,444928, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 25,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -16.029,444929): medv(A) :- lstat(A, 3).  [covers 25,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.675,733046 (regressionFit = 19.675,733045, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 43,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.639,039902 (regressionFit = 19.639,039901, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 38,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.264,069164 (regressionFit = 20.264,069163, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/388,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3).  [covers 25,0/388,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3).  [covers 25,0/388,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -52,275.
% Will extend: medv(A) :- lstat(A, 3).  [covers 25,0/388,0 pos, 0,0/0,0 neg]
Comparing variance: 51.9311040000002 to score=0.0025 #egs=25.0
Comparing variance: 40.58172817582246 to score=0.0025 #egs=363.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 25,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-51,931104)
%         ILP node to extend: medv(A) :- lstat(A, 3).  [covers 25,0/388,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -51,931104) into position #1 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 363,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-40,581728)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -40,581728) into position #2 in the search queue (new size=4).

% Time for loop #5: 192 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #5, the best clause found is:
%      medv(A) :- lstat(A, 3).  [covers 25,0/388,0 pos, 0,0/0,0 neg]
% This clause covers 25 positive examples, of which 25 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- lstat(A, 3).  [covers 25,0/25,0 pos, 0,0/0,0 neg]'
%     Score = -16.029,444929 (regressionFit = 16.029,444928, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 25,0/25,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 0 3 11 14 15 16 18 19
% Gleaner: New best node found (score = -16.029,444929): medv(A) :- lstat(A, 3).  [covers 25,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 5).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.178,559938 (regressionFit = 1.178,559936, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 1).  [covers 12,0/25,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.178,559938): medv(A) :- lstat(A, 3), crim(A, 1).  [covers 12,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 7).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 9).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -922,002145 (regressionFit = 922,002143, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -922,002145): medv(A) :- lstat(A, 3), zn(A, 0).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 95).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 20).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 55).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 90).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 9).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.291,308002 (regressionFit = 1.291,308000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 1).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.212,832066 (regressionFit = 1.212,832063, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 4).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 6).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -385,389548 (regressionFit = 385,389545, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 10).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -385,389548): medv(A) :- lstat(A, 3), indus(A, 10).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.013,077026 (regressionFit = 1.013,077024, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), chas(A, 0).  [covers 21,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.013,077026 (regressionFit = 1.013,077024, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), chas(A, 1).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 7).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.215,753458 (regressionFit = 1.215,753456, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 6).  [covers 8,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.297,394002 (regressionFit = 1.297,394000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 2).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 1).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 4).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -385,389548 (regressionFit = 385,389545, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 8).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.265,797335 (regressionFit = 1.265,797333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 4).  [covers 15,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.272,708573 (regressionFit = 1.272,708571, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 1).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -680,280002 (regressionFit = 680,280000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 5).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.134,394933 (regressionFit = 1.134,394931, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 10).  [covers 9,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.274,855002 (regressionFit = 1.274,855000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 8).  [covers 8,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 2).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 9).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.227,886581 (regressionFit = 1.227,886579, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 5).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.291,939288 (regressionFit = 1.291,939286, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 2).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 4).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.208,749526 (regressionFit = 1.208,749524, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 3).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -385,389548 (regressionFit = 385,389545, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 10).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.296,997546 (regressionFit = 1.296,997544, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 5).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.297,868002 (regressionFit = 1.297,868000, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 3).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.165,673256 (regressionFit = 1.165,673254, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 4).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -385,389548 (regressionFit = 385,389545, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 24).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 403).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 402).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 216).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 304).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 370).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 187).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -385,389548 (regressionFit = 385,389545, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 666).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 9).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.290,402383 (regressionFit = 1.290,402381, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 6).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.210,105502 (regressionFit = 1.210,105500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 1).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.250,697026 (regressionFit = 1.250,697024, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 3).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.288,113216 (regressionFit = 1.288,113214, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 2).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -385,389548 (regressionFit = 385,389545, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 10).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 9).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.183,496113 (regressionFit = 1.183,496111, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 1).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.226,257026 (regressionFit = 1.226,257024, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 2).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.237,000265 (regressionFit = 1.237,000263, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 5).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.186,773216 (regressionFit = 1.186,773214, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 8).  [covers 4,0/25,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3), indus(A, 10).  [covers 3,0/25,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3), indus(A, 10).  [covers 3,0/25,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -51,931.
% Will extend: medv(A) :- lstat(A, 3), indus(A, 10).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
Comparing variance: 0.0 to score=0.0025 #egs=3.0
Comparing variance: 17.517706611570414 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 3,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 22,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-17,517707)
%         ILP node to extend: medv(A) :- lstat(A, 3).  [covers 25,0/25,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -17,517707) into the LAST position (#4) in the search queue.

% Time for loop #6: 42 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      medv(A) :- lstat(A, 3), indus(A, 10).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 1 positive seeds: 192

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 363,0/363,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 363,0/363,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -14.701,707864 (regressionFit = 14.701,707863, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 39,0/363,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -14.701,707864): medv(A) :- crim(A, 4).  [covers 39,0/363,0 pos, 0,0/0,0 neg]
%     Score = -13.320,920626 (regressionFit = 13.320,920625, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 279,0/363,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -13.320,920626): medv(A) :- zn(A, 0).  [covers 279,0/363,0 pos, 0,0/0,0 neg]
%     Score = -14.690,715873 (regressionFit = 14.690,715872, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/363,0 pos, 0,0/0,0 neg]
%     Score = -14.570,636343 (regressionFit = 14.570,636342, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 339,0/363,0 pos, 0,0/0,0 neg]
%     Score = -13.810,677035 (regressionFit = 13.810,677034, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 36,0/363,0 pos, 0,0/0,0 neg]
%     Score = -14.719,472223 (regressionFit = 14.719,472222, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 39,0/363,0 pos, 0,0/0,0 neg]
%     Score = -14.538,354005 (regressionFit = 14.538,354004, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 36,0/363,0 pos, 0,0/0,0 neg]
%     Score = -14.529,974486 (regressionFit = 14.529,974485, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 36,0/363,0 pos, 0,0/0,0 neg]
%     Score = -14.408,239893 (regressionFit = 14.408,239892, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 89,0/363,0 pos, 0,0/0,0 neg]
%     Score = -14.683,089480 (regressionFit = 14.683,089479, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 287).  [covers 8,0/363,0 pos, 0,0/0,0 neg]
%     Score = -14.579,356102 (regressionFit = 14.579,356101, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 37,0/363,0 pos, 0,0/0,0 neg]
%     Score = -14.697,521924 (regressionFit = 14.697,521923, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 88,0/363,0 pos, 0,0/0,0 neg]
%     Score = -14.728,490404 (regressionFit = 14.728,490403, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/363,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0).  [covers 279,0/363,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0).  [covers 279,0/363,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -40,582.
% Will extend: medv(A) :- zn(A, 0).  [covers 279,0/363,0 pos, 0,0/0,0 neg]
Comparing variance: 42.055107205714485 to score=0.0025 #egs=279.0
Comparing variance: 18.8993537414964 to score=0.0025 #egs=84.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 279,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-42,055107)
%         ILP node to extend: medv(A) :- zn(A, 0).  [covers 279,0/363,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -42,055107) into position #1 in the search queue (new size=4).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 84,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-18,899354)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -18,899354) into position #4 in the search queue (new size=5).

% Time for loop #7: 62 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      medv(A) :- zn(A, 0).  [covers 279,0/363,0 pos, 0,0/0,0 neg]
% This clause covers 279 positive examples, of which 279 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- zn(A, 0).  [covers 279,0/279,0 pos, 0,0/0,0 neg]'
%     Score = -13.320,920626 (regressionFit = 13.320,920625, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 279,0/279,0 pos, 0,0/0,0 neg]

% Have these 5 positive seeds: 0 42 48 89 148
% Gleaner: New best node found (score = -13.320,920626): medv(A) :- zn(A, 0).  [covers 279,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.286,223485 (regressionFit = 11.286,223483, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 3).  [covers 29,0/279,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11.286,223485): medv(A) :- zn(A, 0), crim(A, 3).  [covers 29,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.733,139161 (regressionFit = 11.733,139159, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 8).  [covers 28,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.630,538976 (regressionFit = 11.630,538974, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 7).  [covers 29,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.325,687837 (regressionFit = 11.325,687835, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 6).  [covers 18,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.733,172592 (regressionFit = 11.733,172590, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 3).  [covers 40,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.724,743076 (regressionFit = 11.724,743074, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 9).  [covers 24,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.538,774851 (regressionFit = 11.538,774849, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 6).  [covers 35,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.697,110528 (regressionFit = 11.697,110526, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 5).  [covers 13,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.396,565770 (regressionFit = 11.396,565768, penalties=2.0300000000000005E-6) for clause:  medv(A) :- zn(A, 0), chas(A, 0).  [covers 256,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.396,565770 (regressionFit = 11.396,565768, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), chas(A, 1).  [covers 23,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.244,910394 (regressionFit = 11.244,910392, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 3).  [covers 33,0/279,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11.244,910394): medv(A) :- zn(A, 0), nox(A, 3).  [covers 33,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.403,965634 (regressionFit = 11.403,965632, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 9).  [covers 41,0/279,0 pos, 0,0/0,0 neg]
%     Score = -10.513,272552 (regressionFit = 10.513,272550, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 4).  [covers 33,0/279,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10.513,272552): medv(A) :- zn(A, 0), nox(A, 4).  [covers 33,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.253,232442 (regressionFit = 11.253,232440, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1).  [covers 20,0/279,0 pos, 0,0/0,0 neg]
%     Score = -10.711,651489 (regressionFit = 10.711,651487, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 9).  [covers 41,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.561,818712 (regressionFit = 11.561,818710, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 10).  [covers 31,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.733,372082 (regressionFit = 11.733,372080, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 2).  [covers 30,0/279,0 pos, 0,0/0,0 neg]
%     Score = -10.834,255253 (regressionFit = 10.834,255250, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 6).  [covers 44,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.540,703528 (regressionFit = 11.540,703526, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 7).  [covers 39,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.552,614841 (regressionFit = 11.552,614839, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 3).  [covers 21,0/279,0 pos, 0,0/0,0 neg]
%     Score = -10.915,082095 (regressionFit = 10.915,082093, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 6).  [covers 25,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.012,487332 (regressionFit = 11.012,487330, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 10).  [covers 47,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.262,143343 (regressionFit = 11.262,143341, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 4).  [covers 30,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.468,604757 (regressionFit = 11.468,604755, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 3).  [covers 16,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.426,795368 (regressionFit = 11.426,795366, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 5).  [covers 71,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.715,431679 (regressionFit = 11.715,431677, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 4).  [covers 69,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.685,296664 (regressionFit = 11.685,296662, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 384).  [covers 11,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.724,743076 (regressionFit = 11.724,743074, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 403).  [covers 24,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.547,316271 (regressionFit = 11.547,316269, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 277).  [covers 11,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.728,587654 (regressionFit = 11.728,587652, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 224).  [covers 7,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.710,577249 (regressionFit = 11.710,577247, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 4).  [covers 32,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.724,743076 (regressionFit = 11.724,743074, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 9).  [covers 24,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.337,515239 (regressionFit = 11.337,515237, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 3).  [covers 36,0/279,0 pos, 0,0/0,0 neg]
%     Score = -9.287,394059 (regressionFit = 9.287,394057, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 10).  [covers 92,0/279,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.287,394059): medv(A) :- zn(A, 0), ptratio(A, 10).  [covers 92,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.550,233524 (regressionFit = 11.550,233522, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 3).  [covers 30,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.646,806306 (regressionFit = 11.646,806304, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 1).  [covers 65,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.727,025558 (regressionFit = 11.727,025556, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 9).  [covers 36,0/279,0 pos, 0,0/0,0 neg]
%     Score = -11.648,533335 (regressionFit = 11.648,533333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 6).  [covers 24,0/279,0 pos, 0,0/0,0 neg]
%     Score = -10.701,616095 (regressionFit = 10.701,616093, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 2).  [covers 24,0/279,0 pos, 0,0/0,0 neg]
%     Score = -9.285,736251 (regressionFit = 9.285,736249, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 6).  [covers 43,0/279,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.285,736251): medv(A) :- zn(A, 0), lstat(A, 6).  [covers 43,0/279,0 pos, 0,0/0,0 neg]
%     Score = -10.699,004282 (regressionFit = 10.699,004280, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 5).  [covers 36,0/279,0 pos, 0,0/0,0 neg]
%     Score = -10.220,167227 (regressionFit = 10.220,167225, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 1).  [covers 19,0/279,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), lstat(A, 6).  [covers 43,0/279,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), lstat(A, 6).  [covers 43,0/279,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -42,055.
% Will extend: medv(A) :- zn(A, 0), lstat(A, 6).  [covers 43,0/279,0 pos, 0,0/0,0 neg]
Comparing variance: 15.891876690102858 to score=0.0025 #egs=43.0
Comparing variance: 36.45078623240458 to score=0.0025 #egs=236.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 43,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-15,891877)
%         ILP node to extend: medv(A) :- zn(A, 0), lstat(A, 6).  [covers 43,0/279,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -15,891877) into the LAST position (#5) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 236,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-36,450786)
%         ILP node to extend: medv(A) :- zn(A, 0).  [covers 279,0/279,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -36,450786) into position #1 in the search queue (new size=6).

% Time for loop #8: 203 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      medv(A) :- zn(A, 0), lstat(A, 6).  [covers 43,0/279,0 pos, 0,0/0,0 neg]
% This clause covers 43 positive examples, of which 43 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (medv(A) :- lstat(A, 6))
Created a leaf under (medv(A) :- tax(A, 264))
Created a leaf under (medv(A) :- lstat(A, 3))
Created a leaf under (medv(A) :- zn(A, 0))
Created a leaf under (medv(A) :- indus(A, 10))
Created a leaf under (medv(A) :- lstat(A, 6))

%%%%%  WILL-Produced Tree #6 @ 14:10:07 10/20/22.  %%%%%


% FOR medv(A):
%   if ( rm(A, 3) )
%   then if ( lstat(A, 3) )
%   | then return 43.94230769230769;  // std dev = 5,156, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( tax(A, 264) )
%   | | then if ( dis(A, 8) )
%   | | | then return 34.96666666666667;  // std dev = 8,958, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 43.260000000000005;  // std dev = 14,661, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 30.771428571428572;  // std dev = 5,971, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( lstat(A, 3) )
%   | then if ( indus(A, 10) )
%   | | then return 49;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 30.404545454545453;  // std dev = 4,185, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( zn(A, 0) )
%   | | then if ( lstat(A, 6) )
%   | | | then return 11.130232558139532;  // std dev = 3,986, 43,000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | | else return 19.333474576271186;  // std dev = 6,037, 236,000 (wgt'ed) examples reached here.  /* #pos=236 */
%   | | else return 22.74285714285715;  // std dev = 4,347, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */


% Clauses:

medv(A, 43.94230769230769) :- 
     rm(A, 3), 
     lstat(A, 3), 
     !. // Clause #1.

medv(A, 34.96666666666667) :- 
     rm(A, 3), 
     tax(A, 264), 
     dis(A, 8), 
     !. // Clause #2.

medv(A, 43.260000000000005) :- 
     rm(A, 3), 
     tax(A, 264), 
     !. // Clause #3.

medv(A, 30.771428571428572) :- 
     rm(A, 3), 
     !. // Clause #4.

medv(A, 49) :- 
     lstat(A, 3), 
     indus(A, 10), 
     !. // Clause #5.

medv(A, 30.404545454545453) :- 
     lstat(A, 3), 
     !. // Clause #6.

medv(A, 11.130232558139532) :- 
     zn(A, 0), 
     lstat(A, 6), 
     !. // Clause #7.

medv(A, 19.333474576271186) :- 
     zn(A, 0), 
     !. // Clause #8.

medv(A, 22.74285714285715) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_medv(a, 43.94230769230769) :-  /* #pos=26 */ 
   rm(a, 3),
   lstat(a, 3),
   !. // Flattened version of clause #1.

flattened_medv(a, 34.96666666666667) :-  /* #pos=3 */ 
   rm(a, 3),
   tax(a, 264),
   dis(a, 8),
   !. // Flattened version of clause #2.

flattened_medv(a, 43.260000000000005) :-  /* #pos=5 */ 
   rm(a, 3),
   tax(a, 264),
   !. // Flattened version of clause #3.

flattened_medv(a, 30.771428571428572) :-  /* #pos=14 */ 
   rm(a, 3),
   !. // Flattened version of clause #4.

flattened_medv(a, 49) :-  /* #pos=3 */ 
   lstat(a, 3),
   indus(a, 10),
   !. // Flattened version of clause #5.

flattened_medv(a, 30.404545454545453) :-  /* #pos=22 */ 
   lstat(a, 3),
   !. // Flattened version of clause #6.

flattened_medv(a, 11.130232558139532) :-  /* #pos=43 */ 
   zn(a, 0),
   lstat(a, 6),
   !. // Flattened version of clause #7.

flattened_medv(a, 19.333474576271186) :-  /* #pos=236 */ 
   zn(a, 0),
   !. // Flattened version of clause #8.

flattened_medv(underscore, 22.74285714285715) :-  /* #pos=84 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   rm(a, 3)
%   tax(a, 264)
%   dis(a, 8)
%   lstat(a, 6)
%   indus(a, 10)
%   lstat(a, 3)
%   zn(a, 0)

% Saving model in: data/boston_housing/train/models/bRDNs/medv.model.ckpt
% Time taken to learn 6 trees is 7,478 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:42.05510720571448
Set score:0.0025
% Kept 436 of the 436 positive examples.
% Kept 0 of the 0 negative examples.
% Dataset size: 436
Computing probabilities
prob time:292 milliseconds
No hidden examples for : medv
Time to build dataset: 297 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:90.91398930014299
Set score:0.0025

% Have these 8 positive seeds: 7 33 87 132 204 216 238 250

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -39.638,468162 (regressionFit = 39.638,468161, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -39.638,468162): medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.808,651307 (regressionFit = 38.808,651306, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -38.808,651307): medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.272,609528 (regressionFit = 39.272,609527, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.633,240561 (regressionFit = 37.633,240560, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -37.633,240561): medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.500,127853 (regressionFit = 39.500,127852, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.882,625340 (regressionFit = 38.882,625339, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -34.695,563004 (regressionFit = 34.695,563003, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -34.695,563004): medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.291,723126 (regressionFit = 39.291,723125, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 80).  [covers 14,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.847,221324 (regressionFit = 38.847,221323, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.062,758165 (regressionFit = 39.062,758164, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 21,0/436,0 pos, 0,0/0,0 neg]
%     Score = -35.626,344947 (regressionFit = 35.626,344946, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.605,364995 (regressionFit = 38.605,364994, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.638,499063 (regressionFit = 39.638,499062, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 7).  [covers 17,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.505,053776 (regressionFit = 39.505,053775, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.297,050048 (regressionFit = 36.297,050047, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.577,904001 (regressionFit = 38.577,904000, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 401,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.577,904001 (regressionFit = 38.577,904000, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 35,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.632,627139 (regressionFit = 39.632,627138, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.985,899932 (regressionFit = 38.985,899931, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.164,984537 (regressionFit = 38.164,984536, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.241,492656 (regressionFit = 38.241,492655, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.428,299302 (regressionFit = 39.428,299301, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.737,679697 (regressionFit = 38.737,679696, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.931,488693 (regressionFit = 38.931,488692, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.918,693679 (regressionFit = 38.918,693678, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.236,069996 (regressionFit = 39.236,069995, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.701,638091 (regressionFit = 37.701,638090, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.546,760680 (regressionFit = 39.546,760679, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.815,121425 (regressionFit = 37.815,121424, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.264,324993 (regressionFit = 39.264,324992, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.201,871597 (regressionFit = 37.201,871596, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.413,493707 (regressionFit = 39.413,493706, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.637,162592 (regressionFit = 39.637,162591, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.514,302075 (regressionFit = 38.514,302074, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.492,330687 (regressionFit = 39.492,330686, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 37,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.506,152858 (regressionFit = 38.506,152857, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.604,062463 (regressionFit = 39.604,062462, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.266,455873 (regressionFit = 37.266,455872, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.756,088525 (regressionFit = 38.756,088524, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.463,716798 (regressionFit = 39.463,716797, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.398,550879 (regressionFit = 39.398,550878, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.608,466081 (regressionFit = 39.608,466080, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.980,541901 (regressionFit = 38.980,541899, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.686,454048 (regressionFit = 38.686,454047, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.459,259956 (regressionFit = 39.459,259954, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 101,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.771,365965 (regressionFit = 38.771,365964, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 37,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.322,758601 (regressionFit = 38.322,758600, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 24,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.533,010437 (regressionFit = 39.533,010435, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 15,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.591,417212 (regressionFit = 39.591,417211, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 384).  [covers 11,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.152,503139 (regressionFit = 39.152,503138, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 437).  [covers 14,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.252,905492 (regressionFit = 38.252,905491, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 193).  [covers 8,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.559,309787 (regressionFit = 39.559,309786, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 241).  [covers 1,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.631,702433 (regressionFit = 39.631,702432, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 289).  [covers 5,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.497,238969 (regressionFit = 39.497,238968, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 14,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.618,171194 (regressionFit = 39.618,171193, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 430).  [covers 3,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.814,127996 (regressionFit = 38.814,127995, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.136,375477 (regressionFit = 39.136,375476, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 7).  [covers 16,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.966,688041 (regressionFit = 38.966,688040, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.628,749898 (regressionFit = 38.628,749897, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.780,620084 (regressionFit = 38.780,620083, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.612,829726 (regressionFit = 39.612,829724, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.618,245003 (regressionFit = 39.618,245002, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.157,831192 (regressionFit = 39.157,831191, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 102,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.176,403309 (regressionFit = 39.176,403308, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.276,288528 (regressionFit = 39.276,288527, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.737,874029 (regressionFit = 38.737,874028, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.001,294509 (regressionFit = 38.001,294508, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 38,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.918,740592 (regressionFit = 38.918,740591, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 38,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.918,361293 (regressionFit = 37.918,361292, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.589,839753 (regressionFit = 39.589,839752, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.281,193186 (regressionFit = 39.281,193185, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
Comparing variance: 83.37128266612999 to score=0.0025 #egs=307.0
Comparing variance: 70.54712577369129 to score=0.0025 #egs=129.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 307,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-83,371283)
%         ILP node to extend: medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -83,371283) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 129,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-70,547126)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -70,547126) into the LAST position (#2) in the search queue.

% Time for loop #1: 215 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
% This clause covers 307 positive examples, of which 307 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- zn(A, 0).  [covers 307,0/307,0 pos, 0,0/0,0 neg]'
%     Score = -34.695,563004 (regressionFit = 34.695,563003, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/307,0 pos, 0,0/0,0 neg]

% Have these 6 positive seeds: 0 12 17 142 156 298
% Gleaner: New best node found (score = -34.695,563004): medv(A) :- zn(A, 0).  [covers 307,0/307,0 pos, 0,0/0,0 neg]
%     Score = -24.791,726394 (regressionFit = 24.791,726392, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 2).  [covers 30,0/307,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -24.791,726394): medv(A) :- zn(A, 0), crim(A, 2).  [covers 30,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.413,159791 (regressionFit = 25.413,159789, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 3).  [covers 30,0/307,0 pos, 0,0/0,0 neg]
%     Score = -24.814,099548 (regressionFit = 24.814,099546, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 7).  [covers 39,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.593,429502 (regressionFit = 25.593,429499, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 4).  [covers 28,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.257,882846 (regressionFit = 25.257,882844, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 6).  [covers 19,0/307,0 pos, 0,0/0,0 neg]
%     Score = -22.762,580383 (regressionFit = 22.762,580381, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 1).  [covers 17,0/307,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -22.762,580383): medv(A) :- zn(A, 0), indus(A, 1).  [covers 17,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.590,311109 (regressionFit = 25.590,311107, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 6).  [covers 36,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.438,733549 (regressionFit = 25.438,733547, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 3).  [covers 40,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.593,933335 (regressionFit = 25.593,933333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 5).  [covers 13,0/307,0 pos, 0,0/0,0 neg]
%     Score = -24.621,235486 (regressionFit = 24.621,235484, penalties=2.0300000000000005E-6) for clause:  medv(A) :- zn(A, 0), chas(A, 0).  [covers 279,0/307,0 pos, 0,0/0,0 neg]
%     Score = -24.999,260403 (regressionFit = 24.999,260401, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 2).  [covers 26,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.365,199192 (regressionFit = 25.365,199190, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 1).  [covers 46,0/307,0 pos, 0,0/0,0 neg]
%     Score = -23.107,261339 (regressionFit = 23.107,261337, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 4).  [covers 42,0/307,0 pos, 0,0/0,0 neg]
%     Score = -17.397,743607 (regressionFit = 17.397,743605, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3).  [covers 21,0/307,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -17.397,743607): medv(A) :- zn(A, 0), rm(A, 3).  [covers 21,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.147,260963 (regressionFit = 25.147,260961, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1).  [covers 23,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.523,030512 (regressionFit = 25.523,030509, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 6).  [covers 35,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.524,960362 (regressionFit = 25.524,960360, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 5).  [covers 32,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.449,281551 (regressionFit = 25.449,281549, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 2).  [covers 31,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.070,466410 (regressionFit = 25.070,466408, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 1).  [covers 30,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.571,211044 (regressionFit = 25.571,211042, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 2).  [covers 36,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.165,743204 (regressionFit = 25.165,743201, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 4).  [covers 28,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.546,152437 (regressionFit = 25.546,152435, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 3).  [covers 22,0/307,0 pos, 0,0/0,0 neg]
%     Score = -24.081,231333 (regressionFit = 24.081,231330, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 4).  [covers 41,0/307,0 pos, 0,0/0,0 neg]
%     Score = -24.228,493985 (regressionFit = 24.228,493983, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 6).  [covers 29,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.587,512331 (regressionFit = 25.587,512329, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 1).  [covers 37,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.240,291467 (regressionFit = 25.240,291465, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 2).  [covers 17,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.579,571609 (regressionFit = 25.579,571607, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 6).  [covers 9,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.412,248340 (regressionFit = 25.412,248338, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 4).  [covers 70,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.307,319453 (regressionFit = 25.307,319451, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 5).  [covers 76,0/307,0 pos, 0,0/0,0 neg]
%     Score = -24.521,047099 (regressionFit = 24.521,047097, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 3).  [covers 26,0/307,0 pos, 0,0/0,0 neg]
%     Score = -24.981,703153 (regressionFit = 24.981,703151, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 276).  [covers 9,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.579,571609 (regressionFit = 25.579,571607, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 432).  [covers 9,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.589,790940 (regressionFit = 25.589,790938, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 304).  [covers 12,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.574,039216 (regressionFit = 25.574,039214, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 287).  [covers 8,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.562,712543 (regressionFit = 25.562,712541, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 247).  [covers 4,0/307,0 pos, 0,0/0,0 neg]
%     Score = -24.396,140445 (regressionFit = 24.396,140443, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 2).  [covers 36,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.497,647571 (regressionFit = 25.497,647569, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 3).  [covers 38,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.589,499788 (regressionFit = 25.589,499786, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 5).  [covers 23,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.092,214227 (regressionFit = 25.092,214225, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 1).  [covers 69,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.540,864755 (regressionFit = 25.540,864753, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 4).  [covers 16,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.222,025002 (regressionFit = 25.222,025000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 2).  [covers 25,0/307,0 pos, 0,0/0,0 neg]
%     Score = -24.364,545807 (regressionFit = 24.364,545805, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 1).  [covers 23,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.573,365473 (regressionFit = 25.573,365471, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 8).  [covers 38,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.591,669643 (regressionFit = 25.591,669641, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 4).  [covers 33,0/307,0 pos, 0,0/0,0 neg]
%     Score = -25.045,748875 (regressionFit = 25.045,748873, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 9).  [covers 20,0/307,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), rm(A, 3).  [covers 21,0/307,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), rm(A, 3).  [covers 21,0/307,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -83,371.
% Will extend: medv(A) :- zn(A, 0), rm(A, 3).  [covers 21,0/307,0 pos, 0,0/0,0 neg]
Comparing variance: 95.24916099773223 to score=0.0025 #egs=21.0
Comparing variance: 53.83745183138504 to score=0.0025 #egs=286.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 21,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-95,249161)
%         ILP node to extend: medv(A) :- zn(A, 0), rm(A, 3).  [covers 21,0/307,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -95,249161) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 286,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-53,837452)
%         ILP node to extend: medv(A) :- zn(A, 0).  [covers 307,0/307,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -53,837452) into the LAST position (#3) in the search queue.

% Time for loop #2: 221 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      medv(A) :- zn(A, 0), rm(A, 3).  [covers 21,0/307,0 pos, 0,0/0,0 neg]
% This clause covers 21 positive examples, of which 21 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- zn(A, 0), rm(A, 3).  [covers 21,0/21,0 pos, 0,0/0,0 neg]'
%     Score = -17.397,743607 (regressionFit = 17.397,743605, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3).  [covers 21,0/21,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 1 2 3 4 6 8 9 11
% Gleaner: New best node found (score = -17.397,743607): medv(A) :- zn(A, 0), rm(A, 3).  [covers 21,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.819,511670 (regressionFit = 1.819,511667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), crim(A, 5).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.819,511670): medv(A) :- zn(A, 0), rm(A, 3), crim(A, 5).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.999,031670 (regressionFit = 1.999,031667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), crim(A, 8).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), crim(A, 6).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.999,564234 (regressionFit = 1.999,564231, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), crim(A, 7).  [covers 8,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.510,809415 (regressionFit = 1.510,809412, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), indus(A, 9).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.510,809415): medv(A) :- zn(A, 0), rm(A, 3), indus(A, 9).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.992,964378 (regressionFit = 1.992,964375, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), indus(A, 1).  [covers 5,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.999,560367 (regressionFit = 1.999,560364, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), indus(A, 2).  [covers 10,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.999,031670 (regressionFit = 1.999,031667, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), chas(A, 0).  [covers 18,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.999,031670 (regressionFit = 1.999,031667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), chas(A, 1).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.510,809415 (regressionFit = 1.510,809412, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), nox(A, 7).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.972,025772 (regressionFit = 1.972,025769, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), nox(A, 4).  [covers 8,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), age(A, 9).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.989,946670 (regressionFit = 1.989,946667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), age(A, 5).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), age(A, 7).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.998,276114 (regressionFit = 1.998,276111, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), age(A, 1).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.961,557378 (regressionFit = 1.961,557375, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), age(A, 2).  [covers 5,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), age(A, 10).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.510,809415 (regressionFit = 1.510,809412, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), dis(A, 8).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.816,227650 (regressionFit = 1.816,227647, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), dis(A, 6).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.990,351392 (regressionFit = 1.990,351389, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), dis(A, 4).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.510,809415 (regressionFit = 1.510,809412, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), rad(A, 5).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), rad(A, 3).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.997,889170 (regressionFit = 1.997,889167, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), rad(A, 8).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.510,809415 (regressionFit = 1.510,809412, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), tax(A, 403).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), tax(A, 193).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.997,889170 (regressionFit = 1.997,889167, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), tax(A, 307).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.510,809415 (regressionFit = 1.510,809412, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), ptratio(A, 9).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -2.000,230670 (regressionFit = 2.000,230667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), ptratio(A, 2).  [covers 6,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.997,889170 (regressionFit = 1.997,889167, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), ptratio(A, 6).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.924,512336 (regressionFit = 1.924,512333, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), b(A, 8).  [covers 6,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.950,071670 (regressionFit = 1.950,071667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), b(A, 6).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.973,071670 (regressionFit = 1.973,071667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), b(A, 2).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -1.940,482797 (regressionFit = 1.940,482794, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), b(A, 5).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -774,432146 (regressionFit = 774,432143, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), lstat(A, 3).  [covers 14,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -774,432146): medv(A) :- zn(A, 0), rm(A, 3), lstat(A, 3).  [covers 14,0/21,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), rm(A, 3), lstat(A, 3).  [covers 14,0/21,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), rm(A, 3), lstat(A, 3).  [covers 14,0/21,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -95,249.
% Will extend: medv(A) :- zn(A, 0), rm(A, 3), lstat(A, 3).  [covers 14,0/21,0 pos, 0,0/0,0 neg]
Comparing variance: 26.703928571428282 to score=0.0025 #egs=14.0
Comparing variance: 57.22530612244918 to score=0.0025 #egs=7.0
%   Creating a TRUE-branch leaf because length = 4 > 3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 7,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-57,225306)
%         ILP node to extend: medv(A) :- zn(A, 0), rm(A, 3).  [covers 21,0/21,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -57,225306) into position #2 in the search queue (new size=3).

% Time for loop #3: 39 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      medv(A) :- zn(A, 0), rm(A, 3), lstat(A, 3).  [covers 14,0/21,0 pos, 0,0/0,0 neg]
% This clause covers 14 positive examples, of which 14 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 6 positive seeds: 0 11 20 44 70 92

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 129,0/129,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 129,0/129,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -8.659,390107 (regressionFit = 8.659,390106, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 13,0/129,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.659,390107): medv(A) :- crim(A, 4).  [covers 13,0/129,0 pos, 0,0/0,0 neg]
%     Score = -8.785,074300 (regressionFit = 8.785,074299, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 39,0/129,0 pos, 0,0/0,0 neg]
%     Score = -8.501,288668 (regressionFit = 8.501,288667, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 8,0/129,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.501,288668): medv(A) :- crim(A, 7).  [covers 8,0/129,0 pos, 0,0/0,0 neg]
%     Score = -8.367,216799 (regressionFit = 8.367,216798, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 12.5).  [covers 10,0/129,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.367,216799): medv(A) :- zn(A, 12.5).  [covers 10,0/129,0 pos, 0,0/0,0 neg]
%     Score = -9.072,025421 (regressionFit = 9.072,025420, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 60).  [covers 4,0/129,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 82.5).  [covers 2,0/129,0 pos, 0,0/0,0 neg]
%     Score = -7.831,983334 (regressionFit = 7.831,983333, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 20).  [covers 21,0/129,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7.831,983334): medv(A) :- zn(A, 20).  [covers 21,0/129,0 pos, 0,0/0,0 neg]
%     Score = -9.099,185591 (regressionFit = 9.099,185590, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 80).  [covers 14,0/129,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 85).  [covers 2,0/129,0 pos, 0,0/0,0 neg]
%     Score = -8.601,413209 (regressionFit = 8.601,413208, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 7,0/129,0 pos, 0,0/0,0 neg]
%     Score = -7.811,380046 (regressionFit = 7.811,380045, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 36,0/129,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7.811,380046): medv(A) :- indus(A, 4).  [covers 36,0/129,0 pos, 0,0/0,0 neg]
%     Score = -8.850,167743 (regressionFit = 8.850,167742, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 31,0/129,0 pos, 0,0/0,0 neg]
%     Score = -8.690,325247 (regressionFit = 8.690,325246, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 122,0/129,0 pos, 0,0/0,0 neg]
%     Score = -8.601,413209 (regressionFit = 8.601,413208, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 7,0/129,0 pos, 0,0/0,0 neg]
%     Score = -9.091,439442 (regressionFit = 9.091,439441, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 44,0/129,0 pos, 0,0/0,0 neg]
%     Score = -8.419,751799 (regressionFit = 8.419,751798, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 10,0/129,0 pos, 0,0/0,0 neg]
%     Score = -8.865,642104 (regressionFit = 8.865,642103, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 37,0/129,0 pos, 0,0/0,0 neg]
%     Score = -8.569,663654 (regressionFit = 8.569,663653, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 7,0/129,0 pos, 0,0/0,0 neg]
%     Score = -8.834,182310 (regressionFit = 8.834,182309, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 27,0/129,0 pos, 0,0/0,0 neg]
%     Score = -3.815,130513 (regressionFit = 3.815,130512, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 27,0/129,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.815,130513): medv(A) :- rm(A, 3).  [covers 27,0/129,0 pos, 0,0/0,0 neg]
%     Score = -8.843,471668 (regressionFit = 8.843,471667, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 9,0/129,0 pos, 0,0/0,0 neg]
%     Score = -8.989,629928 (regressionFit = 8.989,629927, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 20,0/129,0 pos, 0,0/0,0 neg]
%     Score = -9.068,675501 (regressionFit = 9.068,675500, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 4,0/129,0 pos, 0,0/0,0 neg]
%     Score = -9.093,285351 (regressionFit = 9.093,285350, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 33,0/129,0 pos, 0,0/0,0 neg]
%     Score = -9.072,890943 (regressionFit = 9.072,890942, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 35,0/129,0 pos, 0,0/0,0 neg]
%     Score = -8.863,420607 (regressionFit = 8.863,420606, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 33,0/129,0 pos, 0,0/0,0 neg]
%     Score = -9.020,755326 (regressionFit = 9.020,755325, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 6,0/129,0 pos, 0,0/0,0 neg]
%     Score = -8.498,482244 (regressionFit = 8.498,482243, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 44,0/129,0 pos, 0,0/0,0 neg]
%     Score = -8.428,017394 (regressionFit = 8.428,017392, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 36,0/129,0 pos, 0,0/0,0 neg]
%     Score = -9.042,296051 (regressionFit = 9.042,296050, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 14,0/129,0 pos, 0,0/0,0 neg]
%     Score = -9.036,344920 (regressionFit = 9.036,344919, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 6,0/129,0 pos, 0,0/0,0 neg]
%     Score = -9.070,067098 (regressionFit = 9.070,067097, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 31,0/129,0 pos, 0,0/0,0 neg]
%     Score = -8.601,413209 (regressionFit = 8.601,413208, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 311).  [covers 7,0/129,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 265).  [covers 2,0/129,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 348).  [covers 2,0/129,0 pos, 0,0/0,0 neg]
%     Score = -7.863,394467 (regressionFit = 7.863,394466, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 264).  [covers 12,0/129,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 241).  [covers 1,0/129,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 351).  [covers 1,0/129,0 pos, 0,0/0,0 neg]
%     Score = -9.100,515621 (regressionFit = 9.100,515620, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 35,0/129,0 pos, 0,0/0,0 neg]
%     Score = -6.248,075345 (regressionFit = 6.248,075344, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 21,0/129,0 pos, 0,0/0,0 neg]
%     Score = -9.097,113314 (regressionFit = 9.097,113313, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 11,0/129,0 pos, 0,0/0,0 neg]
%     Score = -8.751,647732 (regressionFit = 8.751,647731, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 17,0/129,0 pos, 0,0/0,0 neg]
%     Score = -9.086,472983 (regressionFit = 9.086,472982, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 15,0/129,0 pos, 0,0/0,0 neg]
%     Score = -9.091,175023 (regressionFit = 9.091,175022, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 16,0/129,0 pos, 0,0/0,0 neg]
%     Score = -9.021,055239 (regressionFit = 9.021,055238, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 3,0/129,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 2,0/129,0 pos, 0,0/0,0 neg]
%     Score = -9.065,803044 (regressionFit = 9.065,803043, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 26,0/129,0 pos, 0,0/0,0 neg]
%     Score = -6.526,341385 (regressionFit = 6.526,341384, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 30,0/129,0 pos, 0,0/0,0 neg]
%     Score = -9.037,940164 (regressionFit = 9.037,940163, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 6,0/129,0 pos, 0,0/0,0 neg]
%     Score = -8.311,178807 (regressionFit = 8.311,178806, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 9,0/129,0 pos, 0,0/0,0 neg]
%     Score = -9.098,197925 (regressionFit = 9.098,197924, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 26,0/129,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3).  [covers 27,0/129,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3).  [covers 27,0/129,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -70,547.
% Will extend: medv(A) :- rm(A, 3).  [covers 27,0/129,0 pos, 0,0/0,0 neg]
Comparing variance: 44.102578875170835 to score=0.0025 #egs=27.0
Comparing variance: 25.729028258362188 to score=0.0025 #egs=102.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 27,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-44,102579)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 27,0/129,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -44,102579) into the LAST position (#3) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 102,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-25,729028)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -25,729028) into the LAST position (#4) in the search queue.

% Time for loop #4: 51 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      medv(A) :- rm(A, 3).  [covers 27,0/129,0 pos, 0,0/0,0 neg]
% This clause covers 27 positive examples, of which 27 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- zn(A, 0), rm(A, 3).  [covers 21,0/7,0 pos, 0,0/0,0 neg]'
%     Score = -17.397,743607 (regressionFit = 17.397,743605, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3).  [covers 7,0/7,0 pos, 0,0/0,0 neg]

***** Warning: % Have only 7 positive examples, so cannot choose 8 of them. *****


% Have these 7 positive seeds: 0 1 2 3 4 5 6
% Gleaner: New best node found (score = -17.397,743607): medv(A) :- zn(A, 0), rm(A, 3).  [covers 7,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), crim(A, 2).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -371,407503 (regressionFit = 371,407500, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), crim(A, 7).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -371,407503): medv(A) :- zn(A, 0), rm(A, 3), crim(A, 7).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), crim(A, 8).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), crim(A, 10).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), indus(A, 1).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -371,407503 (regressionFit = 371,407500, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), indus(A, 2).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), indus(A, 10).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), chas(A, 0).  [covers 6,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), chas(A, 1).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), nox(A, 2).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -262,746670 (regressionFit = 262,746667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), nox(A, 4).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -262,746670): medv(A) :- zn(A, 0), rm(A, 3), nox(A, 4).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), nox(A, 3).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), nox(A, 9).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), nox(A, 10).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), age(A, 1).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -382,470003 (regressionFit = 382,470000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), age(A, 2).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), age(A, 4).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), age(A, 5).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -355,696670 (regressionFit = 355,696667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), dis(A, 4).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), dis(A, 6).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), dis(A, 1).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), dis(A, 9).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), dis(A, 10).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), rad(A, 2).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), rad(A, 3).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -371,407503 (regressionFit = 371,407500, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), rad(A, 8).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), rad(A, 24).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), tax(A, 276).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), tax(A, 193).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -371,407503 (regressionFit = 371,407500, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), tax(A, 307).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), tax(A, 666).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), ptratio(A, 2).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -371,407503 (regressionFit = 371,407500, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), ptratio(A, 6).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), ptratio(A, 10).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), b(A, 1).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), b(A, 4).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), b(A, 8).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), b(A, 6).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), b(A, 9).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -399,547503 (regressionFit = 399,547500, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), lstat(A, 1).  [covers 4,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), lstat(A, 9).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 3), lstat(A, 10).  [covers 1,0/7,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), rm(A, 3), nox(A, 4).  [covers 3,0/7,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), rm(A, 3), nox(A, 4).  [covers 3,0/7,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -57,225.
% Will extend: medv(A) :- zn(A, 0), rm(A, 3), nox(A, 4).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
Comparing variance: 14.762222222221984 to score=0.0025 #egs=3.0
Comparing variance: 54.61500000000012 to score=0.0025 #egs=4.0
%   Creating a TRUE-branch leaf because length = 4 > 3
%   Creating a FALSE-branch leaf because wgtedCountFalseBranchPos = 4,0 < 2.1 * minPosCov = 6,3

% Time for loop #5: 14 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #5, the best clause found is:
%      medv(A) :- zn(A, 0), rm(A, 3), nox(A, 4).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- zn(A, 0).  [covers 307,0/286,0 pos, 0,0/0,0 neg]'
%     Score = -34.695,563004 (regressionFit = 34.695,563003, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 286,0/286,0 pos, 0,0/0,0 neg]

% Have these 5 positive seeds: 10 117 162 174 254
% Gleaner: New best node found (score = -34.695,563004): medv(A) :- zn(A, 0).  [covers 286,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.065,339076 (regressionFit = 15.065,339074, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 3).  [covers 29,0/286,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -15.065,339076): medv(A) :- zn(A, 0), crim(A, 3).  [covers 29,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.385,467451 (regressionFit = 15.385,467449, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 5).  [covers 39,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.304,763659 (regressionFit = 12.304,763657, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 10).  [covers 44,0/286,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -12.304,763659): medv(A) :- zn(A, 0), crim(A, 10).  [covers 44,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.388,386002 (regressionFit = 15.388,386000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 3).  [covers 40,0/286,0 pos, 0,0/0,0 neg]
%     Score = -13.431,776820 (regressionFit = 13.431,776818, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 10).  [covers 88,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.616,913602 (regressionFit = 14.616,913600, penalties=2.0300000000000005E-6) for clause:  medv(A) :- zn(A, 0), chas(A, 0).  [covers 261,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.038,126326 (regressionFit = 15.038,126324, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 3).  [covers 33,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.373,591047 (regressionFit = 15.373,591045, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 1).  [covers 46,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.896,947502 (regressionFit = 14.896,947500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 8).  [covers 26,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.929,592074 (regressionFit = 14.929,592072, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 9).  [covers 41,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.397,409120 (regressionFit = 15.397,409118, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 6).  [covers 35,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.397,511225 (regressionFit = 15.397,511223, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 5).  [covers 32,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.498,564419 (regressionFit = 14.498,564416, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 9).  [covers 42,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.386,454443 (regressionFit = 15.386,454441, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 8).  [covers 35,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.972,051765 (regressionFit = 14.972,051763, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 1).  [covers 27,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.397,409122 (regressionFit = 15.397,409120, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 9).  [covers 34,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.359,949278 (regressionFit = 15.359,949276, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 5).  [covers 37,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.594,408965 (regressionFit = 14.594,408963, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 6).  [covers 45,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.726,266571 (regressionFit = 14.726,266569, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 6).  [covers 25,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.378,757564 (regressionFit = 15.378,757562, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 1).  [covers 36,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.954,508961 (regressionFit = 14.954,508959, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 4).  [covers 32,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.152,715370 (regressionFit = 15.152,715368, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 10).  [covers 50,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.022,031770 (regressionFit = 14.022,031768, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 9).  [covers 39,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.160,554446 (regressionFit = 15.160,554444, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 5).  [covers 72,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.397,476341 (regressionFit = 15.397,476339, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 4).  [covers 70,0/286,0 pos, 0,0/0,0 neg]
%     Score = -13.431,776820 (regressionFit = 13.431,776818, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 24).  [covers 88,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.370,372729 (regressionFit = 15.370,372727, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 384).  [covers 11,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.396,557442 (regressionFit = 15.396,557440, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 307).  [covers 30,0/286,0 pos, 0,0/0,0 neg]
%     Score = -13.431,776820 (regressionFit = 13.431,776818, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 666).  [covers 88,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.336,339254 (regressionFit = 15.336,339252, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 4).  [covers 32,0/286,0 pos, 0,0/0,0 neg]
%     Score = -13.533,313571 (regressionFit = 13.533,313568, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 10).  [covers 95,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.233,087729 (regressionFit = 15.233,087727, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 2).  [covers 22,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.387,987936 (regressionFit = 15.387,987934, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 9).  [covers 37,0/286,0 pos, 0,0/0,0 neg]
%     Score = -13.906,160636 (regressionFit = 13.906,160634, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 7).  [covers 40,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.352,305984 (regressionFit = 15.352,305982, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 4).  [covers 33,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.056,395562 (regressionFit = 15.056,395560, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 7).  [covers 36,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.146,568362 (regressionFit = 14.146,568360, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 5).  [covers 36,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.590,286584 (regressionFit = 12.590,286582, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 6).  [covers 43,0/286,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), crim(A, 10).  [covers 44,0/286,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), crim(A, 10).  [covers 44,0/286,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -53,837.
% Will extend: medv(A) :- zn(A, 0), crim(A, 10).  [covers 44,0/286,0 pos, 0,0/0,0 neg]
Comparing variance: 27.107246900826507 to score=0.0025 #egs=44.0
Comparing variance: 45.917540468547045 to score=0.0025 #egs=242.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 44,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-27,107247)
%         ILP node to extend: medv(A) :- zn(A, 0), crim(A, 10).  [covers 44,0/286,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -27,107247) into position #2 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 242,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-45,917540)
%         ILP node to extend: medv(A) :- zn(A, 0).  [covers 286,0/286,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -45,917540) into position #1 in the search queue (new size=4).

% Time for loop #6: 86 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      medv(A) :- zn(A, 0), crim(A, 10).  [covers 44,0/286,0 pos, 0,0/0,0 neg]
% This clause covers 44 positive examples, of which 44 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- zn(A, 0).  [covers 286,0/242,0 pos, 0,0/0,0 neg]'
%     Score = -34.695,563004 (regressionFit = 34.695,563003, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 242,0/242,0 pos, 0,0/0,0 neg]

% Have these 7 positive seeds: 10 37 54 58 61 88 89
% Gleaner: New best node found (score = -34.695,563004): medv(A) :- zn(A, 0).  [covers 242,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.004,574297 (regressionFit = 11.004,574295, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 3).  [covers 29,0/242,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11.004,574297): medv(A) :- zn(A, 0), crim(A, 3).  [covers 29,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.109,298993 (regressionFit = 11.109,298991, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 7).  [covers 31,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.083,643214 (regressionFit = 11.083,643212, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 8).  [covers 29,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.940,899502 (regressionFit = 10.940,899500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 5).  [covers 39,0/242,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10.940,899502): medv(A) :- zn(A, 0), crim(A, 5).  [covers 39,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.110,419037 (regressionFit = 11.110,419035, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 4).  [covers 28,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.948,891992 (regressionFit = 10.948,891990, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 3).  [covers 40,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.914,929397 (regressionFit = 10.914,929395, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 8).  [covers 21,0/242,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10.914,929397): medv(A) :- zn(A, 0), indus(A, 8).  [covers 21,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.043,133241 (regressionFit = 11.043,133239, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 9).  [covers 25,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.107,256021 (regressionFit = 11.107,256019, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 6).  [covers 36,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.680,158579 (regressionFit = 10.680,158577, penalties=2.0300000000000005E-6) for clause:  medv(A) :- zn(A, 0), chas(A, 0).  [covers 217,0/242,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10.680,158579): medv(A) :- zn(A, 0), chas(A, 0).  [covers 217,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.680,158579 (regressionFit = 10.680,158577, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), chas(A, 1).  [covers 25,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.001,401533 (regressionFit = 11.001,401531, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 3).  [covers 33,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.700,479349 (regressionFit = 10.700,479347, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 8).  [covers 20,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.646,607646 (regressionFit = 10.646,607644, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 9).  [covers 34,0/242,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10.646,607646): medv(A) :- zn(A, 0), nox(A, 9).  [covers 34,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.111,297295 (regressionFit = 11.111,297293, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 7).  [covers 20,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.870,376089 (regressionFit = 10.870,376087, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 1).  [covers 46,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.480,290409 (regressionFit = 10.480,290407, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 4).  [covers 34,0/242,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10.480,290409): medv(A) :- zn(A, 0), nox(A, 4).  [covers 34,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.084,643096 (regressionFit = 11.084,643094, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 6).  [covers 33,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.082,847723 (regressionFit = 11.082,847721, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 2).  [covers 27,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.611,759261 (regressionFit = 10.611,759259, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 7).  [covers 32,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.071,068763 (regressionFit = 10.071,068761, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4).  [covers 16,0/242,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10.071,068763): medv(A) :- zn(A, 0), rm(A, 4).  [covers 16,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.100,650188 (regressionFit = 11.100,650186, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 5).  [covers 30,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.870,201541 (regressionFit = 10.870,201538, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 1).  [covers 26,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.077,737475 (regressionFit = 11.077,737473, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 5).  [covers 32,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.066,935638 (regressionFit = 11.066,935636, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 4).  [covers 22,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.761,113259 (regressionFit = 10.761,113257, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 6).  [covers 25,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.529,218033 (regressionFit = 10.529,218031, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 9).  [covers 25,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.055,523150 (regressionFit = 11.055,523148, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 10).  [covers 25,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.089,668802 (regressionFit = 11.089,668800, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 1).  [covers 36,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.109,184388 (regressionFit = 11.109,184386, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 5).  [covers 72,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.913,006778 (regressionFit = 10.913,006776, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 4).  [covers 70,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.111,825283 (regressionFit = 11.111,825281, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 384).  [covers 11,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.917,761048 (regressionFit = 10.917,761046, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 437).  [covers 14,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.043,133241 (regressionFit = 11.043,133239, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 403).  [covers 25,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.059,939952 (regressionFit = 11.059,939950, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 307).  [covers 30,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.060,260262 (regressionFit = 11.060,260260, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 277).  [covers 11,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.842,187812 (regressionFit = 10.842,187810, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 4).  [covers 32,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.917,761048 (regressionFit = 10.917,761046, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 7).  [covers 14,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.043,133241 (regressionFit = 11.043,133239, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 9).  [covers 25,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.011,138245 (regressionFit = 11.011,138243, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 3).  [covers 38,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.075,766411 (regressionFit = 11.075,766409, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 2).  [covers 22,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.063,018716 (regressionFit = 11.063,018714, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 3).  [covers 30,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.404,905367 (regressionFit = 10.404,905365, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 7).  [covers 20,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.101,309999 (regressionFit = 11.101,309997, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 9).  [covers 32,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.105,222498 (regressionFit = 11.105,222496, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 4).  [covers 15,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.109,154507 (regressionFit = 11.109,154505, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 6).  [covers 23,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.090,711608 (regressionFit = 11.090,711606, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 5).  [covers 24,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.098,709640 (regressionFit = 11.098,709638, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 4).  [covers 31,0/242,0 pos, 0,0/0,0 neg]
%     Score = -11.059,019327 (regressionFit = 11.059,019325, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 10).  [covers 27,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.573,880002 (regressionFit = 10.573,880000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 7).  [covers 33,0/242,0 pos, 0,0/0,0 neg]
%     Score = -8.543,362081 (regressionFit = 8.543,362079, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3).  [covers 7,0/242,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.543,362081): medv(A) :- zn(A, 0), lstat(A, 3).  [covers 7,0/242,0 pos, 0,0/0,0 neg]
%     Score = -10.606,206206 (regressionFit = 10.606,206204, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 2).  [covers 24,0/242,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), lstat(A, 3).  [covers 7,0/242,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), lstat(A, 3).  [covers 7,0/242,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -45,918.
% Will extend: medv(A) :- zn(A, 0), lstat(A, 3).  [covers 7,0/242,0 pos, 0,0/0,0 neg]
Comparing variance: 101.88530612244904 to score=0.0025 #egs=7.0
Comparing variance: 33.31985079221368 to score=0.0025 #egs=235.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 7,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-101,885306)
%         ILP node to extend: medv(A) :- zn(A, 0), lstat(A, 3).  [covers 7,0/242,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -101,885306) into position #1 in the search queue (new size=4).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 235,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-33,319851)
%         ILP node to extend: medv(A) :- zn(A, 0).  [covers 242,0/242,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -33,319851) into position #3 in the search queue (new size=5).

% Time for loop #7: 84 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      medv(A) :- zn(A, 0), lstat(A, 3).  [covers 7,0/242,0 pos, 0,0/0,0 neg]
% This clause covers 7 positive examples, of which 7 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- zn(A, 0), lstat(A, 3).  [covers 7,0/7,0 pos, 0,0/0,0 neg]'
%     Score = -8.543,362081 (regressionFit = 8.543,362079, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3).  [covers 7,0/7,0 pos, 0,0/0,0 neg]

% Have these 7 positive seeds: 0 1 2 3 4 5 6
% Gleaner: New best node found (score = -8.543,362081): medv(A) :- zn(A, 0), lstat(A, 3).  [covers 7,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), crim(A, 5).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), crim(A, 7).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), crim(A, 8).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), crim(A, 9).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), crim(A, 1).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), indus(A, 9).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), indus(A, 2).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), indus(A, 6).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -173,090003 (regressionFit = 173,090000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), indus(A, 10).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -173,090003): medv(A) :- zn(A, 0), lstat(A, 3), indus(A, 10).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), indus(A, 1).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), chas(A, 0).  [covers 5,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), chas(A, 1).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), nox(A, 7).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), nox(A, 4).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), nox(A, 1).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -173,090003 (regressionFit = 173,090000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), nox(A, 8).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), nox(A, 2).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -697,854170 (regressionFit = 697,854167, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), rm(A, 4).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -577,154170 (regressionFit = 577,154167, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), rm(A, 1).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), rm(A, 9).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -437,787503 (regressionFit = 437,787500, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), age(A, 5).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), age(A, 10).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), age(A, 2).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), age(A, 6).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), age(A, 3).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), dis(A, 9).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), dis(A, 4).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -173,090003 (regressionFit = 173,090000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), dis(A, 10).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), dis(A, 3).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), rad(A, 5).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), rad(A, 8).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), rad(A, 4).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -173,090003 (regressionFit = 173,090000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), rad(A, 24).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), rad(A, 3).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), tax(A, 403).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), tax(A, 307).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), tax(A, 304).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -173,090003 (regressionFit = 173,090000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), tax(A, 666).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), tax(A, 222).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), ptratio(A, 9).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), ptratio(A, 6).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), ptratio(A, 3).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -173,090003 (regressionFit = 173,090000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), ptratio(A, 10).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), b(A, 9).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), b(A, 5).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), b(A, 1).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), b(A, 8).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), b(A, 2).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 3), b(A, 3).  [covers 1,0/7,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), lstat(A, 3), indus(A, 10).  [covers 3,0/7,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), lstat(A, 3), indus(A, 10).  [covers 3,0/7,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -101,885.
% Will extend: medv(A) :- zn(A, 0), lstat(A, 3), indus(A, 10).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #8: 10 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      medv(A) :- zn(A, 0), lstat(A, 3), indus(A, 10).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (medv(A) :- rm(A, 3))
Created a leaf under (medv(A) :- lstat(A, 3))
Created a leaf under (medv(A) :- crim(A, 10))
Created a leaf under (medv(A) :- rm(A, 3))

%%%%%  WILL-Produced Tree #7 @ 14:10:08 10/20/22.  %%%%%


% FOR medv(A):
%   if ( zn(A, 0) )
%   then if ( rm(A, 3) )
%   | then if ( lstat(A, 3) )
%   | | then return 44.45;  // std dev = 19,335, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( nox(A, 4) )
%   | | | then return 33.36666666666667;  // std dev = 6,655, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 24.4;  // std dev = 14,780, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( crim(A, 10) )
%   | | then return 10.865909090909089;  // std dev = 5,206, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else if ( lstat(A, 3) )
%   | | | then if ( indus(A, 10) )
%   | | | | then return 49;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 31.25;  // std dev = 13,156, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 19.417872340425536;  // std dev = 5,772, 235,000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( rm(A, 3) )
%   | then return 39.796296296296305;  // std dev = 6,641, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 24.061764705882354;  // std dev = 5,072, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */


% Clauses:

medv(A, 44.45) :- 
     zn(A, 0), 
     rm(A, 3), 
     lstat(A, 3), 
     !. // Clause #1.

medv(A, 33.36666666666667) :- 
     zn(A, 0), 
     rm(A, 3), 
     nox(A, 4), 
     !. // Clause #2.

medv(A, 24.4) :- 
     zn(A, 0), 
     rm(A, 3), 
     !. // Clause #3.

medv(A, 10.865909090909089) :- 
     zn(A, 0), 
     crim(A, 10), 
     !. // Clause #4.

medv(A, 49) :- 
     zn(A, 0), 
     lstat(A, 3), 
     indus(A, 10), 
     !. // Clause #5.

medv(A, 31.25) :- 
     zn(A, 0), 
     lstat(A, 3), 
     !. // Clause #6.

medv(A, 19.417872340425536) :- 
     zn(A, 0), 
     !. // Clause #7.

medv(A, 39.796296296296305) :- 
     rm(A, 3), 
     !. // Clause #8.

medv(A, 24.061764705882354) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_medv(a, 44.45) :-  /* #pos=14 */ 
   zn(a, 0),
   rm(a, 3),
   lstat(a, 3),
   !. // Flattened version of clause #1.

flattened_medv(a, 33.36666666666667) :-  /* #pos=3 */ 
   zn(a, 0),
   rm(a, 3),
   nox(a, 4),
   !. // Flattened version of clause #2.

flattened_medv(a, 24.4) :-  /* #pos=4 */ 
   zn(a, 0),
   rm(a, 3),
   !. // Flattened version of clause #3.

flattened_medv(a, 10.865909090909089) :-  /* #pos=44 */ 
   zn(a, 0),
   crim(a, 10),
   !. // Flattened version of clause #4.

flattened_medv(a, 49) :-  /* #pos=3 */ 
   zn(a, 0),
   lstat(a, 3),
   indus(a, 10),
   !. // Flattened version of clause #5.

flattened_medv(a, 31.25) :-  /* #pos=4 */ 
   zn(a, 0),
   lstat(a, 3),
   !. // Flattened version of clause #6.

flattened_medv(a, 19.417872340425536) :-  /* #pos=235 */ 
   zn(a, 0),
   !. // Flattened version of clause #7.

flattened_medv(a, 39.796296296296305) :-  /* #pos=27 */ 
   rm(a, 3),
   !. // Flattened version of clause #8.

flattened_medv(underscore, 24.061764705882354) :-  /* #pos=102 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   lstat(a, 3)
%   rm(a, 3)
%   nox(a, 4)
%   crim(a, 10)
%   zn(a, 0)
%   indus(a, 10)

% Saving model in: data/boston_housing/train/models/bRDNs/medv.model.ckpt
% Time taken to learn 7 trees is 8,506 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:101.88530612244926
Set score:0.0025
% Kept 436 of the 436 positive examples.
% Kept 0 of the 0 negative examples.
% Dataset size: 436
Computing probabilities
prob time:141 milliseconds
No hidden examples for : medv
Time to build dataset: 143 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:90.91398930014299
Set score:0.0025

% Have these 6 positive seeds: 15 62 78 104 268 298

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -39.638,468162 (regressionFit = 39.638,468161, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -39.638,468162): medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.590,451598 (regressionFit = 39.590,451597, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -39.590,451598): medv(A) :- crim(A, 8).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.633,240561 (regressionFit = 37.633,240560, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -37.633,240561): medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.630,944812 (regressionFit = 38.630,944811, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 9).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -34.695,563004 (regressionFit = 34.695,563003, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -34.695,563004): medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.611,954908 (regressionFit = 39.611,954907, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 60).  [covers 4,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.619,022403 (regressionFit = 39.619,022402, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 55).  [covers 3,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.505,053776 (regressionFit = 39.505,053775, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.631,729726 (regressionFit = 39.631,729725, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.297,050048 (regressionFit = 36.297,050047, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.338,864441 (regressionFit = 33.338,864440, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -33.338,864441): medv(A) :- indus(A, 10).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.577,904001 (regressionFit = 38.577,904000, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 401,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.577,904001 (regressionFit = 38.577,904000, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 35,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.737,679697 (regressionFit = 38.737,679696, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.626,311286 (regressionFit = 37.626,311285, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.461,939144 (regressionFit = 39.461,939143, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.241,492656 (regressionFit = 38.241,492655, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.164,984537 (regressionFit = 38.164,984536, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.985,899932 (regressionFit = 38.985,899931, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.918,693679 (regressionFit = 38.918,693678, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.237,214598 (regressionFit = 39.237,214597, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.337,639541 (regressionFit = 39.337,639540, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.701,638091 (regressionFit = 37.701,638090, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.382,788103 (regressionFit = 38.382,788102, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.591,251036 (regressionFit = 39.591,251035, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.264,324993 (regressionFit = 39.264,324992, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.506,152858 (regressionFit = 38.506,152857, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.514,302075 (regressionFit = 38.514,302074, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.637,162592 (regressionFit = 39.637,162591, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.629,781185 (regressionFit = 39.629,781184, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.266,455873 (regressionFit = 37.266,455872, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.398,550879 (regressionFit = 39.398,550878, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.799,267521 (regressionFit = 37.799,267520, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.569,949881 (regressionFit = 39.569,949880, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 18,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.686,454048 (regressionFit = 38.686,454047, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.533,010437 (regressionFit = 39.533,010435, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 15,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.338,864441 (regressionFit = 33.338,864440, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.527,726501 (regressionFit = 39.527,726500, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 432).  [covers 9,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.631,729726 (regressionFit = 39.631,729725, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 265).  [covers 2,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 370).  [covers 2,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.338,864441 (regressionFit = 33.338,864440, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.966,688041 (regressionFit = 38.966,688040, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.925,257034 (regressionFit = 36.925,257033, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.780,620084 (regressionFit = 38.780,620083, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.258,024659 (regressionFit = 33.258,024658, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 97,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -33.258,024659): medv(A) :- ptratio(A, 10).  [covers 97,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.618,245003 (regressionFit = 39.618,245002, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -35.873,729865 (regressionFit = 35.873,729864, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.276,288528 (regressionFit = 39.276,288527, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.164,167220 (regressionFit = 39.164,167219, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.737,874029 (regressionFit = 38.737,874028, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.001,294509 (regressionFit = 38.001,294508, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 38,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.918,740592 (regressionFit = 38.918,740591, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 38,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.281,193186 (regressionFit = 39.281,193185, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -24.407,574443 (regressionFit = 24.407,574442, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -24.407,574443): medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.453,241329 (regressionFit = 39.453,241328, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
Comparing variance: 70.95607843137188 to score=0.0025 #egs=51.0
Comparing variance: 53.99692062742384 to score=0.0025 #egs=385.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 51,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-70,956078)
%         ILP node to extend: medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -70,956078) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 385,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-53,996921)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -53,996921) into the LAST position (#2) in the search queue.

% Time for loop #1: 71 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
% This clause covers 51 positive examples, of which 51 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- lstat(A, 3).  [covers 51,0/51,0 pos, 0,0/0,0 neg]'
%     Score = -24.407,574443 (regressionFit = 24.407,574442, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 51,0/51,0 pos, 0,0/0,0 neg]

% Have these 7 positive seeds: 0 1 12 20 38 39 43
% Gleaner: New best node found (score = -24.407,574443): medv(A) :- lstat(A, 3).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.443,743194 (regressionFit = 3.443,743191, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 5).  [covers 4,0/51,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.443,743194): medv(A) :- lstat(A, 3), crim(A, 5).  [covers 4,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.438,595099 (regressionFit = 3.438,595097, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 1).  [covers 20,0/51,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.438,595099): medv(A) :- lstat(A, 3), crim(A, 1).  [covers 20,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.594,533653 (regressionFit = 3.594,533651, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 7).  [covers 9,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 9).  [covers 2,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.993,288716 (regressionFit = 2.993,288714, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0).  [covers 21,0/51,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.993,288716): medv(A) :- lstat(A, 3), zn(A, 0).  [covers 21,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.598,227077 (regressionFit = 3.598,227074, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 95).  [covers 4,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 55).  [covers 1,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.183,599176 (regressionFit = 3.183,599174, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 9).  [covers 5,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.587,213844 (regressionFit = 3.587,213842, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 1).  [covers 14,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.618,718275 (regressionFit = 3.618,718273, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 2).  [covers 11,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.419,136412 (regressionFit = 3.419,136410, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 4).  [covers 12,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.260,612502 (regressionFit = 3.260,612500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 10).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.300,945496 (regressionFit = 3.300,945494, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), chas(A, 0).  [covers 43,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.300,945496 (regressionFit = 3.300,945494, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), chas(A, 1).  [covers 8,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.176,276446 (regressionFit = 3.176,276444, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 7).  [covers 6,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.559,732224 (regressionFit = 3.559,732222, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 6).  [covers 15,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.576,370392 (regressionFit = 3.576,370390, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 4).  [covers 7,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.573,381197 (regressionFit = 3.573,381195, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 2).  [covers 10,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.260,612502 (regressionFit = 3.260,612500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 8).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.122,336391 (regressionFit = 3.122,336389, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 4).  [covers 15,0/51,0 pos, 0,0/0,0 neg]
%     Score = -1.989,521064 (regressionFit = 1.989,521062, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 3).  [covers 26,0/51,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.989,521064): medv(A) :- lstat(A, 3), rm(A, 3).  [covers 26,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.176,171073 (regressionFit = 3.176,171071, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 1).  [covers 7,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.183,599176 (regressionFit = 3.183,599174, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 5).  [covers 5,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 9).  [covers 2,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.247,586334 (regressionFit = 3.247,586332, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 10).  [covers 14,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.549,313194 (regressionFit = 3.549,313191, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 1).  [covers 4,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.561,100465 (regressionFit = 3.561,100463, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 8).  [covers 14,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 9).  [covers 1,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.131,069789 (regressionFit = 3.131,069787, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 8).  [covers 4,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.167,018607 (regressionFit = 3.167,018605, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 5).  [covers 8,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.616,267822 (regressionFit = 3.616,267820, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 4).  [covers 8,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.581,865643 (regressionFit = 3.581,865641, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 2).  [covers 12,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.589,605002 (regressionFit = 3.589,605000, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 3).  [covers 9,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.260,612502 (regressionFit = 3.260,612500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 10).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.582,842415 (regressionFit = 3.582,842413, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 5).  [covers 14,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.581,998606 (regressionFit = 3.581,998604, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 3).  [covers 7,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.516,918963 (regressionFit = 3.516,918961, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 8).  [covers 7,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.614,848524 (regressionFit = 3.614,848522, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 2).  [covers 5,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.260,612502 (regressionFit = 3.260,612500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 24).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.183,599176 (regressionFit = 3.183,599174, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 403).  [covers 5,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 402).  [covers 2,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.516,918963 (regressionFit = 3.516,918961, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 307).  [covers 7,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 242).  [covers 1,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 370).  [covers 1,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.260,612502 (regressionFit = 3.260,612500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 666).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.810,910194 (regressionFit = 2.810,910192, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 9).  [covers 12,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.616,241100 (regressionFit = 3.616,241098, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 6).  [covers 10,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.563,536194 (regressionFit = 3.563,536192, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 2).  [covers 8,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.260,612502 (regressionFit = 3.260,612500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 10).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 9).  [covers 1,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.399,636748 (regressionFit = 3.399,636746, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 8).  [covers 9,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.554,940258 (regressionFit = 3.554,940256, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 5).  [covers 12,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.597,765496 (regressionFit = 3.597,765494, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 2).  [covers 8,0/51,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3), rm(A, 3).  [covers 26,0/51,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3), rm(A, 3).  [covers 26,0/51,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -70,956.
% Will extend: medv(A) :- lstat(A, 3), rm(A, 3).  [covers 26,0/51,0 pos, 0,0/0,0 neg]
Comparing variance: 26.586286982248566 to score=0.0025 #egs=26.0
Comparing variance: 51.93110400000034 to score=0.0025 #egs=25.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 26,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-26,586287)
%         ILP node to extend: medv(A) :- lstat(A, 3), rm(A, 3).  [covers 26,0/51,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -26,586287) into the LAST position (#2) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 25,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-51,931104)
%         ILP node to extend: medv(A) :- lstat(A, 3).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -51,931104) into position #2 in the search queue (new size=3).

% Time for loop #2: 24 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      medv(A) :- lstat(A, 3), rm(A, 3).  [covers 26,0/51,0 pos, 0,0/0,0 neg]
% This clause covers 26 positive examples, of which 26 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 7 positive seeds: 29 86 110 158 179 217 352

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 385,0/385,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 385,0/385,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -19.592,151521 (regressionFit = 19.592,151520, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 46,0/385,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19.592,151521): medv(A) :- crim(A, 2).  [covers 46,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.443,603289 (regressionFit = 20.443,603288, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 38,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.644,358442 (regressionFit = 20.644,358441, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 45,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.551,807284 (regressionFit = 20.551,807283, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 29,0/385,0 pos, 0,0/0,0 neg]
%     Score = -17.606,823839 (regressionFit = 17.606,823838, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 286,0/385,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -17.606,823839): medv(A) :- zn(A, 0).  [covers 286,0/385,0 pos, 0,0/0,0 neg]
%     Score = -17.881,916261 (regressionFit = 17.881,916260, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 20).  [covers 17,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.776,020306 (regressionFit = 20.776,020305, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 35).  [covers 3,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.767,808694 (regressionFit = 20.767,808693, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 25).  [covers 10,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.594,569964 (regressionFit = 20.594,569963, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 21,0/385,0 pos, 0,0/0,0 neg]
%     Score = -18.901,473485 (regressionFit = 18.901,473484, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 34,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.786,117401 (regressionFit = 20.786,117400, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 35,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.361,811896 (regressionFit = 20.361,811895, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 40,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.706,211623 (regressionFit = 20.706,211622, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 7).  [covers 17,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.730,027608 (regressionFit = 20.730,027607, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 43,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.611,929573 (regressionFit = 20.611,929572, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 358,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.776,110435 (regressionFit = 20.776,110434, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 26,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.591,807788 (regressionFit = 19.591,807787, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 41,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.421,022024 (regressionFit = 20.421,022023, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 38,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.399,239054 (regressionFit = 20.399,239053, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 43,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.652,385030 (regressionFit = 20.652,385029, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 45,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.678,469765 (regressionFit = 19.678,469764, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 31,0/385,0 pos, 0,0/0,0 neg]
%     Score = -18.877,291832 (regressionFit = 18.877,291831, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 43,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.012,626313 (regressionFit = 20.012,626312, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 44,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.706,616494 (regressionFit = 20.706,616493, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 39,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.944,962523 (regressionFit = 19.944,962521, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 36,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.129,200550 (regressionFit = 20.129,200549, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 42,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.247,295687 (regressionFit = 20.247,295686, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 35,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.345,487095 (regressionFit = 20.345,487094, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 42,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.524,086481 (regressionFit = 20.524,086480, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 39,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.677,427242 (regressionFit = 20.677,427241, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 38,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.174,127872 (regressionFit = 20.174,127871, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 28,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.414,782778 (regressionFit = 20.414,782776, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 37,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.738,690466 (regressionFit = 20.738,690465, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 46,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.691,178985 (regressionFit = 20.691,178984, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 41,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.542,572360 (regressionFit = 20.542,572359, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 38,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.640,614291 (regressionFit = 20.640,614290, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 18,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.109,203945 (regressionFit = 20.109,203944, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 30,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.754,720611 (regressionFit = 20.754,720610, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 91,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.695,288733 (regressionFit = 20.695,288732, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 13,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.480,012736 (regressionFit = 20.480,012735, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 17,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.770,992620 (regressionFit = 20.770,992619, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 188).  [covers 7,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.542,976324 (regressionFit = 19.542,976323, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 193).  [covers 7,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.739,333691 (regressionFit = 20.739,333690, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 277).  [covers 11,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.694,694817 (regressionFit = 20.694,694816, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 223).  [covers 5,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.733,300080 (regressionFit = 20.733,300079, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 289).  [covers 5,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.769,872648 (regressionFit = 20.769,872647, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 13,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.772,977673 (regressionFit = 20.772,977672, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 284).  [covers 7,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.742,763821 (regressionFit = 20.742,763820, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 37,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.220,577935 (regressionFit = 20.220,577934, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 39,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.517,286805 (regressionFit = 20.517,286803, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 47,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.092,395397 (regressionFit = 20.092,395396, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 36,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.350,418438 (regressionFit = 20.350,418437, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 38,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.783,870820 (regressionFit = 20.783,870819, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 8).  [covers 8,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.497,824978 (regressionFit = 20.497,824977, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 34,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.671,634488 (regressionFit = 20.671,634487, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 44,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.724,309896 (regressionFit = 20.724,309895, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 40,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.368,584296 (regressionFit = 20.368,584295, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 42,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.671,877870 (regressionFit = 20.671,877869, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 92,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.698,952559 (regressionFit = 20.698,952558, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 24,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.073,102765 (regressionFit = 20.073,102764, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 38,0/385,0 pos, 0,0/0,0 neg]
%     Score = -17.431,119257 (regressionFit = 17.431,119256, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 49,0/385,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -17.431,119257): medv(A) :- lstat(A, 1).  [covers 49,0/385,0 pos, 0,0/0,0 neg]
%     Score = -16.959,205023 (regressionFit = 16.959,205022, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 44,0/385,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -16.959,205023): medv(A) :- lstat(A, 6).  [covers 44,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.770,604049 (regressionFit = 20.770,604048, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.943,651661 (regressionFit = 19.943,651660, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/385,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 6).  [covers 44,0/385,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 6).  [covers 44,0/385,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -53,997.
% Will extend: medv(A) :- lstat(A, 6).  [covers 44,0/385,0 pos, 0,0/0,0 neg]
Comparing variance: 15.954808884297604 to score=0.0025 #egs=44.0
Comparing variance: 47.675054050102396 to score=0.0025 #egs=341.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 44,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-15,954809)
%         ILP node to extend: medv(A) :- lstat(A, 6).  [covers 44,0/385,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -15,954809) into the LAST position (#3) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 341,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-47,675054)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -47,675054) into position #2 in the search queue (new size=4).

% Time for loop #3: 70 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      medv(A) :- lstat(A, 6).  [covers 44,0/385,0 pos, 0,0/0,0 neg]
% This clause covers 44 positive examples, of which 44 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- lstat(A, 3).  [covers 51,0/25,0 pos, 0,0/0,0 neg]'
%     Score = -24.407,574443 (regressionFit = 24.407,574442, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 25,0/25,0 pos, 0,0/0,0 neg]

% Have these 3 positive seeds: 2 6 11
% Gleaner: New best node found (score = -24.407,574443): medv(A) :- lstat(A, 3).  [covers 25,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.178,559938 (regressionFit = 1.178,559936, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 1).  [covers 12,0/25,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.178,559938): medv(A) :- lstat(A, 3), crim(A, 1).  [covers 12,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 4).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 60).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 22).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 20).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.212,832066 (regressionFit = 1.212,832063, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 4).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.237,042383 (regressionFit = 1.237,042381, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 5).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.013,077026 (regressionFit = 1.013,077024, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), chas(A, 0).  [covers 21,0/25,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.013,077026): medv(A) :- lstat(A, 3), chas(A, 0).  [covers 21,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.215,753458 (regressionFit = 1.215,753456, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 6).  [covers 8,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.214,738002 (regressionFit = 1.214,738000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 5).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.297,394002 (regressionFit = 1.297,394000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 2).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.272,708573 (regressionFit = 1.272,708571, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 1).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 2).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.265,797335 (regressionFit = 1.265,797333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 4).  [covers 15,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.134,394933 (regressionFit = 1.134,394931, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 10).  [covers 9,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.274,855002 (regressionFit = 1.274,855000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 8).  [covers 8,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.208,749526 (regressionFit = 1.208,749524, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 3).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.227,886581 (regressionFit = 1.227,886579, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 5).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.291,939288 (regressionFit = 1.291,939286, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 2).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 1).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 7).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.296,997546 (regressionFit = 1.296,997544, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 5).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 265).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 330).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 216).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.210,105502 (regressionFit = 1.210,105500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 1).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.237,042383 (regressionFit = 1.237,042381, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 5).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.186,773216 (regressionFit = 1.186,773214, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 8).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.226,257026 (regressionFit = 1.226,257024, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 2).  [covers 4,0/25,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3), chas(A, 0).  [covers 21,0/25,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3), chas(A, 0).  [covers 21,0/25,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -51,931.
% Will extend: medv(A) :- lstat(A, 3), chas(A, 0).  [covers 21,0/25,0 pos, 0,0/0,0 neg]
Comparing variance: 34.060453514739145 to score=0.0025 #egs=21.0
Comparing variance: 74.45187499999997 to score=0.0025 #egs=4.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 21,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-34,060454)
%         ILP node to extend: medv(A) :- lstat(A, 3), chas(A, 0).  [covers 21,0/25,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -34,060454) into position #2 in the search queue (new size=4).
%   Creating a FALSE-branch leaf because wgtedCountFalseBranchPos = 4,0 < 2.1 * minPosCov = 6,3

% Time for loop #4: 10 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      medv(A) :- lstat(A, 3), chas(A, 0).  [covers 21,0/25,0 pos, 0,0/0,0 neg]
% This clause covers 21 positive examples, of which 21 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 7 positive seeds: 114 141 143 151 172 179 199

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 341,0/341,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 341,0/341,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -16.039,908152 (regressionFit = 16.039,908151, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 34,0/341,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -16.039,908152): medv(A) :- crim(A, 7).  [covers 34,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.237,752736 (regressionFit = 16.237,752735, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 43,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.234,285801 (regressionFit = 16.234,285800, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 44,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.174,411884 (regressionFit = 16.174,411883, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 29,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.246,257729 (regressionFit = 16.246,257728, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 38,0/341,0 pos, 0,0/0,0 neg]
%     Score = -14.219,489767 (regressionFit = 14.219,489766, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 243,0/341,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -14.219,489767): medv(A) :- zn(A, 0).  [covers 243,0/341,0 pos, 0,0/0,0 neg]
%     Score = -13.828,184567 (regressionFit = 13.828,184566, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 20).  [covers 17,0/341,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -13.828,184567): medv(A) :- zn(A, 20).  [covers 17,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.120,684957 (regressionFit = 16.120,684955, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 40).  [covers 4,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.180,795218 (regressionFit = 16.180,795217, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 34).  [covers 3,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.042,356410 (regressionFit = 16.042,356409, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 39,0/341,0 pos, 0,0/0,0 neg]
%     Score = -14.098,765281 (regressionFit = 14.098,765280, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 37,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.228,776841 (regressionFit = 16.228,776840, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 33,0/341,0 pos, 0,0/0,0 neg]
%     Score = -15.890,303042 (regressionFit = 15.890,303041, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 45,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.159,241009 (regressionFit = 16.159,241008, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 316,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.159,241009 (regressionFit = 16.159,241008, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 25,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.247,184150 (regressionFit = 16.247,184149, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 40,0/341,0 pos, 0,0/0,0 neg]
%     Score = -15.334,599797 (regressionFit = 15.334,599796, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 27,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.077,789020 (regressionFit = 16.077,789018, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 37,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.114,323622 (regressionFit = 16.114,323621, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 43,0/341,0 pos, 0,0/0,0 neg]
%     Score = -15.768,145959 (regressionFit = 15.768,145958, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 45,0/341,0 pos, 0,0/0,0 neg]
%     Score = -15.476,196394 (regressionFit = 15.476,196393, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 39,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.061,363797 (regressionFit = 16.061,363796, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 38,0/341,0 pos, 0,0/0,0 neg]
%     Score = -12.258,715738 (regressionFit = 12.258,715737, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 22,0/341,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -12.258,715738): medv(A) :- rm(A, 3).  [covers 22,0/341,0 pos, 0,0/0,0 neg]
%     Score = -15.351,426422 (regressionFit = 15.351,426421, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 30,0/341,0 pos, 0,0/0,0 neg]
%     Score = -15.932,757643 (regressionFit = 15.932,757642, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 34,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.178,479385 (regressionFit = 16.178,479384, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 39,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.060,929192 (regressionFit = 16.060,929191, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 32,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.256,451300 (regressionFit = 16.256,451299, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 33,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.078,093048 (regressionFit = 16.078,093047, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 42,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.188,802266 (regressionFit = 16.188,802265, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 34,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.095,732304 (regressionFit = 16.095,732303, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 35,0/341,0 pos, 0,0/0,0 neg]
%     Score = -15.380,286962 (regressionFit = 15.380,286961, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 32,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.068,475127 (regressionFit = 16.068,475126, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 35,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.225,167501 (regressionFit = 16.225,167500, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 38,0/341,0 pos, 0,0/0,0 neg]
%     Score = -15.908,919923 (regressionFit = 15.908,919922, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 28,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.092,500589 (regressionFit = 16.092,500588, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 17,0/341,0 pos, 0,0/0,0 neg]
%     Score = -15.736,789140 (regressionFit = 15.736,789139, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 91,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.011,672587 (regressionFit = 16.011,672585, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 86,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.013,098957 (regressionFit = 16.013,098956, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 13,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.188,751904 (regressionFit = 16.188,751903, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 31,0/341,0 pos, 0,0/0,0 neg]
%     Score = -13.566,810789 (regressionFit = 13.566,810788, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 264).  [covers 11,0/341,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 254).  [covers 2,0/341,0 pos, 0,0/0,0 neg]
%     Score = -15.998,685025 (regressionFit = 15.998,685024, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 329).  [covers 5,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.184,483779 (regressionFit = 16.184,483778, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 13,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.255,661187 (regressionFit = 16.255,661186, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 287).  [covers 8,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.070,086715 (regressionFit = 16.070,086714, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 38,0/341,0 pos, 0,0/0,0 neg]
%     Score = -15.479,811088 (regressionFit = 15.479,811087, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 32,0/341,0 pos, 0,0/0,0 neg]
%     Score = -15.932,637065 (regressionFit = 15.932,637064, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 38,0/341,0 pos, 0,0/0,0 neg]
%     Score = -15.831,625682 (regressionFit = 15.831,625681, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 35,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.182,855535 (regressionFit = 16.182,855534, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 45,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.254,832162 (regressionFit = 16.254,832161, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 35,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.246,662381 (regressionFit = 16.246,662380, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 34,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.127,825153 (regressionFit = 16.127,825152, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 33,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.052,356762 (regressionFit = 16.052,356761, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 41,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.243,025006 (regressionFit = 16.243,025005, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 24,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.250,601349 (regressionFit = 16.250,601348, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 76,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.257,170910 (regressionFit = 16.257,170909, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 44,0/341,0 pos, 0,0/0,0 neg]
%     Score = -15.809,190069 (regressionFit = 15.809,190068, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/341,0 pos, 0,0/0,0 neg]
%     Score = -15.835,570398 (regressionFit = 15.835,570397, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 38,0/341,0 pos, 0,0/0,0 neg]
%     Score = -13.764,323700 (regressionFit = 13.764,323699, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 49,0/341,0 pos, 0,0/0,0 neg]
%     Score = -16.109,757627 (regressionFit = 16.109,757626, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/341,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3).  [covers 22,0/341,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3).  [covers 22,0/341,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -47,675.
% Will extend: medv(A) :- rm(A, 3).  [covers 22,0/341,0 pos, 0,0/0,0 neg]
Comparing variance: 62.32330578512351 to score=0.0025 #egs=22.0
Comparing variance: 34.130416957380824 to score=0.0025 #egs=319.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 22,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-62,323306)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 22,0/341,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -62,323306) into position #1 in the search queue (new size=4).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 319,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-34,130417)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -34,130417) into position #2 in the search queue (new size=5).

% Time for loop #5: 62 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #5, the best clause found is:
%      medv(A) :- rm(A, 3).  [covers 22,0/341,0 pos, 0,0/0,0 neg]
% This clause covers 22 positive examples, of which 22 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3).  [covers 22,0/22,0 pos, 0,0/0,0 neg]'
%     Score = -12.258,715738 (regressionFit = 12.258,715737, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 22,0/22,0 pos, 0,0/0,0 neg]

% Have these 3 positive seeds: 12 17 19
% Gleaner: New best node found (score = -12.258,715738): medv(A) :- rm(A, 3).  [covers 22,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.160,201113 (regressionFit = 1.160,201111, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 5).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.160,201113): medv(A) :- rm(A, 3), crim(A, 5).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 6).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 1).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -942,138122 (regressionFit = 942,138120, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 20).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -942,138122): medv(A) :- rm(A, 3), zn(A, 20).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 33).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 35).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -947,509917 (regressionFit = 947,509915, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 4).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.370,730835 (regressionFit = 1.370,730833, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 1).  [covers 6,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.281,405265 (regressionFit = 1.281,405263, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 0).  [covers 19,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.143,945907 (regressionFit = 1.143,945905, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 8).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.368,278590 (regressionFit = 1.368,278588, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 4).  [covers 5,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 5).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 7).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.366,694377 (regressionFit = 1.366,694375, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), age(A, 3).  [covers 6,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.368,972985 (regressionFit = 1.368,972982, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 8).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.368,203511 (regressionFit = 1.368,203509, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 1).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 5).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -947,509917 (regressionFit = 947,509915, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 5).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 7).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 1).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -923,328573 (regressionFit = 923,328571, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -923,328573): medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 222).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 284).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -952,847865 (regressionFit = 952,847863, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 9).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.370,836844 (regressionFit = 1.370,836842, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 3).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 1).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.356,536142 (regressionFit = 1.356,536140, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 2).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), b(A, 3).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 8).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.273,032145 (regressionFit = 1.273,032143, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 9).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.370,812481 (regressionFit = 1.370,812479, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 1).  [covers 9,0/22,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -62,323.
% Will extend: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
Comparing variance: 53.02000000000021 to score=0.0025 #egs=8.0
Comparing variance: 35.65489795918347 to score=0.0025 #egs=14.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 8,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-53,020000)
%         ILP node to extend: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -53,020000) into position #1 in the search queue (new size=5).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 14,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-35,654898)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 22,0/22,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -35,654898) into position #2 in the search queue (new size=6).

% Time for loop #6: 13 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
% This clause covers 8 positive examples, of which 8 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/8,0 pos, 0,0/0,0 neg]'
%     Score = -923,328573 (regressionFit = 923,328571, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/8,0 pos, 0,0/0,0 neg]

% Have these 7 positive seeds: 0 1 2 3 4 5 6
% Gleaner: New best node found (score = -923,328573): medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -421,280003 (regressionFit = 421,280000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), crim(A, 5).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -421,280003): medv(A) :- rm(A, 3), tax(A, 264), crim(A, 5).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -421,280003 (regressionFit = 421,280000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), crim(A, 7).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), zn(A, 20).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), indus(A, 4).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), chas(A, 0).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), nox(A, 8).  [covers 7,0/8,0 pos, 0,0/0,0 neg]
%     Score = -328,940003 (regressionFit = 328,940000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 9).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -328,940003): medv(A) :- rm(A, 3), tax(A, 264), age(A, 9).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 6).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 2).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 7).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -423,678670 (regressionFit = 423,678667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), dis(A, 9).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%     Score = -295,198670 (regressionFit = 295,198667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -295,198670): medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), dis(A, 7).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), rad(A, 5).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), ptratio(A, 9).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), b(A, 6).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -401,715003 (regressionFit = 401,715000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), b(A, 5).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), b(A, 2).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 1).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 2).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 8).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 9).  [covers 2,0/8,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -53,020.
% Will extend: medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #7: 7 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3).  [covers 22,0/14,0 pos, 0,0/0,0 neg]'
%     Score = -12.258,715738 (regressionFit = 12.258,715737, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 14,0/14,0 pos, 0,0/0,0 neg]

% Have these 6 positive seeds: 1 2 6 8 12 13
% Gleaner: New best node found (score = -12.258,715738): medv(A) :- rm(A, 3).  [covers 14,0/14,0 pos, 0,0/0,0 neg]
%     Score = -428,452502 (regressionFit = 428,452500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 2).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -428,452502): medv(A) :- rm(A, 3), crim(A, 2).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -499,056366 (regressionFit = 499,056364, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 7).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 3).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 8).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 10).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -409,657145 (regressionFit = 409,657143, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 0).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -409,657145): medv(A) :- rm(A, 3), zn(A, 0).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 45).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 40).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -391,968335 (regressionFit = 391,968333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 1).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -391,968335): medv(A) :- rm(A, 3), indus(A, 1).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 4).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -493,300891 (regressionFit = 493,300889, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 2).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 10).  [covers 2,0/14,0 pos, 0,0/0,0 neg]
%     Score = -488,501820 (regressionFit = 488,501818, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 0).  [covers 11,0/14,0 pos, 0,0/0,0 neg]
%     Score = -488,501820 (regressionFit = 488,501818, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 1).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -440,410224 (regressionFit = 440,410222, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 4).  [covers 5,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 5).  [covers 2,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 3).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -482,406669 (regressionFit = 482,406667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 2).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 9).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 10).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -497,447275 (regressionFit = 497,447273, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 2).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -423,833752 (regressionFit = 423,833750, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), age(A, 3).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -498,467275 (regressionFit = 498,467273, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 4).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 5).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 6).  [covers 2,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 2).  [covers 2,0/14,0 pos, 0,0/0,0 neg]
%     Score = -475,395760 (regressionFit = 475,395758, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 1).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 9).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 10).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 3).  [covers 2,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 5).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -499,056366 (regressionFit = 499,056364, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 8).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 4).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 24).  [covers 2,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 193).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 398).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -499,056366 (regressionFit = 499,056364, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 307).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 254).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 666).  [covers 2,0/14,0 pos, 0,0/0,0 neg]
%     Score = -448,896366 (regressionFit = 448,896364, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 2).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 1).  [covers 2,0/14,0 pos, 0,0/0,0 neg]
%     Score = -499,056366 (regressionFit = 499,056364, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 6).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 10).  [covers 2,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 4).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -459,948502 (regressionFit = 459,948500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 1).  [covers 4,0/14,0 pos, 0,0/0,0 neg]
%     Score = -490,247275 (regressionFit = 490,247273, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 6).  [covers 3,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 9).  [covers 1,0/14,0 pos, 0,0/0,0 neg]
%     Score = -381,667085 (regressionFit = 381,667083, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 9).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -381,667085): medv(A) :- rm(A, 3), lstat(A, 9).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%     Score = -496,057145 (regressionFit = 496,057143, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 1).  [covers 7,0/14,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 10).  [covers 1,0/14,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), lstat(A, 9).  [covers 6,0/14,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), lstat(A, 9).  [covers 6,0/14,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -35,655.
% Will extend: medv(A) :- rm(A, 3), lstat(A, 9).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #8: 14 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      medv(A) :- rm(A, 3), lstat(A, 9).  [covers 6,0/14,0 pos, 0,0/0,0 neg]
% This clause covers 6 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (medv(A) :- rm(A, 3))
Created a leaf under (medv(A) :- chas(A, 0))
Created a leaf under (medv(A) :- rm(A, 3))
Created a leaf under (medv(A) :- lstat(A, 6))

%%%%%  WILL-Produced Tree #8 @ 14:10:09 10/20/22.  %%%%%


% FOR medv(A):
%   if ( lstat(A, 3) )
%   then if ( rm(A, 3) )
%   | then return 43.94230769230769;  // std dev = 5,156, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( chas(A, 0) )
%   | | then return 31.16190476190476;  // std dev = 5,836, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 40.375;  // std dev = 17,257, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( lstat(A, 6) )
%   | then return 11.229545454545452;  // std dev = 3,994, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else if ( rm(A, 3) )
%   | | then if ( tax(A, 264) )
%   | | | then if ( dis(A, 8) )
%   | | | | then return 34.96666666666667;  // std dev = 8,958, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 43.260000000000005;  // std dev = 14,661, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( lstat(A, 9) )
%   | | | | then return 34.11666666666667;  // std dev = 6,204, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else return 28.262499999999996;  // std dev = 18,525, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 20.243260188087774;  // std dev = 5,842, 319,000 (wgt'ed) examples reached here.  /* #pos=319 */


% Clauses:

medv(A, 43.94230769230769) :- 
     lstat(A, 3), 
     rm(A, 3), 
     !. // Clause #1.

medv(A, 31.16190476190476) :- 
     lstat(A, 3), 
     chas(A, 0), 
     !. // Clause #2.

medv(A, 40.375) :- 
     lstat(A, 3), 
     !. // Clause #3.

medv(A, 11.229545454545452) :- 
     lstat(A, 6), 
     !. // Clause #4.

medv(A, 34.96666666666667) :- 
     rm(A, 3), 
     tax(A, 264), 
     dis(A, 8), 
     !. // Clause #5.

medv(A, 43.260000000000005) :- 
     rm(A, 3), 
     tax(A, 264), 
     !. // Clause #6.

medv(A, 34.11666666666667) :- 
     rm(A, 3), 
     lstat(A, 9), 
     !. // Clause #7.

medv(A, 28.262499999999996) :- 
     rm(A, 3), 
     !. // Clause #8.

medv(A, 20.243260188087774) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_medv(a, 43.94230769230769) :-  /* #pos=26 */ 
   lstat(a, 3),
   rm(a, 3),
   !. // Flattened version of clause #1.

flattened_medv(a, 31.16190476190476) :-  /* #pos=21 */ 
   lstat(a, 3),
   chas(a, 0),
   !. // Flattened version of clause #2.

flattened_medv(a, 40.375) :-  /* #pos=4 */ 
   lstat(a, 3),
   !. // Flattened version of clause #3.

flattened_medv(a, 11.229545454545452) :-  /* #pos=44 */ 
   lstat(a, 6),
   !. // Flattened version of clause #4.

flattened_medv(a, 34.96666666666667) :-  /* #pos=3 */ 
   rm(a, 3),
   tax(a, 264),
   dis(a, 8),
   !. // Flattened version of clause #5.

flattened_medv(a, 43.260000000000005) :-  /* #pos=5 */ 
   rm(a, 3),
   tax(a, 264),
   !. // Flattened version of clause #6.

flattened_medv(a, 34.11666666666667) :-  /* #pos=6 */ 
   rm(a, 3),
   lstat(a, 9),
   !. // Flattened version of clause #7.

flattened_medv(a, 28.262499999999996) :-  /* #pos=8 */ 
   rm(a, 3),
   !. // Flattened version of clause #8.

flattened_medv(underscore, 20.243260188087774) :-  /* #pos=319 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   rm(a, 3)
%   lstat(a, 6)
%   tax(a, 264)
%   dis(a, 8)
%   lstat(a, 9)
%   lstat(a, 3)
%   chas(a, 0)

% Saving model in: data/boston_housing/train/models/bRDNs/medv.model.ckpt
% Time taken to learn 8 trees is 8,929 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:35.6548979591837
Set score:0.0025
% Kept 436 of the 436 positive examples.
% Kept 0 of the 0 negative examples.
% Dataset size: 436
Computing probabilities
prob time:159 milliseconds
No hidden examples for : medv
Time to build dataset: 160 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:90.91398930014299
Set score:0.0025

% Have these 6 positive seeds: 11 62 148 210 361 366

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -38.808,651307 (regressionFit = 38.808,651306, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -38.808,651307): medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.590,451598 (regressionFit = 39.590,451597, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.882,625340 (regressionFit = 38.882,625339, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.630,944812 (regressionFit = 38.630,944811, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 9).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -38.630,944812): medv(A) :- crim(A, 9).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.315,657792 (regressionFit = 33.315,657791, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -33.315,657792): medv(A) :- crim(A, 10).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -34.695,563004 (regressionFit = 34.695,563003, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.291,723126 (regressionFit = 39.291,723125, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 80).  [covers 14,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.847,221324 (regressionFit = 38.847,221323, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.631,729726 (regressionFit = 39.631,729725, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.605,364995 (regressionFit = 38.605,364994, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.638,397802 (regressionFit = 39.638,397801, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.338,864441 (regressionFit = 33.338,864440, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.577,904001 (regressionFit = 38.577,904000, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 401,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.577,904001 (regressionFit = 38.577,904000, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 35,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.632,627139 (regressionFit = 39.632,627138, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.626,311286 (regressionFit = 37.626,311285, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.241,492656 (regressionFit = 38.241,492655, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.461,939144 (regressionFit = 39.461,939143, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.546,760680 (regressionFit = 39.546,760679, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.237,214598 (regressionFit = 39.237,214597, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.337,639541 (regressionFit = 39.337,639540, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.701,638091 (regressionFit = 37.701,638090, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.637,162592 (regressionFit = 39.637,162591, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.591,251036 (regressionFit = 39.591,251035, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.492,330687 (regressionFit = 39.492,330686, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 37,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.514,302075 (regressionFit = 38.514,302074, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.382,788103 (regressionFit = 38.382,788102, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.629,781185 (regressionFit = 39.629,781184, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.266,455873 (regressionFit = 37.266,455872, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.019,388871 (regressionFit = 39.019,388870, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.980,541901 (regressionFit = 38.980,541899, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.604,062463 (regressionFit = 39.604,062462, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.686,454048 (regressionFit = 38.686,454047, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.322,758601 (regressionFit = 38.322,758600, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 24,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.459,259956 (regressionFit = 39.459,259954, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 101,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.338,864441 (regressionFit = 33.338,864440, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.591,417212 (regressionFit = 39.591,417211, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 384).  [covers 11,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.631,729726 (regressionFit = 39.631,729725, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.559,309787 (regressionFit = 39.559,309786, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.441,646483 (regressionFit = 39.441,646482, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 245).  [covers 3,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.338,864441 (regressionFit = 33.338,864440, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.814,127996 (regressionFit = 38.814,127995, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.925,257034 (regressionFit = 36.925,257033, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.628,749898 (regressionFit = 38.628,749897, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.637,264034 (regressionFit = 39.637,264033, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.258,024659 (regressionFit = 33.258,024658, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 97,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -33.258,024659): medv(A) :- ptratio(A, 10).  [covers 97,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.108,046458 (regressionFit = 39.108,046457, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -35.873,729865 (regressionFit = 35.873,729864, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.276,288528 (regressionFit = 39.276,288527, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.157,831192 (regressionFit = 39.157,831191, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 102,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.918,740592 (regressionFit = 38.918,740591, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 38,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.453,241329 (regressionFit = 39.453,241328, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -24.407,574443 (regressionFit = 24.407,574442, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -24.407,574443): medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.454,238102 (regressionFit = 36.454,238101, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.790,712816 (regressionFit = 33.790,712815, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 44,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
Comparing variance: 70.95607843137188 to score=0.0025 #egs=51.0
Comparing variance: 53.99692062742384 to score=0.0025 #egs=385.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 51,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-70,956078)
%         ILP node to extend: medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -70,956078) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 385,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-53,996921)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -53,996921) into the LAST position (#2) in the search queue.

% Time for loop #1: 72 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
% This clause covers 51 positive examples, of which 51 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- lstat(A, 3).  [covers 51,0/51,0 pos, 0,0/0,0 neg]'
%     Score = -24.407,574443 (regressionFit = 24.407,574442, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 51,0/51,0 pos, 0,0/0,0 neg]

% Have these 7 positive seeds: 13 17 27 28 29 34 37
% Gleaner: New best node found (score = -24.407,574443): medv(A) :- lstat(A, 3).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.438,595099 (regressionFit = 3.438,595097, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 1).  [covers 20,0/51,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.438,595099): medv(A) :- lstat(A, 3), crim(A, 1).  [covers 20,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.594,533653 (regressionFit = 3.594,533651, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 7).  [covers 9,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.617,686785 (regressionFit = 3.617,686783, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 6).  [covers 5,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.547,712567 (regressionFit = 3.547,712565, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 2).  [covers 5,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 82.5).  [covers 1,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.993,288716 (regressionFit = 2.993,288714, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0).  [covers 21,0/51,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.993,288716): medv(A) :- lstat(A, 3), zn(A, 0).  [covers 21,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.575,005800 (regressionFit = 3.575,005798, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 20).  [covers 4,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.467,003127 (regressionFit = 3.467,003125, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 40).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.606,431460 (regressionFit = 3.606,431458, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 90).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.587,213844 (regressionFit = 3.587,213842, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 1).  [covers 14,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.618,718275 (regressionFit = 3.618,718273, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 2).  [covers 11,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.419,136412 (regressionFit = 3.419,136410, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 4).  [covers 12,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 6).  [covers 1,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.300,945496 (regressionFit = 3.300,945494, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), chas(A, 0).  [covers 43,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.300,945496 (regressionFit = 3.300,945494, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), chas(A, 1).  [covers 8,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.559,732224 (regressionFit = 3.559,732222, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 6).  [covers 15,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.576,370392 (regressionFit = 3.576,370390, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 4).  [covers 7,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.176,276446 (regressionFit = 3.176,276444, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 7).  [covers 6,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.573,381197 (regressionFit = 3.573,381195, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 2).  [covers 10,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 1).  [covers 1,0/51,0 pos, 0,0/0,0 neg]
%     Score = -1.989,521064 (regressionFit = 1.989,521062, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 3).  [covers 26,0/51,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.989,521064): medv(A) :- lstat(A, 3), rm(A, 3).  [covers 26,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.122,336391 (regressionFit = 3.122,336389, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 4).  [covers 15,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.176,171073 (regressionFit = 3.176,171071, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 1).  [covers 7,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.247,586334 (regressionFit = 3.247,586332, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 10).  [covers 14,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.618,632502 (regressionFit = 3.618,632500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 2).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.549,313194 (regressionFit = 3.549,313191, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 1).  [covers 4,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.561,100465 (regressionFit = 3.561,100463, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 8).  [covers 14,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.560,934683 (regressionFit = 3.560,934681, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 3).  [covers 4,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.589,605002 (regressionFit = 3.589,605000, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 3).  [covers 9,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.363,084523 (regressionFit = 3.363,084521, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 6).  [covers 4,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 1).  [covers 2,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.616,267822 (regressionFit = 3.616,267820, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 4).  [covers 8,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.614,848524 (regressionFit = 3.614,848522, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 2).  [covers 5,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.516,918963 (regressionFit = 3.516,918961, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 8).  [covers 7,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.582,842415 (regressionFit = 3.582,842413, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 5).  [covers 14,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.458,444612 (regressionFit = 3.458,444610, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 4).  [covers 10,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 1).  [covers 2,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 348).  [covers 1,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.516,918963 (regressionFit = 3.516,918961, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 307).  [covers 7,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 264).  [covers 1,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.467,003127 (regressionFit = 3.467,003125, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 254).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 198).  [covers 1,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 304).  [covers 1,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.810,910194 (regressionFit = 2.810,910192, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 9).  [covers 12,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.616,241100 (regressionFit = 3.616,241098, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 6).  [covers 10,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.563,536194 (regressionFit = 3.563,536192, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 2).  [covers 8,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.273,020694 (regressionFit = 3.273,020691, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 3).  [covers 4,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.598,838127 (regressionFit = 3.598,838125, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 3).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.554,940258 (regressionFit = 3.554,940256, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 5).  [covers 12,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.378,747350 (regressionFit = 3.378,747348, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 6).  [covers 5,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.046,957953 (regressionFit = 3.046,957951, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 1).  [covers 10,0/51,0 pos, 0,0/0,0 neg]
%     Score = -3.616,546460 (regressionFit = 3.616,546458, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 4).  [covers 3,0/51,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3), rm(A, 3).  [covers 26,0/51,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3), rm(A, 3).  [covers 26,0/51,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -70,956.
% Will extend: medv(A) :- lstat(A, 3), rm(A, 3).  [covers 26,0/51,0 pos, 0,0/0,0 neg]
Comparing variance: 26.586286982248566 to score=0.0025 #egs=26.0
Comparing variance: 51.93110400000034 to score=0.0025 #egs=25.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 26,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-26,586287)
%         ILP node to extend: medv(A) :- lstat(A, 3), rm(A, 3).  [covers 26,0/51,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -26,586287) into the LAST position (#2) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 25,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-51,931104)
%         ILP node to extend: medv(A) :- lstat(A, 3).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -51,931104) into position #2 in the search queue (new size=3).

% Time for loop #2: 25 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      medv(A) :- lstat(A, 3), rm(A, 3).  [covers 26,0/51,0 pos, 0,0/0,0 neg]
% This clause covers 26 positive examples, of which 26 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 7 positive seeds: 13 33 60 99 103 140 196

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 385,0/385,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 385,0/385,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -20.784,303635 (regressionFit = 20.784,303634, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 40,0/385,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20.784,303635): medv(A) :- crim(A, 4).  [covers 40,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.443,603289 (regressionFit = 20.443,603288, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 38,0/385,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20.443,603289): medv(A) :- crim(A, 7).  [covers 38,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.672,373599 (regressionFit = 20.672,373598, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 29,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.551,807284 (regressionFit = 20.551,807283, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 29,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.644,358442 (regressionFit = 20.644,358441, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 45,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.780,870974 (regressionFit = 20.780,870973, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 12.5).  [covers 10,0/385,0 pos, 0,0/0,0 neg]
%     Score = -17.606,823839 (regressionFit = 17.606,823838, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 286,0/385,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -17.606,823839): medv(A) :- zn(A, 0).  [covers 286,0/385,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 82.5).  [covers 1,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.773,719574 (regressionFit = 20.773,719573, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 22).  [covers 6,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.629,604457 (regressionFit = 20.629,604456, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.594,569964 (regressionFit = 20.594,569963, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 21,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.627,074127 (regressionFit = 20.627,074126, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 24,0/385,0 pos, 0,0/0,0 neg]
%     Score = -18.901,473485 (regressionFit = 18.901,473484, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 34,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.786,117401 (regressionFit = 20.786,117400, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 35,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.730,027608 (regressionFit = 20.730,027607, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 43,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.611,929573 (regressionFit = 20.611,929572, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 358,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.611,929573 (regressionFit = 20.611,929572, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 27,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.691,830908 (regressionFit = 20.691,830907, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 41,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.164,164442 (regressionFit = 20.164,164441, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 33,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.864,201031 (regressionFit = 19.864,201030, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 42,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.478,998988 (regressionFit = 20.478,998987, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 33,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.591,807788 (regressionFit = 19.591,807787, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 41,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.399,239054 (regressionFit = 20.399,239053, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 43,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.565,798944 (regressionFit = 20.565,798943, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 46,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.756,167579 (regressionFit = 20.756,167578, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 43,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.012,626313 (regressionFit = 20.012,626312, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 44,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.761,647850 (regressionFit = 20.761,647849, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 43,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.706,616494 (regressionFit = 20.706,616493, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 39,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.321,786015 (regressionFit = 20.321,786014, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 36,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.769,785825 (regressionFit = 20.769,785824, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 39,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.129,200550 (regressionFit = 20.129,200549, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 42,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.294,023682 (regressionFit = 19.294,023681, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 47,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.944,962523 (regressionFit = 19.944,962521, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 36,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.345,487095 (regressionFit = 20.345,487094, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 42,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.524,086481 (regressionFit = 20.524,086480, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 39,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.247,295687 (regressionFit = 20.247,295686, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 35,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.785,850886 (regressionFit = 20.785,850885, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 37,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.691,178985 (regressionFit = 20.691,178984, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 41,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.362,698116 (regressionFit = 19.362,698115, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 42,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.116,637486 (regressionFit = 19.116,637485, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 48,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.738,690466 (regressionFit = 20.738,690465, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 46,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.542,572360 (regressionFit = 20.542,572359, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 38,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.414,782778 (regressionFit = 20.414,782776, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 37,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.961,401922 (regressionFit = 19.961,401921, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 98,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.754,720611 (regressionFit = 20.754,720610, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 91,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.640,614291 (regressionFit = 20.640,614290, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 18,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.398,997189 (regressionFit = 20.398,997188, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 13,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.783,458229 (regressionFit = 20.783,458228, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 311).  [covers 7,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.595,756672 (regressionFit = 20.595,756671, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 437).  [covers 14,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.627,074127 (regressionFit = 20.627,074126, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 24,0/385,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 348).  [covers 1,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.739,333691 (regressionFit = 20.739,333690, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 277).  [covers 11,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.773,719574 (regressionFit = 20.773,719573, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 330).  [covers 6,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.769,872648 (regressionFit = 20.769,872647, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 13,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.092,395397 (regressionFit = 20.092,395396, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 36,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.601,791702 (regressionFit = 20.601,791701, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 7).  [covers 16,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.155,005497 (regressionFit = 20.155,005496, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 38,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.517,286805 (regressionFit = 20.517,286803, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 47,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.742,763821 (regressionFit = 20.742,763820, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 37,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.679,657011 (regressionFit = 20.679,657010, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 32,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.671,877870 (regressionFit = 20.671,877869, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 92,0/385,0 pos, 0,0/0,0 neg]
%     Score = -18.542,043871 (regressionFit = 18.542,043870, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 40,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.671,634488 (regressionFit = 20.671,634487, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 44,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.497,824978 (regressionFit = 20.497,824977, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 34,0/385,0 pos, 0,0/0,0 neg]
%     Score = -18.971,575575 (regressionFit = 18.971,575574, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 39,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.618,989911 (regressionFit = 20.618,989910, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 38,0/385,0 pos, 0,0/0,0 neg]
%     Score = -20.073,102765 (regressionFit = 20.073,102764, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 38,0/385,0 pos, 0,0/0,0 neg]
%     Score = -18.788,262881 (regressionFit = 18.788,262880, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 46,0/385,0 pos, 0,0/0,0 neg]
%     Score = -19.943,651661 (regressionFit = 19.943,651660, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/385,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0).  [covers 286,0/385,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0).  [covers 286,0/385,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -53,997.
% Will extend: medv(A) :- zn(A, 0).  [covers 286,0/385,0 pos, 0,0/0,0 neg]
Comparing variance: 44.897711379530065 to score=0.0025 #egs=286.0
Comparing variance: 48.14220589735744 to score=0.0025 #egs=99.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 286,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-44,897711)
%         ILP node to extend: medv(A) :- zn(A, 0).  [covers 286,0/385,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -44,897711) into position #2 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 99,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-48,142206)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -48,142206) into position #2 in the search queue (new size=4).

% Time for loop #3: 74 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      medv(A) :- zn(A, 0).  [covers 286,0/385,0 pos, 0,0/0,0 neg]
% This clause covers 286 positive examples, of which 286 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- lstat(A, 3).  [covers 51,0/25,0 pos, 0,0/0,0 neg]'
%     Score = -24.407,574443 (regressionFit = 24.407,574442, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 25,0/25,0 pos, 0,0/0,0 neg]

% Have these 2 positive seeds: 21 22
% Gleaner: New best node found (score = -24.407,574443): medv(A) :- lstat(A, 3).  [covers 25,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.178,559938 (regressionFit = 1.178,559936, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 1).  [covers 12,0/25,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.178,559938): medv(A) :- lstat(A, 3), crim(A, 1).  [covers 12,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 75).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -922,002145 (regressionFit = 922,002143, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -922,002145): medv(A) :- lstat(A, 3), zn(A, 0).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.212,832066 (regressionFit = 1.212,832063, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 4).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.291,308002 (regressionFit = 1.291,308000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 1).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.013,077026 (regressionFit = 1.013,077024, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), chas(A, 0).  [covers 21,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.214,738002 (regressionFit = 1.214,738000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 5).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.297,394002 (regressionFit = 1.297,394000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 2).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.265,797335 (regressionFit = 1.265,797333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 4).  [covers 15,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.134,394933 (regressionFit = 1.134,394931, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 10).  [covers 9,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.292,492578 (regressionFit = 1.292,492576, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 3).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.291,939288 (regressionFit = 1.291,939286, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 2).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.208,749526 (regressionFit = 1.208,749524, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 3).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.297,868002 (regressionFit = 1.297,868000, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 3).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 252).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 222).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.250,697026 (regressionFit = 1.250,697024, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 3).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 4).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 3).  [covers 1,0/25,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3), zn(A, 0).  [covers 7,0/25,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3), zn(A, 0).  [covers 7,0/25,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -51,931.
% Will extend: medv(A) :- lstat(A, 3), zn(A, 0).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
Comparing variance: 101.88530612244904 to score=0.0025 #egs=7.0
Comparing variance: 11.600277777777997 to score=0.0025 #egs=18.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 7,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-101,885306)
%         ILP node to extend: medv(A) :- lstat(A, 3), zn(A, 0).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -101,885306) into position #1 in the search queue (new size=4).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 18,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-11,600278)
%         ILP node to extend: medv(A) :- lstat(A, 3).  [covers 25,0/25,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -11,600278) into the LAST position (#5) in the search queue.

% Time for loop #4: 7 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      medv(A) :- lstat(A, 3), zn(A, 0).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
% This clause covers 7 positive examples, of which 7 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- lstat(A, 3), zn(A, 0).  [covers 7,0/7,0 pos, 0,0/0,0 neg]'
%     Score = -922,002145 (regressionFit = 922,002143, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0).  [covers 7,0/7,0 pos, 0,0/0,0 neg]

% Have these 7 positive seeds: 0 1 2 3 4 5 6
% Gleaner: New best node found (score = -922,002145): medv(A) :- lstat(A, 3), zn(A, 0).  [covers 7,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), crim(A, 5).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), crim(A, 7).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), crim(A, 8).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), crim(A, 9).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), crim(A, 1).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), indus(A, 9).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), indus(A, 2).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), indus(A, 6).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -173,090003 (regressionFit = 173,090000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), indus(A, 10).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -173,090003): medv(A) :- lstat(A, 3), zn(A, 0), indus(A, 10).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), indus(A, 1).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), chas(A, 0).  [covers 5,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), chas(A, 1).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), nox(A, 7).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), nox(A, 4).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), nox(A, 1).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -173,090003 (regressionFit = 173,090000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), nox(A, 8).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), nox(A, 2).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -697,854170 (regressionFit = 697,854167, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), rm(A, 4).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -577,154170 (regressionFit = 577,154167, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), rm(A, 1).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), rm(A, 9).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -437,787503 (regressionFit = 437,787500, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), age(A, 5).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), age(A, 10).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), age(A, 2).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), age(A, 6).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), age(A, 3).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), dis(A, 9).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), dis(A, 4).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -173,090003 (regressionFit = 173,090000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), dis(A, 10).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), dis(A, 3).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), rad(A, 5).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), rad(A, 8).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), rad(A, 4).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -173,090003 (regressionFit = 173,090000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), rad(A, 24).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), rad(A, 3).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), tax(A, 403).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), tax(A, 307).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), tax(A, 304).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -173,090003 (regressionFit = 173,090000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), tax(A, 666).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), tax(A, 222).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), ptratio(A, 9).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), ptratio(A, 6).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), ptratio(A, 3).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -173,090003 (regressionFit = 173,090000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), ptratio(A, 10).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), b(A, 9).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), b(A, 5).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), b(A, 1).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), b(A, 8).  [covers 2,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), b(A, 2).  [covers 1,0/7,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0), b(A, 3).  [covers 1,0/7,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3), zn(A, 0), indus(A, 10).  [covers 3,0/7,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3), zn(A, 0), indus(A, 10).  [covers 3,0/7,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -101,885.
% Will extend: medv(A) :- lstat(A, 3), zn(A, 0), indus(A, 10).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
Comparing variance: 0.0 to score=0.0025 #egs=3.0
Comparing variance: 43.272500000000036 to score=0.0025 #egs=4.0
%   Creating a TRUE-branch leaf because length = 4 > 3
%   Creating a FALSE-branch leaf because wgtedCountFalseBranchPos = 4,0 < 2.1 * minPosCov = 6,3

% Time for loop #5: 9 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #5, the best clause found is:
%      medv(A) :- lstat(A, 3), zn(A, 0), indus(A, 10).  [covers 3,0/7,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 7 positive seeds: 3 5 19 21 37 42 50

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 99,0/99,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 99,0/99,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -4.745,582254 (regressionFit = 4.745,582253, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 21,0/99,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.745,582254): medv(A) :- crim(A, 1).  [covers 21,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.753,385804 (regressionFit = 4.753,385803, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 17,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.623,677702 (regressionFit = 4.623,677701, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 12,0/99,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.623,677702): medv(A) :- crim(A, 4).  [covers 12,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.282,189894 (regressionFit = 4.282,189892, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 6,0/99,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.282,189894): medv(A) :- crim(A, 7).  [covers 6,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.027,204675 (regressionFit = 4.027,204674, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 7,0/99,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.027,204675): medv(A) :- crim(A, 5).  [covers 7,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.730,528995 (regressionFit = 4.730,528994, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 20,0/99,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 18).  [covers 1,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.518,673264 (regressionFit = 4.518,673263, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 45).  [covers 4,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.695,989625 (regressionFit = 4.695,989624, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 22).  [covers 6,0/99,0 pos, 0,0/0,0 neg]
%     Score = -3.485,748437 (regressionFit = 3.485,748436, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 20).  [covers 17,0/99,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.485,748437): medv(A) :- zn(A, 20).  [covers 17,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.747,316251 (regressionFit = 4.747,316250, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 52.5).  [covers 3,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.761,829140 (regressionFit = 4.761,829139, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 21,0/99,0 pos, 0,0/0,0 neg]
%     Score = -3.492,062918 (regressionFit = 3.492,062917, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 24,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.332,821784 (regressionFit = 4.332,821783, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 30,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.730,633882 (regressionFit = 4.730,633881, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 15,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.721,309584 (regressionFit = 4.721,309583, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 96,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.721,309584 (regressionFit = 4.721,309583, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 3,0/99,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 1,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.705,537726 (regressionFit = 4.705,537725, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 30,0/99,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 1,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.742,893472 (regressionFit = 4.742,893471, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 16,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.628,659233 (regressionFit = 4.628,659232, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 29,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.758,115182 (regressionFit = 4.758,115181, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 16,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.494,786263 (regressionFit = 4.494,786262, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 15,0/99,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 2,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.694,342254 (regressionFit = 4.694,342253, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 8,0/99,0 pos, 0,0/0,0 neg]
%     Score = -2.195,963049 (regressionFit = 2.195,963048, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 15,0/99,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.195,963049): medv(A) :- rm(A, 3).  [covers 15,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.701,049081 (regressionFit = 4.701,049080, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 8,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.655,003183 (regressionFit = 4.655,003182, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 11,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.762,509012 (regressionFit = 4.762,509011, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 21,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.765,411223 (regressionFit = 4.765,411222, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 9,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.697,277923 (regressionFit = 4.697,277922, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 22,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.727,195112 (regressionFit = 4.727,195111, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 9,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.760,283712 (regressionFit = 4.760,283711, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 4,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.508,920199 (regressionFit = 4.508,920198, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 36,0/99,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 2,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.728,708478 (regressionFit = 4.728,708477, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 12,0/99,0 pos, 0,0/0,0 neg]
%     Score = -3.979,132779 (regressionFit = 3.979,132778, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 27,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.762,391557 (regressionFit = 4.762,391556, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 13,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.748,774571 (regressionFit = 4.748,774570, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 6,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.671,867112 (regressionFit = 4.671,867111, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 9,0/99,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 296).  [covers 1,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.518,673264 (regressionFit = 4.518,673263, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 398).  [covers 4,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.695,989625 (regressionFit = 4.695,989624, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 330).  [covers 6,0/99,0 pos, 0,0/0,0 neg]
%     Score = -3.091,896251 (regressionFit = 3.091,896250, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 264).  [covers 11,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.764,331512 (regressionFit = 4.764,331511, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 223).  [covers 5,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.747,316251 (regressionFit = 4.747,316250, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 293).  [covers 3,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.766,045423 (regressionFit = 4.766,045421, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 26,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.637,956816 (regressionFit = 4.637,956815, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 14,0/99,0 pos, 0,0/0,0 neg]
%     Score = -3.152,761816 (regressionFit = 3.152,761815, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 14,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.754,707160 (regressionFit = 4.754,707159, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 11,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.505,002734 (regressionFit = 4.505,002733, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 17,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.727,069952 (regressionFit = 4.727,069951, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 25,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.752,779404 (regressionFit = 4.752,779403, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 14,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.712,653524 (regressionFit = 4.712,653523, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 11,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.677,739685 (regressionFit = 4.677,739684, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 17,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.467,139821 (regressionFit = 4.467,139820, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 10,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.335,988731 (regressionFit = 4.335,988730, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 26,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.597,174121 (regressionFit = 4.597,174120, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 26,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.338,259557 (regressionFit = 4.338,259556, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 9,0/99,0 pos, 0,0/0,0 neg]
%     Score = -4.733,504891 (regressionFit = 4.733,504890, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 21,0/99,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3).  [covers 15,0/99,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3).  [covers 15,0/99,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -48,142.
% Will extend: medv(A) :- rm(A, 3).  [covers 15,0/99,0 pos, 0,0/0,0 neg]
Comparing variance: 40.56115555555516 to score=0.0025 #egs=15.0
Comparing variance: 18.8993537414964 to score=0.0025 #egs=84.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 15,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-40,561156)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 15,0/99,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -40,561156) into position #2 in the search queue (new size=4).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 84,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-18,899354)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -18,899354) into position #4 in the search queue (new size=5).

% Time for loop #6: 37 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      medv(A) :- rm(A, 3).  [covers 15,0/99,0 pos, 0,0/0,0 neg]
% This clause covers 15 positive examples, of which 15 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- zn(A, 0).  [covers 286,0/286,0 pos, 0,0/0,0 neg]'
%     Score = -17.606,823839 (regressionFit = 17.606,823838, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 286,0/286,0 pos, 0,0/0,0 neg]

% Have these 7 positive seeds: 13 57 84 90 119 192 218
% Gleaner: New best node found (score = -17.606,823839): medv(A) :- zn(A, 0).  [covers 286,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.452,599232 (regressionFit = 12.452,599230, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 3).  [covers 29,0/286,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -12.452,599232): medv(A) :- zn(A, 0), crim(A, 3).  [covers 29,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.838,956790 (regressionFit = 12.838,956788, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 8).  [covers 29,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.476,588464 (regressionFit = 12.476,588462, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 6).  [covers 18,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.809,686710 (regressionFit = 12.809,686708, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 5).  [covers 38,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.379,885088 (regressionFit = 12.379,885086, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 9).  [covers 30,0/286,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -12.379,885088): medv(A) :- zn(A, 0), crim(A, 9).  [covers 30,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.688,149090 (regressionFit = 12.688,149088, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 6).  [covers 35,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.823,028555 (regressionFit = 12.823,028553, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 9).  [covers 24,0/286,0 pos, 0,0/0,0 neg]
%     Score = -10.957,667035 (regressionFit = 10.957,667033, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 1).  [covers 13,0/286,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10.957,667035): medv(A) :- zn(A, 0), indus(A, 1).  [covers 13,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.839,184986 (regressionFit = 12.839,184984, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 3).  [covers 40,0/286,0 pos, 0,0/0,0 neg]
%     Score = -9.968,457737 (regressionFit = 9.968,457735, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 10).  [covers 87,0/286,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.968,457737): medv(A) :- zn(A, 0), indus(A, 10).  [covers 87,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.541,121529 (regressionFit = 12.541,121527, penalties=2.0300000000000005E-6) for clause:  medv(A) :- zn(A, 0), chas(A, 0).  [covers 262,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.541,121529 (regressionFit = 12.541,121527, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), chas(A, 1).  [covers 24,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.828,076364 (regressionFit = 12.828,076361, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 1).  [covers 45,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.471,897059 (regressionFit = 12.471,897057, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 9).  [covers 42,0/286,0 pos, 0,0/0,0 neg]
%     Score = -11.227,051664 (regressionFit = 11.227,051662, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 4).  [covers 36,0/286,0 pos, 0,0/0,0 neg]
%     Score = -9.070,305794 (regressionFit = 9.070,305792, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 10).  [covers 42,0/286,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.070,305794): medv(A) :- zn(A, 0), nox(A, 10).  [covers 42,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.839,952057 (regressionFit = 12.839,952055, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 7).  [covers 25,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.837,907670 (regressionFit = 12.837,907668, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 8).  [covers 35,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.836,903303 (regressionFit = 12.836,903301, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 6).  [covers 35,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.838,310792 (regressionFit = 12.838,310790, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 5).  [covers 32,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.588,377712 (regressionFit = 12.588,377710, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 7).  [covers 38,0/286,0 pos, 0,0/0,0 neg]
%     Score = -11.710,447514 (regressionFit = 11.710,447512, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 9).  [covers 41,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.599,676277 (regressionFit = 12.599,676275, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 7).  [covers 39,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.814,650911 (regressionFit = 12.814,650909, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 2).  [covers 33,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.558,500364 (regressionFit = 12.558,500362, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 4).  [covers 25,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.242,846480 (regressionFit = 12.242,846478, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 1).  [covers 28,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.837,007733 (regressionFit = 12.837,007731, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 9).  [covers 34,0/286,0 pos, 0,0/0,0 neg]
%     Score = -11.835,065188 (regressionFit = 11.835,065186, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 6).  [covers 44,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.426,247465 (regressionFit = 12.426,247463, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 5).  [covers 35,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.788,008954 (regressionFit = 12.788,008952, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 7).  [covers 27,0/286,0 pos, 0,0/0,0 neg]
%     Score = -11.344,260569 (regressionFit = 11.344,260567, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 9).  [covers 39,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.136,328381 (regressionFit = 12.136,328379, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 4).  [covers 33,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.775,550652 (regressionFit = 12.775,550650, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 1).  [covers 37,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.733,587079 (regressionFit = 12.733,587077, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 2).  [covers 26,0/286,0 pos, 0,0/0,0 neg]
%     Score = -11.994,332166 (regressionFit = 11.994,332164, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 10).  [covers 48,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.839,468458 (regressionFit = 12.839,468456, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 6).  [covers 9,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.615,241349 (regressionFit = 12.615,241347, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 5).  [covers 71,0/286,0 pos, 0,0/0,0 neg]
%     Score = -11.701,504000 (regressionFit = 11.701,503998, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 3).  [covers 24,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.837,343538 (regressionFit = 12.837,343536, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 4).  [covers 69,0/286,0 pos, 0,0/0,0 neg]
%     Score = -9.968,457737 (regressionFit = 9.968,457735, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 24).  [covers 87,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.839,468458 (regressionFit = 12.839,468456, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 432).  [covers 9,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.823,028555 (regressionFit = 12.823,028553, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 403).  [covers 24,0/286,0 pos, 0,0/0,0 neg]
%     Score = -11.245,462030 (regressionFit = 11.245,462028, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 193).  [covers 7,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.677,128875 (regressionFit = 12.677,128873, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 277).  [covers 11,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.791,215733 (regressionFit = 12.791,215731, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 307).  [covers 32,0/286,0 pos, 0,0/0,0 neg]
%     Score = -9.968,457737 (regressionFit = 9.968,457735, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 666).  [covers 87,0/286,0 pos, 0,0/0,0 neg]
%     Score = -11.882,568034 (regressionFit = 11.882,568031, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 2).  [covers 32,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.823,028555 (regressionFit = 12.823,028553, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 9).  [covers 24,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.507,235418 (regressionFit = 12.507,235416, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 3).  [covers 36,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.801,534963 (regressionFit = 12.801,534961, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 4).  [covers 32,0/286,0 pos, 0,0/0,0 neg]
%     Score = -10.137,682423 (regressionFit = 10.137,682421, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 10).  [covers 94,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.695,024317 (regressionFit = 12.695,024315, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 3).  [covers 30,0/286,0 pos, 0,0/0,0 neg]
%     Score = -11.483,088400 (regressionFit = 11.483,088398, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 7).  [covers 40,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.785,461532 (regressionFit = 12.785,461530, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 5).  [covers 24,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.751,505233 (regressionFit = 12.751,505231, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 8).  [covers 26,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.738,806047 (regressionFit = 12.738,806045, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 1).  [covers 67,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.838,891851 (regressionFit = 12.838,891848, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 9).  [covers 37,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.558,434242 (regressionFit = 12.558,434240, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 7).  [covers 36,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.825,057762 (regressionFit = 12.825,057760, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 10).  [covers 33,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.771,685826 (regressionFit = 12.771,685823, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 4).  [covers 33,0/286,0 pos, 0,0/0,0 neg]
%     Score = -10.225,946996 (regressionFit = 10.225,946994, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 6).  [covers 43,0/286,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), nox(A, 10).  [covers 42,0/286,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), nox(A, 10).  [covers 42,0/286,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -44,898.
% Will extend: medv(A) :- zn(A, 0), nox(A, 10).  [covers 42,0/286,0 pos, 0,0/0,0 neg]
Comparing variance: 11.476031746031735 to score=0.0025 #egs=42.0
Comparing variance: 35.198001881214786 to score=0.0025 #egs=244.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 42,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-11,476032)
%         ILP node to extend: medv(A) :- zn(A, 0), nox(A, 10).  [covers 42,0/286,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -11,476032) into the LAST position (#5) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 244,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-35,198002)
%         ILP node to extend: medv(A) :- zn(A, 0).  [covers 286,0/286,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -35,198002) into position #2 in the search queue (new size=6).

% Time for loop #7: 282 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      medv(A) :- zn(A, 0), nox(A, 10).  [covers 42,0/286,0 pos, 0,0/0,0 neg]
% This clause covers 42 positive examples, of which 42 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3).  [covers 15,0/15,0 pos, 0,0/0,0 neg]'
%     Score = -2.195,963049 (regressionFit = 2.195,963048, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 15,0/15,0 pos, 0,0/0,0 neg]

% Have these 7 positive seeds: 0 3 5 6 7 8 10
% Gleaner: New best node found (score = -2.195,963049): medv(A) :- rm(A, 3).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 2).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -529,791820 (regressionFit = 529,791818, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 5).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -529,791820): medv(A) :- rm(A, 3), crim(A, 5).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
%     Score = -571,639093 (regressionFit = 571,639091, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 7).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 4).  [covers 1,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 45).  [covers 1,0/15,0 pos, 0,0/0,0 neg]
%     Score = -463,763891 (regressionFit = 463,763889, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 20).  [covers 9,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -463,763891): medv(A) :- rm(A, 3), zn(A, 20).  [covers 9,0/15,0 pos, 0,0/0,0 neg]
%     Score = -467,542224 (regressionFit = 467,542222, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 4).  [covers 9,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 2).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 0).  [covers 13,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 1).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 5).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -559,407323 (regressionFit = 559,407321, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 8).  [covers 7,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 2).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -485,683891 (regressionFit = 485,683889, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), age(A, 3).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 6).  [covers 1,0/15,0 pos, 0,0/0,0 neg]
%     Score = -367,445457 (regressionFit = 367,445455, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -367,445457): medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 7).  [covers 1,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 2).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -577,313335 (regressionFit = 577,313333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 9).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -593,616669 (regressionFit = 593,616667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 8).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 7).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 1).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -467,542224 (regressionFit = 467,542222, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 5).  [covers 9,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 3).  [covers 1,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 398).  [covers 1,0/15,0 pos, 0,0/0,0 neg]
%     Score = -433,240002 (regressionFit = 433,240000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 223).  [covers 1,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 1).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -471,270558 (regressionFit = 471,270556, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 9).  [covers 9,0/15,0 pos, 0,0/0,0 neg]
%     Score = -573,456669 (regressionFit = 573,456667, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 3).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 1).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -478,963866 (regressionFit = 478,963864, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 5).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
%     Score = -576,429320 (regressionFit = 576,429318, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 6).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
%     Score = -521,295835 (regressionFit = 521,295833, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 2).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -579,409002 (regressionFit = 579,409000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 1).  [covers 5,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 2).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -602,333335 (regressionFit = 602,333333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 9).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 8).  [covers 2,0/15,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/15,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/15,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -40,561.
% Will extend: medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
Comparing variance: 28.66500000000042 to score=0.0025 #egs=4.0
Comparing variance: 22.980495867768198 to score=0.0025 #egs=11.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 4,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 11,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-22,980496)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -22,980496) into position #3 in the search queue (new size=6).

% Time for loop #8: 23 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (medv(A) :- nox(A, 10))
Created a leaf under (medv(A) :- rm(A, 3))
Created a leaf under (medv(A) :- age(A, 9))
Created a leaf under (medv(A) :- rm(A, 3))
Created a leaf under (medv(A) :- zn(A, 0))
Created a leaf under (medv(A) :- nox(A, 10))

%%%%%  WILL-Produced Tree #9 @ 14:10:09 10/20/22.  %%%%%


% FOR medv(A):
%   if ( lstat(A, 3) )
%   then if ( rm(A, 3) )
%   | then return 43.94230769230769;  // std dev = 5,156, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( zn(A, 0) )
%   | | then if ( indus(A, 10) )
%   | | | then return 49;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 31.25;  // std dev = 13,156, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 30.216666666666665;  // std dev = 3,406, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( zn(A, 0) )
%   | then if ( nox(A, 10) )
%   | | then return 9.566666666666666;  // std dev = 3,388, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return 19.824590163934424;  // std dev = 5,933, 244,000 (wgt'ed) examples reached here.  /* #pos=244 */
%   | else if ( rm(A, 3) )
%   | | then if ( age(A, 9) )
%   | | | then return 43.599999999999994;  // std dev = 10,708, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 34.53636363636364;  // std dev = 4,794, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 22.74285714285715;  // std dev = 4,347, 84,000 (wgt'ed) examples reached here.  /* #pos=84 */


% Clauses:

medv(A, 43.94230769230769) :- 
     lstat(A, 3), 
     rm(A, 3), 
     !. // Clause #1.

medv(A, 49) :- 
     lstat(A, 3), 
     zn(A, 0), 
     indus(A, 10), 
     !. // Clause #2.

medv(A, 31.25) :- 
     lstat(A, 3), 
     zn(A, 0), 
     !. // Clause #3.

medv(A, 30.216666666666665) :- 
     lstat(A, 3), 
     !. // Clause #4.

medv(A, 9.566666666666666) :- 
     zn(A, 0), 
     nox(A, 10), 
     !. // Clause #5.

medv(A, 19.824590163934424) :- 
     zn(A, 0), 
     !. // Clause #6.

medv(A, 43.599999999999994) :- 
     rm(A, 3), 
     age(A, 9), 
     !. // Clause #7.

medv(A, 34.53636363636364) :- 
     rm(A, 3), 
     !. // Clause #8.

medv(A, 22.74285714285715) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_medv(a, 43.94230769230769) :-  /* #pos=26 */ 
   lstat(a, 3),
   rm(a, 3),
   !. // Flattened version of clause #1.

flattened_medv(a, 49) :-  /* #pos=3 */ 
   lstat(a, 3),
   zn(a, 0),
   indus(a, 10),
   !. // Flattened version of clause #2.

flattened_medv(a, 31.25) :-  /* #pos=4 */ 
   lstat(a, 3),
   zn(a, 0),
   !. // Flattened version of clause #3.

flattened_medv(a, 30.216666666666665) :-  /* #pos=18 */ 
   lstat(a, 3),
   !. // Flattened version of clause #4.

flattened_medv(a, 9.566666666666666) :-  /* #pos=42 */ 
   zn(a, 0),
   nox(a, 10),
   !. // Flattened version of clause #5.

flattened_medv(a, 19.824590163934424) :-  /* #pos=244 */ 
   zn(a, 0),
   !. // Flattened version of clause #6.

flattened_medv(a, 43.599999999999994) :-  /* #pos=4 */ 
   rm(a, 3),
   age(a, 9),
   !. // Flattened version of clause #7.

flattened_medv(a, 34.53636363636364) :-  /* #pos=11 */ 
   rm(a, 3),
   !. // Flattened version of clause #8.

flattened_medv(underscore, 22.74285714285715) :-  /* #pos=84 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   lstat(a, 3)
%   rm(a, 3)
%   nox(a, 10)
%   age(a, 9)
%   zn(a, 0)
%   indus(a, 10)

% Saving model in: data/boston_housing/train/models/bRDNs/medv.model.ckpt
% Time taken to learn 9 trees is 9,636 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:40.56115555555493
Set score:0.0025
% Kept 436 of the 436 positive examples.
% Kept 0 of the 0 negative examples.
% Dataset size: 436
Computing probabilities
prob time:429 milliseconds
No hidden examples for : medv
Time to build dataset: 432 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:90.91398930014299
Set score:0.0025

% Have these 7 positive seeds: 24 137 234 288 304 350 387

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -39.638,468162 (regressionFit = 39.638,468161, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -39.638,468162): medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.638,483808 (regressionFit = 39.638,483807, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.808,651307 (regressionFit = 38.808,651306, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -38.808,651307): medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.590,451598 (regressionFit = 39.590,451597, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.315,657792 (regressionFit = 33.315,657791, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -33.315,657792): medv(A) :- crim(A, 10).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.272,609528 (regressionFit = 39.272,609527, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.544,486823 (regressionFit = 39.544,486822, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 12.5).  [covers 10,0/436,0 pos, 0,0/0,0 neg]
%     Score = -34.695,563004 (regressionFit = 34.695,563003, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.634,374793 (regressionFit = 39.634,374792, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 21).  [covers 4,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.847,221324 (regressionFit = 38.847,221323, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.605,364995 (regressionFit = 38.605,364994, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.505,053776 (regressionFit = 39.505,053775, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.338,864441 (regressionFit = 33.338,864440, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.638,397802 (regressionFit = 39.638,397801, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.577,904001 (regressionFit = 38.577,904000, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 401,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.577,904001 (regressionFit = 38.577,904000, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 35,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.632,627139 (regressionFit = 39.632,627138, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.737,679697 (regressionFit = 38.737,679696, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.626,311286 (regressionFit = 37.626,311285, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -32.266,679045 (regressionFit = 32.266,679044, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -32.266,679045): medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.428,299302 (regressionFit = 39.428,299301, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.105,555484 (regressionFit = 39.105,555483, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.337,639541 (regressionFit = 39.337,639540, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.546,760680 (regressionFit = 39.546,760679, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.815,121425 (regressionFit = 37.815,121424, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.236,069996 (regressionFit = 39.236,069995, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.237,214598 (regressionFit = 39.237,214597, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.591,251036 (regressionFit = 39.591,251035, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.637,162592 (regressionFit = 39.637,162591, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.264,324993 (regressionFit = 39.264,324992, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.201,871597 (regressionFit = 37.201,871596, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.413,493707 (regressionFit = 39.413,493706, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.398,550879 (regressionFit = 39.398,550878, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.019,388871 (regressionFit = 39.019,388870, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.266,455873 (regressionFit = 37.266,455872, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.799,267521 (regressionFit = 37.799,267520, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.686,454048 (regressionFit = 38.686,454047, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.322,758601 (regressionFit = 38.322,758600, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 24,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.459,259956 (regressionFit = 39.459,259954, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 101,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.338,864441 (regressionFit = 33.338,864440, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.573,704044 (regressionFit = 39.573,704043, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 311).  [covers 7,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.559,309787 (regressionFit = 39.559,309786, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.497,238969 (regressionFit = 39.497,238968, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 14,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.338,864441 (regressionFit = 33.338,864440, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.634,374793 (regressionFit = 39.634,374792, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 243).  [covers 4,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.780,620084 (regressionFit = 38.780,620083, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.628,749898 (regressionFit = 38.628,749897, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.612,829726 (regressionFit = 39.612,829724, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.258,024659 (regressionFit = 33.258,024658, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 97,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.157,831192 (regressionFit = 39.157,831191, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 102,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.176,403309 (regressionFit = 39.176,403308, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.276,288528 (regressionFit = 39.276,288527, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.618,245003 (regressionFit = 39.618,245002, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.281,193186 (regressionFit = 39.281,193185, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.800,377476 (regressionFit = 38.800,377475, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.453,241329 (regressionFit = 39.453,241328, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.918,740592 (regressionFit = 38.918,740591, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 38,0/436,0 pos, 0,0/0,0 neg]
%     Score = -33.790,712816 (regressionFit = 33.790,712815, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 44,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
Comparing variance: 11.476031746031735 to score=0.0025 #egs=42.0
Comparing variance: 80.67179114380616 to score=0.0025 #egs=394.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 42,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-11,476032)
%         ILP node to extend: medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -11,476032) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 394,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-80,671791)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -80,671791) into position #1 in the search queue (new size=2).

% Time for loop #1: 187 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
% This clause covers 42 positive examples, of which 42 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 7 positive seeds: 81 146 168 247 249 257 297

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 394,0/394,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 394,0/394,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -31.481,446450 (regressionFit = 31.481,446449, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 51,0/394,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -31.481,446450): medv(A) :- crim(A, 2).  [covers 51,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.686,330930 (regressionFit = 31.686,330929, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 49,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.416,543717 (regressionFit = 31.416,543716, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 47,0/394,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -31.416,543717): medv(A) :- crim(A, 7).  [covers 47,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.347,432799 (regressionFit = 31.347,432798, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 41,0/394,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -31.347,432799): medv(A) :- crim(A, 4).  [covers 41,0/394,0 pos, 0,0/0,0 neg]
%     Score = -30.556,705234 (regressionFit = 30.556,705233, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 49,0/394,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -30.556,705234): medv(A) :- crim(A, 1).  [covers 49,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.712,721171 (regressionFit = 31.712,721170, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 9).  [covers 18,0/394,0 pos, 0,0/0,0 neg]
%     Score = -28.939,216962 (regressionFit = 28.939,216961, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 265,0/394,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -28.939,216962): medv(A) :- zn(A, 0).  [covers 265,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.767,843626 (regressionFit = 31.767,843625, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 22).  [covers 9,0/394,0 pos, 0,0/0,0 neg]
%     Score = -29.465,636513 (regressionFit = 29.465,636512, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 49,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.296,444166 (regressionFit = 31.296,444165, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 51,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.692,435266 (regressionFit = 31.692,435265, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 48,0/394,0 pos, 0,0/0,0 neg]
%     Score = -30.331,554273 (regressionFit = 30.331,554272, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/394,0 pos, 0,0/0,0 neg]
%     Score = -30.775,428010 (regressionFit = 30.775,428009, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 48,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.189,387511 (regressionFit = 31.189,387510, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 359,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.737,218546 (regressionFit = 31.737,218545, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 43,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.764,973257 (regressionFit = 31.764,973256, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 50,0/394,0 pos, 0,0/0,0 neg]
%     Score = -30.960,045247 (regressionFit = 30.960,045246, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 48,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.501,057172 (regressionFit = 31.501,057171, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 48,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.488,190612 (regressionFit = 31.488,190611, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 36,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.428,901505 (regressionFit = 31.428,901504, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 38,0/394,0 pos, 0,0/0,0 neg]
%     Score = -17.242,866699 (regressionFit = 17.242,866698, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 47,0/394,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -17.242,866699): medv(A) :- rm(A, 3).  [covers 47,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.059,485266 (regressionFit = 31.059,485265, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 36,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.599,099963 (regressionFit = 31.599,099962, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 38,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.751,533376 (regressionFit = 31.751,533375, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 35,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.771,931902 (regressionFit = 31.771,931901, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 37,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.216,487218 (regressionFit = 31.216,487217, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 49,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.766,678908 (regressionFit = 31.766,678907, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 46,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.751,493394 (regressionFit = 31.751,493393, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 43,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.301,701783 (regressionFit = 31.301,701782, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 30,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.304,698432 (regressionFit = 31.304,698431, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 32,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.545,455336 (regressionFit = 31.545,455335, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 45,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.771,610942 (regressionFit = 31.771,610941, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 46,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.539,134341 (regressionFit = 31.539,134340, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 50,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.665,671440 (regressionFit = 31.665,671439, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 31,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.570,181295 (regressionFit = 31.570,181294, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/394,0 pos, 0,0/0,0 neg]
%     Score = -30.908,563767 (regressionFit = 30.908,563766, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 24,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.633,040461 (regressionFit = 31.633,040460, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 16,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.630,298112 (regressionFit = 31.630,298111, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 23,0/394,0 pos, 0,0/0,0 neg]
%     Score = -30.775,428010 (regressionFit = 30.775,428009, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 48,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.782,245105 (regressionFit = 31.782,245104, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 296).  [covers 8,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.784,672887 (regressionFit = 31.784,672886, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 39,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.767,843626 (regressionFit = 31.767,843625, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 330).  [covers 9,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.754,322488 (regressionFit = 31.754,322487, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 287).  [covers 8,0/394,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 242).  [covers 2,0/394,0 pos, 0,0/0,0 neg]
%     Score = -30.775,428010 (regressionFit = 30.775,428009, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 48,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.297,922935 (regressionFit = 31.297,922934, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 48,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.719,283663 (regressionFit = 31.719,283662, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 42,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.519,631408 (regressionFit = 31.519,631407, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 47,0/394,0 pos, 0,0/0,0 neg]
%     Score = -30.581,847374 (regressionFit = 30.581,847372, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 55,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.782,050734 (regressionFit = 31.782,050733, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 45,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.218,321183 (regressionFit = 31.218,321182, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 45,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.742,286367 (regressionFit = 31.742,286366, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 82,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.474,051108 (regressionFit = 31.474,051107, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 38,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.491,603707 (regressionFit = 31.491,603706, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 43,0/394,0 pos, 0,0/0,0 neg]
%     Score = -31.767,659246 (regressionFit = 31.767,659245, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/394,0 pos, 0,0/0,0 neg]
%     Score = -18.784,413354 (regressionFit = 18.784,413353, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 51,0/394,0 pos, 0,0/0,0 neg]
%     Score = -30.778,879537 (regressionFit = 30.778,879536, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 49,0/394,0 pos, 0,0/0,0 neg]
%     Score = -30.988,552685 (regressionFit = 30.988,552684, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/394,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3).  [covers 47,0/394,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3).  [covers 47,0/394,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -80,672.
% Will extend: medv(A) :- rm(A, 3).  [covers 47,0/394,0 pos, 0,0/0,0 neg]
Comparing variance: 53.93967406065983 to score=0.0025 #egs=47.0
Comparing variance: 42.38530840717846 to score=0.0025 #egs=347.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 47,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-53,939674)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 47,0/394,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -53,939674) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 347,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-42,385308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -42,385308) into position #2 in the search queue (new size=3).

% Time for loop #2: 160 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      medv(A) :- rm(A, 3).  [covers 47,0/394,0 pos, 0,0/0,0 neg]
% This clause covers 47 positive examples, of which 47 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3).  [covers 47,0/47,0 pos, 0,0/0,0 neg]'
%     Score = -17.242,866699 (regressionFit = 17.242,866698, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 47,0/47,0 pos, 0,0/0,0 neg]

% Have these 5 positive seeds: 1 18 19 43 46
% Gleaner: New best node found (score = -17.242,866699): medv(A) :- rm(A, 3).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.456,664002 (regressionFit = 2.456,664000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 5).  [covers 7,0/47,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.456,664002): medv(A) :- rm(A, 3), crim(A, 5).  [covers 7,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.533,954569 (regressionFit = 2.533,954567, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 7).  [covers 14,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.473,159245 (regressionFit = 2.473,159243, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 1).  [covers 10,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.419,884433 (regressionFit = 2.419,884431, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 2).  [covers 6,0/47,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.419,884433): medv(A) :- rm(A, 3), crim(A, 2).  [covers 6,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.532,249632 (regressionFit = 2.532,249630, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 0).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 35).  [covers 1,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.181,861863 (regressionFit = 2.181,861860, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 9).  [covers 4,0/47,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.181,861863): medv(A) :- rm(A, 3), indus(A, 9).  [covers 4,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.464,508097 (regressionFit = 2.464,508095, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 2).  [covers 12,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.535,014023 (regressionFit = 2.535,014021, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 1).  [covers 15,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.535,064002 (regressionFit = 2.535,064000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 0).  [covers 40,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.105,250287 (regressionFit = 2.105,250285, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 7).  [covers 6,0/47,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.105,250287): medv(A) :- rm(A, 3), nox(A, 7).  [covers 6,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.526,188029 (regressionFit = 2.526,188027, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 4).  [covers 10,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.453,924188 (regressionFit = 2.453,924186, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 5).  [covers 4,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.486,978079 (regressionFit = 2.486,978077, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 2).  [covers 8,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.459,228945 (regressionFit = 2.459,228943, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 9).  [covers 6,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.423,608335 (regressionFit = 2.423,608333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 2).  [covers 6,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.496,481764 (regressionFit = 2.496,481762, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 10).  [covers 5,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.336,824002 (regressionFit = 2.336,824000, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), age(A, 3).  [covers 7,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.429,328457 (regressionFit = 2.429,328455, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 8).  [covers 6,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.462,364573 (regressionFit = 2.462,364571, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 8).  [covers 7,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.500,875908 (regressionFit = 2.500,875906, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 4).  [covers 9,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.418,726281 (regressionFit = 2.418,726279, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 5).  [covers 4,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.400,550845 (regressionFit = 2.400,550843, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 5).  [covers 17,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.531,454739 (regressionFit = 2.531,454737, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 8).  [covers 9,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 1).  [covers 2,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.417,514038 (regressionFit = 2.417,514036, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 2).  [covers 7,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.181,861863 (regressionFit = 2.181,861860, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 403).  [covers 4,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.531,454739 (regressionFit = 2.531,454737, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 307).  [covers 9,0/47,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 284).  [covers 1,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.516,023941 (regressionFit = 2.516,023939, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 276).  [covers 3,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.209,308669 (regressionFit = 2.209,308667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 9).  [covers 20,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.531,454739 (regressionFit = 2.531,454737, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 6).  [covers 9,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.526,680490 (regressionFit = 2.526,680488, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 1).  [covers 6,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.503,776895 (regressionFit = 2.503,776893, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 2).  [covers 7,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.485,358288 (regressionFit = 2.485,358286, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 8).  [covers 7,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.532,798665 (regressionFit = 2.532,798663, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), b(A, 3).  [covers 4,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.516,038323 (regressionFit = 2.516,038321, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 2).  [covers 7,0/47,0 pos, 0,0/0,0 neg]
%     Score = -1.635,654892 (regressionFit = 1.635,654890, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/47,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.635,654892): medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.446,321669 (regressionFit = 2.446,321667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 9).  [covers 8,0/47,0 pos, 0,0/0,0 neg]
%     Score = -2.174,968189 (regressionFit = 2.174,968187, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 1).  [covers 9,0/47,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/47,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/47,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -53,940.
% Will extend: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/47,0 pos, 0,0/0,0 neg]
Comparing variance: 26.586286982248566 to score=0.0025 #egs=26.0
Comparing variance: 44.97197278911543 to score=0.0025 #egs=21.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 26,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-26,586287)
%         ILP node to extend: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/47,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -26,586287) into position #2 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 21,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-44,971973)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 47,0/47,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -44,971973) into position #1 in the search queue (new size=4).

% Time for loop #3: 55 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/47,0 pos, 0,0/0,0 neg]
% This clause covers 26 positive examples, of which 26 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3).  [covers 47,0/21,0 pos, 0,0/0,0 neg]'
%     Score = -17.242,866699 (regressionFit = 17.242,866698, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 21,0/21,0 pos, 0,0/0,0 neg]

% Have these 7 positive seeds: 0 9 11 13 15 17 19
% Gleaner: New best node found (score = -17.242,866699): medv(A) :- rm(A, 3).  [covers 21,0/21,0 pos, 0,0/0,0 neg]
%     Score = -941,106326 (regressionFit = 941,106324, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 2).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -941,106326): medv(A) :- rm(A, 3), crim(A, 2).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -940,982859 (regressionFit = 940,982857, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 7).  [covers 7,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -940,982859): medv(A) :- rm(A, 3), crim(A, 7).  [covers 7,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 4).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 6).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 1).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -772,325669 (regressionFit = 772,325667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 0).  [covers 6,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -772,325669): medv(A) :- rm(A, 3), zn(A, 0).  [covers 6,0/21,0 pos, 0,0/0,0 neg]
%     Score = -646,925558 (regressionFit = 646,925556, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 20).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -646,925558): medv(A) :- rm(A, 3), zn(A, 20).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 33).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 35).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -932,790669 (regressionFit = 932,790667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 1).  [covers 6,0/21,0 pos, 0,0/0,0 neg]
%     Score = -651,471391 (regressionFit = 651,471389, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 4).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -863,889502 (regressionFit = 863,889500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 2).  [covers 5,0/21,0 pos, 0,0/0,0 neg]
%     Score = -816,605002 (regressionFit = 816,605000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 0).  [covers 18,0/21,0 pos, 0,0/0,0 neg]
%     Score = -816,605002 (regressionFit = 816,605000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 1).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -926,277780 (regressionFit = 926,277778, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 2).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -797,317145 (regressionFit = 797,317143, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 8).  [covers 7,0/21,0 pos, 0,0/0,0 neg]
%     Score = -927,128002 (regressionFit = 927,128000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 4).  [covers 5,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 5).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 1).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -850,142796 (regressionFit = 850,142794, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 2).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -591,002355 (regressionFit = 591,002353, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -591,002355): medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -920,339002 (regressionFit = 920,339000, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), age(A, 3).  [covers 6,0/21,0 pos, 0,0/0,0 neg]
%     Score = -889,076113 (regressionFit = 889,076111, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 4).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -944,302780 (regressionFit = 944,302778, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 8).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 7).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -944,402355 (regressionFit = 944,402353, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 9).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -932,091113 (regressionFit = 932,091111, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 1).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 5).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 2).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -651,471391 (regressionFit = 651,471389, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 5).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 3).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 7).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 1).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 276).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -620,410771 (regressionFit = 620,410769, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 223).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 222).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 284).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -942,480002 (regressionFit = 942,480000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 2).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -655,982224 (regressionFit = 655,982222, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 9).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -939,005002 (regressionFit = 939,005000, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 3).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 1).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -925,742780 (regressionFit = 925,742778, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 1).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -912,711113 (regressionFit = 912,711111, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 2).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -723,782796 (regressionFit = 723,782794, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 5).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -904,790002 (regressionFit = 904,790000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 6).  [covers 5,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), b(A, 3).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -933,804724 (regressionFit = 933,804722, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 1).  [covers 9,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 8).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 2).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -901,031925 (regressionFit = 901,031923, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 9).  [covers 8,0/21,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/21,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/21,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -44,972.
% Will extend: medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
Comparing variance: 28.66500000000042 to score=0.0025 #egs=4.0
Comparing variance: 28.02013840830413 to score=0.0025 #egs=17.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 4,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 17,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-28,020138)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 21,0/21,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -28,020138) into position #2 in the search queue (new size=4).

% Time for loop #4: 31 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 7 positive seeds: 52 54 112 130 245 246 279

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 347,0/347,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 347,0/347,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -14.576,202908 (regressionFit = 14.576,202907, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 27,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -14.576,202908): medv(A) :- crim(A, 8).  [covers 27,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.642,604168 (regressionFit = 14.642,604167, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 40,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.701,355713 (regressionFit = 14.701,355712, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 45,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.222,722652 (regressionFit = 14.222,722651, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 39,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -14.222,722652): medv(A) :- crim(A, 1).  [covers 39,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.579,676802 (regressionFit = 13.579,676801, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 245,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -13.579,676802): medv(A) :- zn(A, 0).  [covers 245,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.707,371790 (regressionFit = 14.707,371789, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 30).  [covers 6,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.487,422500 (regressionFit = 14.487,422499, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 25,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.671,392445 (regressionFit = 14.671,392444, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.693,013541 (regressionFit = 14.693,013540, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 47,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.468,593499 (regressionFit = 14.468,593498, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 47,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.688,288220 (regressionFit = 13.688,288219, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 33,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.422,962219 (regressionFit = 14.422,962218, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 319,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.134,904172 (regressionFit = 13.134,904171, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 41,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -13.134,904172): medv(A) :- nox(A, 9).  [covers 41,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.318,658762 (regressionFit = 14.318,658761, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 38,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.533,394452 (regressionFit = 14.533,394451, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 46,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.505,447393 (regressionFit = 14.505,447392, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 40,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.242,422223 (regressionFit = 14.242,422222, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 30,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.698,017381 (regressionFit = 13.698,017380, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 41,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.668,412099 (regressionFit = 14.668,412098, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 38,0/347,0 pos, 0,0/0,0 neg]
%     Score = -11.286,513310 (regressionFit = 11.286,513309, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 43,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11.286,513310): medv(A) :- rm(A, 4).  [covers 43,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.605,970353 (regressionFit = 14.605,970352, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 31,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.935,772826 (regressionFit = 13.935,772825, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 35,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.676,109569 (regressionFit = 14.676,109568, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 39,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.668,681177 (regressionFit = 14.668,681176, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 38,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.680,765939 (regressionFit = 14.680,765938, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 29,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.703,408467 (regressionFit = 14.703,408466, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 31,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.686,325132 (regressionFit = 14.686,325131, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 45,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.673,935430 (regressionFit = 14.673,935429, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 45,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.119,598022 (regressionFit = 14.119,598021, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 21,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.698,863565 (regressionFit = 14.698,863564, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 95,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.500,474950 (regressionFit = 14.500,474949, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 97,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.688,049439 (regressionFit = 14.688,049438, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 18,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.468,593499 (regressionFit = 14.468,593498, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 47,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.188,845063 (regressionFit = 14.188,845062, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 33,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.487,422500 (regressionFit = 14.487,422499, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 25,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.699,827590 (regressionFit = 14.699,827589, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 277).  [covers 11,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.707,516522 (regressionFit = 14.707,516521, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 300).  [covers 7,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.468,593499 (regressionFit = 14.468,593498, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 47,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.322,609200 (regressionFit = 14.322,609199, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 222).  [covers 5,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.634,393936 (regressionFit = 14.634,393935, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 30,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.665,733806 (regressionFit = 14.665,733805, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 48,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.488,698280 (regressionFit = 14.488,698279, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 39,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.416,438636 (regressionFit = 14.416,438635, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 54,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.545,304256 (regressionFit = 14.545,304255, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 31,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.657,106899 (regressionFit = 14.657,106898, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 37,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.698,403933 (regressionFit = 14.698,403932, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 41,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.705,199478 (regressionFit = 14.705,199477, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 37,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.171,414129 (regressionFit = 13.171,414128, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 25,0/347,0 pos, 0,0/0,0 neg]
%     Score = -13.785,261427 (regressionFit = 13.785,261426, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 25,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.449,104545 (regressionFit = 14.449,104544, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 43,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.690,998290 (regressionFit = 14.690,998289, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 42,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.405,420554 (regressionFit = 14.405,420553, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 38,0/347,0 pos, 0,0/0,0 neg]
%     Score = -14.464,335251 (regressionFit = 14.464,335250, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 34,0/347,0 pos, 0,0/0,0 neg]
%     Score = -11.225,733036 (regressionFit = 11.225,733035, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 25,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11.225,733036): medv(A) :- lstat(A, 3).  [covers 25,0/347,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3).  [covers 25,0/347,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3).  [covers 25,0/347,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -42,385.
% Will extend: medv(A) :- lstat(A, 3).  [covers 25,0/347,0 pos, 0,0/0,0 neg]
Comparing variance: 51.9311040000002 to score=0.0025 #egs=25.0
Comparing variance: 30.83060694031874 to score=0.0025 #egs=322.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 25,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-51,931104)
%         ILP node to extend: medv(A) :- lstat(A, 3).  [covers 25,0/347,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -51,931104) into position #1 in the search queue (new size=4).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 322,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-30,830607)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -30,830607) into position #2 in the search queue (new size=5).

% Time for loop #5: 140 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #5, the best clause found is:
%      medv(A) :- lstat(A, 3).  [covers 25,0/347,0 pos, 0,0/0,0 neg]
% This clause covers 25 positive examples, of which 25 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- lstat(A, 3).  [covers 25,0/25,0 pos, 0,0/0,0 neg]'
%     Score = -11.225,733036 (regressionFit = 11.225,733035, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 25,0/25,0 pos, 0,0/0,0 neg]

% Have these 6 positive seeds: 0 6 7 12 20 21
% Gleaner: New best node found (score = -11.225,733036): medv(A) :- lstat(A, 3).  [covers 25,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 5).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 4).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.296,750305 (regressionFit = 1.296,750303, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 2).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.296,750305): medv(A) :- lstat(A, 3), crim(A, 2).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.178,559938 (regressionFit = 1.178,559936, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), crim(A, 1).  [covers 12,0/25,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.178,559938): medv(A) :- lstat(A, 3), crim(A, 1).  [covers 12,0/25,0 pos, 0,0/0,0 neg]
%     Score = -922,002145 (regressionFit = 922,002143, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 0).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -922,002145): medv(A) :- lstat(A, 3), zn(A, 0).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 22).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.247,237578 (regressionFit = 1.247,237576, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 80).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), zn(A, 75).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 9).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.237,042383 (regressionFit = 1.237,042381, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 5).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.212,832066 (regressionFit = 1.212,832063, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), indus(A, 4).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.013,077026 (regressionFit = 1.013,077024, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), chas(A, 0).  [covers 21,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 7).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.214,738002 (regressionFit = 1.214,738000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 5).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.215,753458 (regressionFit = 1.215,753456, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), nox(A, 6).  [covers 8,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.265,797335 (regressionFit = 1.265,797333, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 4).  [covers 15,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 2).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.272,708573 (regressionFit = 1.272,708571, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rm(A, 1).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -680,280002 (regressionFit = 680,280000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 5).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -680,280002): medv(A) :- lstat(A, 3), age(A, 5).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.134,394933 (regressionFit = 1.134,394931, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 10).  [covers 9,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.274,855002 (regressionFit = 1.274,855000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), age(A, 8).  [covers 8,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 9).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.227,886581 (regressionFit = 1.227,886579, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 5).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.291,939288 (regressionFit = 1.291,939286, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), dis(A, 2).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.296,997546 (regressionFit = 1.296,997544, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 5).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 7).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.165,673256 (regressionFit = 1.165,673254, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 4).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.297,868002 (regressionFit = 1.297,868000, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), rad(A, 3).  [covers 5,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 403).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 330).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 245).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), tax(A, 252).  [covers 2,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 9).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.237,042383 (regressionFit = 1.237,042381, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 5).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.250,697026 (regressionFit = 1.250,697024, penalties=2.0300000000000005E-6) for clause:  medv(A) :- lstat(A, 3), ptratio(A, 3).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 9).  [covers 1,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.186,773216 (regressionFit = 1.186,773214, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 8).  [covers 4,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.237,000265 (regressionFit = 1.237,000263, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 5).  [covers 6,0/25,0 pos, 0,0/0,0 neg]
%     Score = -1.183,496113 (regressionFit = 1.183,496111, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 1).  [covers 7,0/25,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- lstat(A, 3), b(A, 4).  [covers 2,0/25,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3), age(A, 5).  [covers 3,0/25,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 3), age(A, 5).  [covers 3,0/25,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -51,931.
% Will extend: medv(A) :- lstat(A, 3), age(A, 5).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
Comparing variance: 16.81999999999971 to score=0.0025 #egs=3.0
Comparing variance: 28.62818181818197 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 3,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 22,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-28,628182)
%         ILP node to extend: medv(A) :- lstat(A, 3).  [covers 25,0/25,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -28,628182) into position #2 in the search queue (new size=5).

% Time for loop #6: 28 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      medv(A) :- lstat(A, 3), age(A, 5).  [covers 3,0/25,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 4 positive seeds: 139 167 298 304

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 322,0/322,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 322,0/322,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -9.695,622881 (regressionFit = 9.695,622880, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 41,0/322,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.695,622881): medv(A) :- crim(A, 5).  [covers 41,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.848,079175 (regressionFit = 9.848,079174, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 27,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.919,886961 (regressionFit = 9.919,886960, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 39,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.334,659906 (regressionFit = 9.334,659905, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 42,0/322,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.334,659906): medv(A) :- crim(A, 2).  [covers 42,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.295,519203 (regressionFit = 9.295,519202, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 238,0/322,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.295,519203): medv(A) :- zn(A, 0).  [covers 238,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.826,221715 (regressionFit = 9.826,221714, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 34).  [covers 3,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.684,835939 (regressionFit = 9.684,835938, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.839,328461 (regressionFit = 9.839,328460, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 35,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.926,975987 (regressionFit = 9.926,975986, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 35,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.870,595349 (regressionFit = 9.870,595348, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 7).  [covers 17,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.885,942719 (regressionFit = 9.885,942718, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 298,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.607,603878 (regressionFit = 9.607,603877, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 46,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.743,974003 (regressionFit = 9.743,974002, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 41,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.752,112717 (regressionFit = 9.752,112716, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 32,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.257,054781 (regressionFit = 9.257,054780, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 41,0/322,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.257,054781): medv(A) :- rm(A, 7).  [covers 41,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.389,379394 (regressionFit = 9.389,379393, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 34,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.886,633465 (regressionFit = 9.886,633464, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 37,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.848,612287 (regressionFit = 9.848,612286, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 42,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.914,249967 (regressionFit = 9.914,249966, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 28,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.889,911541 (regressionFit = 9.889,911540, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 36,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.480,107416 (regressionFit = 9.480,107415, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 35,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.721,617938 (regressionFit = 9.721,617937, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 35,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.924,298291 (regressionFit = 9.924,298290, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 43,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.886,136967 (regressionFit = 9.886,136966, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 36,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.789,357544 (regressionFit = 9.789,357543, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 90,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.788,898797 (regressionFit = 9.788,898796, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 11,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.905,672600 (regressionFit = 9.905,672599, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 89,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.794,381063 (regressionFit = 9.794,381062, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 29,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.752,878460 (regressionFit = 9.752,878459, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 329).  [covers 4,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.916,558822 (regressionFit = 9.916,558821, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 305).  [covers 4,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.788,732127 (regressionFit = 9.788,732126, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 398).  [covers 9,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.583,843760 (regressionFit = 9.583,843759, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 32,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.511,878465 (regressionFit = 9.511,878464, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 34,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.907,812246 (regressionFit = 9.907,812245, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 37,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.867,636211 (regressionFit = 9.867,636210, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 44,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.902,669164 (regressionFit = 9.902,669163, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 36,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.913,033914 (regressionFit = 9.913,033913, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 23,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.917,324786 (regressionFit = 9.917,324784, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 32,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.361,256505 (regressionFit = 9.361,256504, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 33,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.426,233441 (regressionFit = 9.426,233440, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 43,0/322,0 pos, 0,0/0,0 neg]
%     Score = -9.386,266469 (regressionFit = 9.386,266468, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 38,0/322,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 7).  [covers 41,0/322,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 7).  [covers 41,0/322,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -30,831.
% Will extend: medv(A) :- rm(A, 7).  [covers 41,0/322,0 pos, 0,0/0,0 neg]
Comparing variance: 12.781165972635302 to score=0.0025 #egs=41.0
Comparing variance: 31.078387811704367 to score=0.0025 #egs=281.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 41,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-12,781166)
%         ILP node to extend: medv(A) :- rm(A, 7).  [covers 41,0/322,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -12,781166) into position #4 in the search queue (new size=5).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 281,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-31,078388)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 4 and with score = -31,078388) into position #1 in the search queue (new size=6).

% Time for loop #7: 102 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      medv(A) :- rm(A, 7).  [covers 41,0/322,0 pos, 0,0/0,0 neg]
% This clause covers 41 positive examples, of which 41 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 7 positive seeds: 27 91 104 130 133 156 193

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 281,0/281,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 281,0/281,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -8.731,295732 (regressionFit = 8.731,295731, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 28,0/281,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.731,295732): medv(A) :- crim(A, 4).  [covers 28,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.721,955799 (regressionFit = 8.721,955798, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 28,0/281,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.721,955799): medv(A) :- crim(A, 7).  [covers 28,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.626,152389 (regressionFit = 8.626,152388, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 32,0/281,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.626,152389): medv(A) :- crim(A, 5).  [covers 32,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.697,539451 (regressionFit = 8.697,539450, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 27,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.659,834680 (regressionFit = 8.659,834679, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 9).  [covers 14,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.184,578495 (regressionFit = 8.184,578494, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 203,0/281,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.184,578495): medv(A) :- zn(A, 0).  [covers 203,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.709,588531 (regressionFit = 8.709,588530, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 80).  [covers 7,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.553,305282 (regressionFit = 8.553,305281, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 16,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.726,045053 (regressionFit = 8.726,045052, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 30,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.641,139830 (regressionFit = 8.641,139829, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 30,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.586,424463 (regressionFit = 8.586,424462, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 37,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.064,542206 (regressionFit = 8.064,542205, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 27,0/281,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.064,542206): medv(A) :- indus(A, 1).  [covers 27,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.251,856754 (regressionFit = 8.251,856753, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 36,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.709,570356 (regressionFit = 8.709,570355, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 259,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.709,570356 (regressionFit = 8.709,570355, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 22,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.650,456858 (regressionFit = 8.650,456857, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 21,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.333,407290 (regressionFit = 8.333,407289, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 32,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.720,934577 (regressionFit = 8.720,934575, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 38,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.516,215665 (regressionFit = 8.516,215664, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 36,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.596,337935 (regressionFit = 8.596,337934, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 30,0/281,0 pos, 0,0/0,0 neg]
%     Score = -7.630,991151 (regressionFit = 7.630,991150, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 35,0/281,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7.630,991151): medv(A) :- nox(A, 9).  [covers 35,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.612,158277 (regressionFit = 8.612,158276, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 36,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.072,742452 (regressionFit = 8.072,742451, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 29,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.334,185598 (regressionFit = 8.334,185597, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 34,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.724,888548 (regressionFit = 8.724,888547, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 37,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.728,637601 (regressionFit = 8.728,637600, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 25,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.414,177172 (regressionFit = 8.414,177171, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 35,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.729,054962 (regressionFit = 8.729,054961, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 24,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.509,919449 (regressionFit = 8.509,919448, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 30,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.716,015161 (regressionFit = 8.716,015160, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 26,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.282,332887 (regressionFit = 8.282,332886, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 24,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.291,629235 (regressionFit = 8.291,629234, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 29,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.606,873549 (regressionFit = 8.606,873548, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 31,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.733,019203 (regressionFit = 8.733,019202, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 36,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.679,816666 (regressionFit = 8.679,816665, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 34,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.714,860500 (regressionFit = 8.714,860499, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 15,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.664,024953 (regressionFit = 8.664,024952, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 72,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.663,631135 (regressionFit = 8.663,631134, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 13,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.707,875031 (regressionFit = 8.707,875030, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 11,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.251,856754 (regressionFit = 8.251,856753, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 36,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.711,220674 (regressionFit = 8.711,220673, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 188).  [covers 6,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.717,107517 (regressionFit = 8.717,107516, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 277).  [covers 9,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.686,877790 (regressionFit = 8.686,877789, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 22,0/281,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 241).  [covers 1,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.710,439056 (regressionFit = 8.710,439055, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 10,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.251,856754 (regressionFit = 8.251,856753, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 36,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.715,468338 (regressionFit = 8.715,468337, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 33,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.706,331817 (regressionFit = 8.706,331816, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 40,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.599,471618 (regressionFit = 8.599,471617, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 34,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.509,394502 (regressionFit = 8.509,394501, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 24,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.555,941858 (regressionFit = 8.555,941857, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 31,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.215,828232 (regressionFit = 8.215,828231, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 43,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.732,818306 (regressionFit = 8.732,818305, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 28,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.732,348091 (regressionFit = 8.732,348090, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 27,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.707,733976 (regressionFit = 8.707,733975, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 25,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.732,196538 (regressionFit = 8.732,196537, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 31,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.634,828200 (regressionFit = 8.634,828199, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 26,0/281,0 pos, 0,0/0,0 neg]
%     Score = -7.405,167672 (regressionFit = 7.405,167671, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 22,0/281,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7.405,167672): medv(A) :- lstat(A, 6).  [covers 22,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.362,873158 (regressionFit = 8.362,873157, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 42,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.123,785729 (regressionFit = 8.123,785728, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 23,0/281,0 pos, 0,0/0,0 neg]
%     Score = -8.655,925778 (regressionFit = 8.655,925777, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 36,0/281,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 6).  [covers 22,0/281,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 6).  [covers 22,0/281,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -31,078.
% Will extend: medv(A) :- lstat(A, 6).  [covers 22,0/281,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #8: 150 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      medv(A) :- lstat(A, 6).  [covers 22,0/281,0 pos, 0,0/0,0 neg]
% This clause covers 22 positive examples, of which 22 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (medv(A) :- age(A, 5))
Created a leaf under (medv(A) :- age(A, 9))
Created a leaf under (medv(A) :- lstat(A, 3))
Created a leaf under (medv(A) :- rm(A, 7))
Created a leaf under (medv(A) :- nox(A, 10))

%%%%%  WILL-Produced Tree #10 @ 14:10:11 10/20/22.  %%%%%


% FOR medv(A):
%   if ( nox(A, 10) )
%   then return 9.566666666666666;  // std dev = 3,388, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   else if ( rm(A, 3) )
%   | then if ( lstat(A, 3) )
%   | | then return 43.94230769230769;  // std dev = 5,156, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( age(A, 9) )
%   | | | then return 43.599999999999994;  // std dev = 10,708, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 33.15294117647059;  // std dev = 5,293, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( lstat(A, 3) )
%   | | then if ( age(A, 5) )
%   | | | then return 46.1;  // std dev = 7,104, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 30.799999999999997;  // std dev = 5,351, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( rm(A, 7) )
%   | | | then return 16.60731707317073;  // std dev = 3,575, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else if ( lstat(A, 6) )
%   | | | | then return 13.477272727272727;  // std dev = 14,781, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | | else return 21.569498069498074;  // std dev = 84,774, 259,000 (wgt'ed) examples reached here.  /* #pos=259 */


% Clauses:

medv(A, 9.566666666666666) :- 
     nox(A, 10), 
     !. // Clause #1.

medv(A, 43.94230769230769) :- 
     rm(A, 3), 
     lstat(A, 3), 
     !. // Clause #2.

medv(A, 43.599999999999994) :- 
     rm(A, 3), 
     age(A, 9), 
     !. // Clause #3.

medv(A, 33.15294117647059) :- 
     rm(A, 3), 
     !. // Clause #4.

medv(A, 46.1) :- 
     lstat(A, 3), 
     age(A, 5), 
     !. // Clause #5.

medv(A, 30.799999999999997) :- 
     lstat(A, 3), 
     !. // Clause #6.

medv(A, 16.60731707317073) :- 
     rm(A, 7), 
     !. // Clause #7.

medv(A, 13.477272727272727) :- 
     lstat(A, 6), 
     !. // Clause #8.

medv(A, 21.569498069498074) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_medv(a, 9.566666666666666) :-  /* #pos=42 */ 
   nox(a, 10),
   !. // Flattened version of clause #1.

flattened_medv(a, 43.94230769230769) :-  /* #pos=26 */ 
   rm(a, 3),
   lstat(a, 3),
   !. // Flattened version of clause #2.

flattened_medv(a, 43.599999999999994) :-  /* #pos=4 */ 
   rm(a, 3),
   age(a, 9),
   !. // Flattened version of clause #3.

flattened_medv(a, 33.15294117647059) :-  /* #pos=17 */ 
   rm(a, 3),
   !. // Flattened version of clause #4.

flattened_medv(a, 46.1) :-  /* #pos=3 */ 
   lstat(a, 3),
   age(a, 5),
   !. // Flattened version of clause #5.

flattened_medv(a, 30.799999999999997) :-  /* #pos=22 */ 
   lstat(a, 3),
   !. // Flattened version of clause #6.

flattened_medv(a, 16.60731707317073) :-  /* #pos=41 */ 
   rm(a, 7),
   !. // Flattened version of clause #7.

flattened_medv(a, 13.477272727272727) :-  /* #pos=22 */ 
   lstat(a, 6),
   !. // Flattened version of clause #8.

flattened_medv(underscore, 21.569498069498074) :-  /* #pos=259 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   rm(a, 3)
%   age(a, 5)
%   rm(a, 7)
%   lstat(a, 6)
%   age(a, 9)
%   lstat(a, 3)
%   nox(a, 10)

% Saving model in: data/boston_housing/train/models/bRDNs/medv.model.ckpt
% Saving model in: data/boston_housing/train/models/bRDNs/medv.model


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for medv.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).
stepLength_tree2(1.0).
stepLength_tree3(1.0).
stepLength_tree4(1.0).
stepLength_tree5(1.0).
stepLength_tree6(1.0).
stepLength_tree7(1.0).
stepLength_tree8(1.0).
stepLength_tree9(1.0).
stepLength_tree10(1.0).

logPrior(0.0).
medv(A, Total) :- // A general accessor. 
   medv(A, 1000000, Total), !.
medv(A, Total) :- waitHere("This should not fail", medv(A, Total)).

medv(A, TreesToUse, Total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(LogPrior),
   getScore_medv_tree1(A, TreesToUse, Total1),
   getScore_medv_tree2(A, TreesToUse, Total2),
   getScore_medv_tree3(A, TreesToUse, Total3),
   getScore_medv_tree4(A, TreesToUse, Total4),
   getScore_medv_tree5(A, TreesToUse, Total5),
   getScore_medv_tree6(A, TreesToUse, Total6),
   getScore_medv_tree7(A, TreesToUse, Total7),
   getScore_medv_tree8(A, TreesToUse, Total8),
   getScore_medv_tree9(A, TreesToUse, Total9),
   getScore_medv_tree10(A, TreesToUse, Total10),
   Total is LogPrior + Total1 + Total2 + Total3 + Total4 + Total5 + Total6 + Total7 + Total8 + Total9 + Total10,
   !.
medv(A, TreesToUse, Total) :- waitHere("This should not fail", medv(A, TreesToUse, Total)).

getScore_medv_tree1(A, TreesToUse, 0.0) :- 1 > TreesToUse, !.
getScore_medv_tree1(A, TreesToUse, Total1) :- medv_tree1(A, Total), stepLength_tree1(StepLen), Total1 is Total * StepLen.

getScore_medv_tree2(A, TreesToUse, 0.0) :- 2 > TreesToUse, !.
getScore_medv_tree2(A, TreesToUse, Total2) :- medv_tree2(A, Total), stepLength_tree2(StepLen), Total2 is Total * StepLen.

getScore_medv_tree3(A, TreesToUse, 0.0) :- 3 > TreesToUse, !.
getScore_medv_tree3(A, TreesToUse, Total3) :- medv_tree3(A, Total), stepLength_tree3(StepLen), Total3 is Total * StepLen.

getScore_medv_tree4(A, TreesToUse, 0.0) :- 4 > TreesToUse, !.
getScore_medv_tree4(A, TreesToUse, Total4) :- medv_tree4(A, Total), stepLength_tree4(StepLen), Total4 is Total * StepLen.

getScore_medv_tree5(A, TreesToUse, 0.0) :- 5 > TreesToUse, !.
getScore_medv_tree5(A, TreesToUse, Total5) :- medv_tree5(A, Total), stepLength_tree5(StepLen), Total5 is Total * StepLen.

getScore_medv_tree6(A, TreesToUse, 0.0) :- 6 > TreesToUse, !.
getScore_medv_tree6(A, TreesToUse, Total6) :- medv_tree6(A, Total), stepLength_tree6(StepLen), Total6 is Total * StepLen.

getScore_medv_tree7(A, TreesToUse, 0.0) :- 7 > TreesToUse, !.
getScore_medv_tree7(A, TreesToUse, Total7) :- medv_tree7(A, Total), stepLength_tree7(StepLen), Total7 is Total * StepLen.

getScore_medv_tree8(A, TreesToUse, 0.0) :- 8 > TreesToUse, !.
getScore_medv_tree8(A, TreesToUse, Total8) :- medv_tree8(A, Total), stepLength_tree8(StepLen), Total8 is Total * StepLen.

getScore_medv_tree9(A, TreesToUse, 0.0) :- 9 > TreesToUse, !.
getScore_medv_tree9(A, TreesToUse, Total9) :- medv_tree9(A, Total), stepLength_tree9(StepLen), Total9 is Total * StepLen.

getScore_medv_tree10(A, TreesToUse, 0.0) :- 10 > TreesToUse, !.
getScore_medv_tree10(A, TreesToUse, Total10) :- medv_tree10(A, Total), stepLength_tree10(StepLen), Total10 is Total * StepLen.

flattenedLiteralsInThisSetOfTrees(medv, 20, [
   crim(a, 2),
   age(a, 5),
   dis(a, 8),
   lstat(a, 6),
   rm(a, 1),
   lstat(a, 9),
   indus(a, 10),
   lstat(a, 3),
   nox(a, 10),
   nox(a, 4),
   zn(a, 0),
   indus(a, 4),
   rm(a, 3),
   lstat(a, 1),
   crim(a, 10),
   rm(a, 7),
   tax(a, 264),
   age(a, 9),
   rm(a, 4),
   chas(a, 0)]).
% Time taken to learn model for 'medv': 10,949 seconds.
% Saving model in: data/boston_housing/train/models/bRDNs/medv.model
cached groundings hit: 0
Misses: 0

% Total learning time (10 trees): 11,129 seconds.

% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

Resetting the LazyGroundNthArgumentClauseIndex.

% Calling ILPouterLoop from createRegressionOuterLooper.

% getInputArgWithDefaultValue: args=[data/boston_housing/test/test_pos.txt, data/boston_housing/test/test_neg.txt, data/boston_housing/test/test_bk.txt, data/boston_housing/test/test_facts.txt]
%  for N=0: args[N]=data/boston_housing/test/test_pos.txt

% getInputArgWithDefaultValue: args=[data/boston_housing/test/test_pos.txt, data/boston_housing/test/test_neg.txt, data/boston_housing/test/test_bk.txt, data/boston_housing/test/test_facts.txt]
%  for N=1: args[N]=data/boston_housing/test/test_neg.txt

% getInputArgWithDefaultValue: args=[data/boston_housing/test/test_pos.txt, data/boston_housing/test/test_neg.txt, data/boston_housing/test/test_bk.txt, data/boston_housing/test/test_facts.txt]
%  for N=2: args[N]=data/boston_housing/test/test_bk.txt

% getInputArgWithDefaultValue: args=[data/boston_housing/test/test_pos.txt, data/boston_housing/test/test_neg.txt, data/boston_housing/test/test_bk.txt, data/boston_housing/test/test_facts.txt]
%  for N=3: args[N]=data/boston_housing/test/test_facts.txt

% Welcome to the WILL ILP/SRL systems.

% Reading background theory from dir: null

% Switching to VarIndicator = uppercase.

***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****

% [ LazyGroundClauseIndex ]  Building full index for mode/1 with 1 assertions.

%  Read the facts.
%  Have read 166 facts.

%  LearnOneClause initialized.

% The outer looper has been created.

% Initializing the ILP inner looper.
% Have read 13 examples from 'data/boston_housing/test' [data/boston_housing/test/test*].

% NEW target:                 medv(A)
%  targetPred:                medv/1
%  targetArgTypes:            signature = [const], types = [+id]
%  targets:                   [medv(A)]
%  targetPredicates:          [medv/1]
%  targetArgSpecs:            [[A[+id]]]
%  variablesInTargets:        [[A]]

% Started collecting constants

% Collecting the types of constants.

%   *** WARNING ***  Constant '10' is already marked as being of types = [varsrim];
%          type = 'varindus' may be added if not already known.
%  PredicateName = 'indus', from 'indus(id433, 10)',
%  which has types = [signature = [const, const], types = [+id, #varindus]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '0' is already marked as being of types = [varzn];
%          type = 'varchas' may be added if not already known.
%  PredicateName = 'chas', from 'chas(id139, 0)',
%  which has types = [signature = [const, const], types = [+id, #varchas]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '8' is already marked as being of types = [varindus];
%          type = 'varnox' may be added if not already known.
%  PredicateName = 'nox', from 'nox(id139, 8)',
%  which has types = [signature = [const, const], types = [+id, #varnox]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '8' is already marked as being of types = [varindus, varnox];
%          type = 'varrm' may be added if not already known.
%  PredicateName = 'rm', from 'rm(id139, 8)',
%  which has types = [signature = [const, const], types = [+id, #varrm]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '5' is already marked as being of types = [varsrim, varindus, varnox, varrm];
%          type = 'varage' may be added if not already known.
%  PredicateName = 'age', from 'age(id139, 5)',
%  which has types = [signature = [const, const], types = [+id, #varage]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '9' is already marked as being of types = [varsrim, varindus, varnox, varage];
%          type = 'vardis' may be added if not already known.
%  PredicateName = 'dis', from 'dis(id139, 9)',
%  which has types = [signature = [const, const], types = [+id, #vardis]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '4' is already marked as being of types = [varsrim, varindus, varrm, varage, vardis];
%          type = 'varrad' may be added if not already known.
%  PredicateName = 'rad', from 'rad(id139, 4)',
%  which has types = [signature = [const, const], types = [+id, #varrad]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '7' is already marked as being of types = [varindus, varnox, varrm, varage, varrad];
%          type = 'varptrat' may be added if not already known.
%  PredicateName = 'ptratio', from 'ptratio(id139, 7)',
%  which has types = [signature = [const, const], types = [+id, #varptrat]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '2' is already marked as being of types = [varnox, varrm, varage, varrad, varptrat];
%          type = 'varb' may be added if not already known.
%  PredicateName = 'b', from 'b(id139, 2)',
%  which has types = [signature = [const, const], types = [+id, #varb]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '5' is already marked as being of types = [varsrim, varindus, varnox, varrm, varage, vardis, varrad, varptrat, varb];
%          type = 'varlstat' may be added if not already known.
%  PredicateName = 'lstat', from 'lstat(id139, 5)',
%  which has types = [signature = [const, const], types = [+id, #varlstat]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

% Looking at the training examples to see if any types of new constants can be inferred.
% Time to collect constants: 5 milliseconds

% Read 13 pos examples and 0 neg examples.
% Time to init learnOneClause: 6 milliseconds
% Old dirdata/boston_housing/train/models/

% Have 13 'raw' positive examples and kept 13.
% Have 0 'raw' negative examples and kept 0.
% No neg ex for medv

% processing backup's for medv
%  POS EX = 13
%  NEG EX = 0

% Memory usage by WILLSetup (just counts # targets?):
%  |backupPosExamples| = 1
%  |backupNegExamples| = 1
%  |predicatesAsFacts| = 0
%  |addedToFactBase|   = 0

% Getting bRDN's target predicates.
% Did not learn a model for 'medv' this run.
%   loadModel (#0): data/boston_housing/train/models/bRDNs/Trees/medvTree0.tree
%   loadModel (#1): data/boston_housing/train/models/bRDNs/Trees/medvTree1.tree
%   loadModel (#2): data/boston_housing/train/models/bRDNs/Trees/medvTree2.tree
%   loadModel (#3): data/boston_housing/train/models/bRDNs/Trees/medvTree3.tree
%   loadModel (#4): data/boston_housing/train/models/bRDNs/Trees/medvTree4.tree
%   loadModel (#5): data/boston_housing/train/models/bRDNs/Trees/medvTree5.tree
%   loadModel (#6): data/boston_housing/train/models/bRDNs/Trees/medvTree6.tree
%   loadModel (#7): data/boston_housing/train/models/bRDNs/Trees/medvTree7.tree
%   loadModel (#8): data/boston_housing/train/models/bRDNs/Trees/medvTree8.tree
%   loadModel (#9): data/boston_housing/train/models/bRDNs/Trees/medvTree9.tree
%  Done loading 10 models.

% for medv |lookupPos| = 13
% for medv |lookupNeg| = 0
% getJointExamples: |pos| = 13, |neg| = 0

% Starting inference in bRDN.

% Subsampling the negative examples.
% Trees = 10
% [ LazyGroundClauseIndex ]  Building full index for nox/2 with 12 assertions.
% [ LazyGroundClauseIndex ]  Building full index for rm/2 with 13 assertions.
% [ LazyGroundClauseIndex ]  Building full index for lstat/2 with 13 assertions.
% [ LazyGroundClauseIndex ]  Building full index for age/2 with 13 assertions.
% [ LazyGroundClauseIndex ]  Building full index for crim/2 with 13 assertions.
% [ LazyGroundClauseIndex ]  Building full index for tax/2 with 13 assertions.
% [ LazyGroundClauseIndex ]  Building full index for dis/2 with 13 assertions.
% [ LazyGroundClauseIndex ]  Building full index for indus/2 with 13 assertions.
% [ LazyGroundClauseIndex ]  Building full index for zn/2 with 14 assertions.
% [ LazyGroundClauseIndex ]  Building full index for chas/2 with 13 assertions.
 (Arithmetic) Mean Probability Assigned to Correct Output Class: 13,000/13,00 = 1,000000

 The weighted count of positive examples = 13,000 and the weighted count of negative examples = 0,000

printExamples: Writing out predictions (for Tuffy?) on 13 examples for 'medv' to:
  data/boston_housing/test/results_medv.db
 and to:
  data/boston_housing/test/query_medv.db

% Computing Area Under Curves.
%Pos=13
%Neg=0
%LL:0.0
%LL:0.0

No negative examples in ComputeAUC.  Using AUC-ROC = 1.0 and AUC-PR = 1.0
Best F1 = 0.0
% F1 = 0.0
% Threshold = 0.0

%   AUC ROC   = 1,000000
%   AUC PR    = 1,000000
%   CLL	      = 0,000000
%   Precision = 1,000000 at threshold = 0,500
%   Recall    = 1,000000
%   F1        = 1,000000

% Total inference time (10 trees): 104 milliseconds.
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
