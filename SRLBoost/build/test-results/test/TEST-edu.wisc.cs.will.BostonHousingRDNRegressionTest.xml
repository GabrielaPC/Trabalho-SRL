<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="edu.wisc.cs.will.BostonHousingRDNRegressionTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2022-10-20T17:10:11" hostname="Ubuntu" time="8.533">
  <properties/>
  <testcase name="testRDNBostonHousingLearnInfer()" classname="edu.wisc.cs.will.BostonHousingRDNRegressionTest" time="8.533"/>
  <system-out><![CDATA[
% Calling SETUP.

% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

Resetting the LazyGroundNthArgumentClauseIndex.

% Calling ILPouterLoop from createRegressionOuterLooper.

% getInputArgWithDefaultValue: args=[data/boston_housing/train/train_pos.txt, data/boston_housing/train/train_neg.txt, data/boston_housing/train/train_bk.txt, data/boston_housing/train/train_facts.txt]
%  for N=0: args[N]=data/boston_housing/train/train_pos.txt

% getInputArgWithDefaultValue: args=[data/boston_housing/train/train_pos.txt, data/boston_housing/train/train_neg.txt, data/boston_housing/train/train_bk.txt, data/boston_housing/train/train_facts.txt]
%  for N=1: args[N]=data/boston_housing/train/train_neg.txt

% getInputArgWithDefaultValue: args=[data/boston_housing/train/train_pos.txt, data/boston_housing/train/train_neg.txt, data/boston_housing/train/train_bk.txt, data/boston_housing/train/train_facts.txt]
%  for N=2: args[N]=data/boston_housing/train/train_bk.txt

% getInputArgWithDefaultValue: args=[data/boston_housing/train/train_pos.txt, data/boston_housing/train/train_neg.txt, data/boston_housing/train/train_bk.txt, data/boston_housing/train/train_facts.txt]
%  for N=3: args[N]=data/boston_housing/train/train_facts.txt

% Welcome to the WILL ILP/SRL systems.

% Reading background theory from dir: null

% Switching to VarIndicator = uppercase.

***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****

% [ LazyGroundClauseIndex ]  Building full index for mode/1 with 1 assertions.

%  Read the facts.
%  Have read 5.668 facts.

%  LearnOneClause initialized.

% The outer looper has been created.

% Initializing the ILP inner looper.
% Have read 436 examples from 'data/boston_housing/train' [data/boston_housing/train/train*].

% NEW target:                 medv(A)
%  targetPred:                medv/1
%  targetArgTypes:            signature = [const], types = [+id]
%  targets:                   [medv(A)]
%  targetPredicates:          [medv/1]
%  targetArgSpecs:            [[A[+id]]]
%  variablesInTargets:        [[A]]

% Started collecting constants

% Collecting the types of constants.

%   *** WARNING ***  Constant '1' is already marked as being of types = [varsrim];
%          type = 'varindus' may be added if not already known.
%  PredicateName = 'indus', from 'indus(id100, 1)',
%  which has types = [signature = [const, const], types = [+id, #varindus]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '0' is already marked as being of types = [varzn];
%          type = 'varchas' may be added if not already known.
%  PredicateName = 'chas', from 'chas(id1, 0)',
%  which has types = [signature = [const, const], types = [+id, #varchas]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '2' is already marked as being of types = [varsrim, varindus];
%          type = 'varnox' may be added if not already known.
%  PredicateName = 'nox', from 'nox(id100, 2)',
%  which has types = [signature = [const, const], types = [+id, #varnox]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '3' is already marked as being of types = [varsrim, varindus, varnox];
%          type = 'varrm' may be added if not already known.
%  PredicateName = 'rm', from 'rm(id100, 3)',
%  which has types = [signature = [const, const], types = [+id, #varrm]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '1' is already marked as being of types = [varsrim, varindus, varchas, varnox, varrm];
%          type = 'varage' may be added if not already known.
%  PredicateName = 'age', from 'age(id100, 1)',
%  which has types = [signature = [const, const], types = [+id, #varage]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '4' is already marked as being of types = [varsrim, varindus, varnox, varrm, varage];
%          type = 'vardis' may be added if not already known.
%  PredicateName = 'dis', from 'dis(id100, 4)',
%  which has types = [signature = [const, const], types = [+id, #vardis]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '2' is already marked as being of types = [varsrim, varindus, varnox, varrm, varage, vardis];
%          type = 'varrad' may be added if not already known.
%  PredicateName = 'rad', from 'rad(id100, 2)',
%  which has types = [signature = [const, const], types = [+id, #varrad]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '2' is already marked as being of types = [varsrim, varindus, varnox, varrm, varage, vardis, varrad];
%          type = 'varptrat' may be added if not already known.
%  PredicateName = 'ptratio', from 'ptratio(id100, 2)',
%  which has types = [signature = [const, const], types = [+id, #varptrat]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '1' is already marked as being of types = [varsrim, varindus, varchas, varnox, varrm, varage, vardis, varrad, varptrat];
%          type = 'varb' may be added if not already known.
%  PredicateName = 'b', from 'b(id100, 1)',
%  which has types = [signature = [const, const], types = [+id, #varb]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '1' is already marked as being of types = [varsrim, varindus, varchas, varnox, varrm, varage, vardis, varrad, varptrat, varb];
%          type = 'varlstat' may be added if not already known.
%  PredicateName = 'lstat', from 'lstat(id100, 1)',
%  which has types = [signature = [const, const], types = [+id, #varlstat]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

% Looking at the training examples to see if any types of new constants can be inferred.
% Time to collect constants: 51 milliseconds

% Read 436 pos examples and 0 neg examples.
% Time to init learnOneClause: 68 milliseconds
% Old dirnull
Setting model dir

% Have 436 'raw' positive examples and kept 436.
% Have 0 'raw' negative examples and kept 0.
% No neg ex for medv

% processing backup's for medv
%  POS EX = 436
%  NEG EX = 0

% Memory usage by WILLSetup (just counts # targets?):
%  |backupPosExamples| = 1
%  |backupNegExamples| = 1
%  |predicatesAsFacts| = 0
%  |addedToFactBase|   = 0
data/boston_housing/train/models/

% Learn model for: medv
% Kept 436 of the 436 positive examples.
% Kept 0 of the 0 negative examples.
% Have prepared facts.
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:90.91398930014282
Set score:0.0025
% Dataset size: 436
Computing probabilities
prob time:2 milliseconds
No hidden examples for : medv
Time to build dataset: 4 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:90.91398930014282
Set score:0.0025

% Have these 10 positive seeds: 29 65 90 97 162 194 226 230 267 272

% LearnOneClause Parameters:
%   Targets (1):
%    medv(+id)
%  Modes (13):
%    crim(+id, #varsrim),
%    zn(+id, #varzn),
%    indus(+id, #varindus),
%    chas(+id, #varchas),
%    nox(+id, #varnox),
%    rm(+id, #varrm),
%    age(+id, #varage),
%    dis(+id, #vardis),
%    rad(+id, #varrad),
%    tax(+id, #vartax),
%    ptratio(+id, #varptrat),
%    b(+id, #varb),
%    lstat(+id, #varlstat)

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]  score = -Infinity
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for crim/2.
% [ LazyGroundClauseIndex ]  Building full index for crim/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for zn/2.
% [ LazyGroundClauseIndex ]  Building full index for zn/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for indus/2.
% [ LazyGroundClauseIndex ]  Building full index for indus/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for chas/2.
% [ LazyGroundClauseIndex ]  Building full index for chas/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for nox/2.
% [ LazyGroundClauseIndex ]  Building full index for nox/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for rm/2.
% [ LazyGroundClauseIndex ]  Building full index for rm/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for age/2.
% [ LazyGroundClauseIndex ]  Building full index for age/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for dis/2.
% [ LazyGroundClauseIndex ]  Building full index for dis/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for rad/2.
% [ LazyGroundClauseIndex ]  Building full index for rad/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for tax/2.
% [ LazyGroundClauseIndex ]  Building full index for tax/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for ptratio/2.
% [ LazyGroundClauseIndex ]  Building full index for ptratio/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for b/2.
% [ LazyGroundClauseIndex ]  Building full index for b/2 with 436 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for lstat/2.
% [ LazyGroundClauseIndex ]  Building full index for lstat/2 with 436 assertions.
%     Score = -38.882,625340 (regressionFit = 38.882,625339, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -38.882,625340): medv(A) :- crim(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.638,483808 (regressionFit = 39.638,483807, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.638,468162 (regressionFit = 39.638,468161, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.500,127853 (regressionFit = 39.500,127852, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.272,609528 (regressionFit = 39.272,609527, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.590,451598 (regressionFit = 39.590,451597, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.633,240561 (regressionFit = 37.633,240560, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -37.633,240561): medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -34.695,563004 (regressionFit = 34.695,563003, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -34.695,563004): medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.996,512520 (regressionFit = 38.996,512519, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 45).  [covers 6,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.571,765455 (regressionFit = 39.571,765454, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 22).  [covers 9,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.315,392215 (regressionFit = 39.315,392214, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 40).  [covers 7,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.356,067501 (regressionFit = 39.356,067500, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 33).  [covers 4,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.619,022403 (regressionFit = 39.619,022402, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 55).  [covers 3,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.291,723126 (regressionFit = 39.291,723125, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 80).  [covers 14,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.062,758165 (regressionFit = 39.062,758164, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 21,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.631,729726 (regressionFit = 39.631,729725, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -35.626,344947 (regressionFit = 35.626,344946, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.297,050048 (regressionFit = 36.297,050047, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.638,397802 (regressionFit = 39.638,397801, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.605,364995 (regressionFit = 38.605,364994, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.505,053776 (regressionFit = 39.505,053775, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.577,904001 (regressionFit = 38.577,904000, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 401,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.577,904001 (regressionFit = 38.577,904000, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 35,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.461,939144 (regressionFit = 39.461,939143, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.626,311286 (regressionFit = 37.626,311285, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.164,984537 (regressionFit = 38.164,984536, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.428,299302 (regressionFit = 39.428,299301, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.931,488693 (regressionFit = 38.931,488692, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.737,679697 (regressionFit = 38.737,679696, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.918,693679 (regressionFit = 38.918,693678, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.337,639541 (regressionFit = 39.337,639540, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.237,214598 (regressionFit = 39.237,214597, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.236,069996 (regressionFit = 39.236,069995, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.701,638091 (regressionFit = 37.701,638090, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -23.480,474260 (regressionFit = 23.480,474259, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -23.480,474260): medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.786,815820 (regressionFit = 36.786,815819, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.264,324993 (regressionFit = 39.264,324992, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.201,871597 (regressionFit = 37.201,871596, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.413,493707 (regressionFit = 39.413,493706, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.514,302075 (regressionFit = 38.514,302074, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.446,839830 (regressionFit = 39.446,839829, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.492,330687 (regressionFit = 39.492,330686, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 37,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.604,062463 (regressionFit = 39.604,062462, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.266,455873 (regressionFit = 37.266,455872, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.629,781185 (regressionFit = 39.629,781184, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.980,541901 (regressionFit = 38.980,541899, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.463,716798 (regressionFit = 39.463,716797, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.756,088525 (regressionFit = 38.756,088524, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.398,550879 (regressionFit = 39.398,550878, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.277,358952 (regressionFit = 39.277,358951, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 23,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.686,454048 (regressionFit = 38.686,454047, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.771,365965 (regressionFit = 38.771,365964, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 37,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.323,052852 (regressionFit = 39.323,052851, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 16,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.459,259956 (regressionFit = 39.459,259954, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 101,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.539,402678 (regressionFit = 39.539,402677, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 188).  [covers 7,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.631,729726 (regressionFit = 39.631,729725, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.252,905492 (regressionFit = 38.252,905491, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 193).  [covers 8,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.420,217776 (regressionFit = 39.420,217775, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 398).  [covers 12,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.571,765455 (regressionFit = 39.571,765454, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 330).  [covers 9,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.246,876873 (regressionFit = 39.246,876872, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 254).  [covers 5,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.075,442505 (regressionFit = 39.075,442504, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 222).  [covers 7,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.497,238969 (regressionFit = 39.497,238968, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 14,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 370).  [covers 2,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 280).  [covers 1,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.637,264034 (regressionFit = 39.637,264033, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -36.925,257034 (regressionFit = 36.925,257033, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.966,688041 (regressionFit = 38.966,688040, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.780,620084 (regressionFit = 38.780,620083, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.612,829726 (regressionFit = 39.612,829724, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.628,749898 (regressionFit = 38.628,749897, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.737,874029 (regressionFit = 38.737,874028, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.276,288528 (regressionFit = 39.276,288527, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.157,831192 (regressionFit = 39.157,831191, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 102,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.164,167220 (regressionFit = 39.164,167219, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.176,403309 (regressionFit = 39.176,403308, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.108,046458 (regressionFit = 39.108,046457, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.001,294509 (regressionFit = 38.001,294508, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 38,0/436,0 pos, 0,0/0,0 neg]
%     Score = -38.800,377476 (regressionFit = 38.800,377475, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.453,241329 (regressionFit = 39.453,241328, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -24.407,574443 (regressionFit = 24.407,574442, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -39.281,193186 (regressionFit = 39.281,193185, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -37.918,361293 (regressionFit = 37.918,361292, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
Comparing variance: 66.61714843749967 to score=0.0025 #egs=48.0
Comparing variance: 52.27538952067233 to score=0.0025 #egs=388.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 48,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-66,617148)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -66,617148) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 388,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-52,275390)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -52,275390) into the LAST position (#2) in the search queue.

% Time for loop #1: 408 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
% This clause covers 48 positive examples, of which 48 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3).  [covers 48,0/48,0 pos, 0,0/0,0 neg]'
%     Score = -23.480,474260 (regressionFit = 23.480,474259, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 48,0/48,0 pos, 0,0/0,0 neg]

% Have these 10 positive seeds: 0 3 6 10 16 17 19 20 25 30
% Gleaner: New best node found (score = -23.480,474260): medv(A) :- rm(A, 3).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.111,104526 (regressionFit = 3.111,104524, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 2).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.111,104526): medv(A) :- rm(A, 3), crim(A, 2).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.089,562441 (regressionFit = 3.089,562439, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 5).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.089,562441): medv(A) :- rm(A, 3), crim(A, 5).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.194,234320 (regressionFit = 3.194,234318, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 6).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.195,896851 (regressionFit = 3.195,896849, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 7).  [covers 14,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.102,009949 (regressionFit = 3.102,009947, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 1).  [covers 10,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.191,002013 (regressionFit = 3.191,002011, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 0).  [covers 21,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.193,252002 (regressionFit = 3.193,252000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 80).  [covers 3,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 90).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.176,844724 (regressionFit = 3.176,844722, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 20).  [covers 12,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.189,111760 (regressionFit = 3.189,111758, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 1).  [covers 15,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.801,209775 (regressionFit = 2.801,209773, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 9).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.801,209775): medv(A) :- rm(A, 3), indus(A, 9).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.159,079724 (regressionFit = 3.159,079722, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 2).  [covers 12,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.181,004498 (regressionFit = 3.181,004496, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 4).  [covers 14,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.196,099026 (regressionFit = 3.196,099024, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 0).  [covers 41,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.196,099026 (regressionFit = 3.196,099024, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 1).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.170,082752 (regressionFit = 3.170,082750, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 2).  [covers 8,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.708,247383 (regressionFit = 2.708,247381, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 7).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.708,247383): medv(A) :- rm(A, 3), nox(A, 7).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.196,495739 (regressionFit = 3.196,495737, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 4).  [covers 10,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.071,907752 (regressionFit = 3.071,907750, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 6).  [covers 8,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.194,837354 (regressionFit = 3.194,837352, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 8).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.193,189676 (regressionFit = 3.193,189674, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 1).  [covers 5,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 7).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.060,943097 (regressionFit = 3.060,943095, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 8).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.114,321669 (regressionFit = 3.114,321667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 2).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.095,211669 (regressionFit = 3.095,211667, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 9).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.141,492002 (regressionFit = 3.141,492000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 10).  [covers 5,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.186,969410 (regressionFit = 3.186,969408, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 4).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.181,319660 (regressionFit = 3.181,319658, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 4).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.096,257354 (regressionFit = 3.096,257352, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 8).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.131,104526 (regressionFit = 3.131,104524, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 6).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.104,534320 (regressionFit = 3.104,534318, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 5).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.105,111072 (regressionFit = 3.105,111070, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 3).  [covers 5,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 7).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.111,584532 (regressionFit = 3.111,584530, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 2).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.992,714727 (regressionFit = 2.992,714725, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 5).  [covers 17,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.183,777957 (regressionFit = 3.183,777955, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 3).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,609233 (regressionFit = 3.197,609231, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 8).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.186,045780 (regressionFit = 3.186,045778, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 276).  [covers 3,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.801,209775 (regressionFit = 2.801,209773, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 403).  [covers 4,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 193).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 329).  [covers 2,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,609233 (regressionFit = 3.197,609231, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 307).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 244).  [covers 1,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.187,786327 (regressionFit = 3.187,786325, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.181,293242 (regressionFit = 3.181,293240, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 2).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.752,971645 (regressionFit = 2.752,971643, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 9).  [covers 20,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.197,609233 (regressionFit = 3.197,609231, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 6).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.195,405002 (regressionFit = 3.195,405000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 1).  [covers 6,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.745,712267 (regressionFit = 2.745,712265, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 1).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.155,724792 (regressionFit = 3.155,724789, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 6).  [covers 10,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.189,703695 (regressionFit = 3.189,703693, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 2).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.083,084686 (regressionFit = 3.083,084684, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 5).  [covers 10,0/48,0 pos, 0,0/0,0 neg]
%     Score = -3.123,735263 (regressionFit = 3.123,735261, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 8).  [covers 7,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.904,231455 (regressionFit = 2.904,231453, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 1).  [covers 9,0/48,0 pos, 0,0/0,0 neg]
%     Score = -2.062,356191 (regressionFit = 2.062,356189, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.062,356191): medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -66,617.
% Will extend: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
Comparing variance: 26.586286982248566 to score=0.0025 #egs=26.0
Comparing variance: 62.323305785123836 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 26,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-26,586287)
%         ILP node to extend: medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -26,586287) into the LAST position (#2) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 22,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-62,323306)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 48,0/48,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -62,323306) into position #1 in the search queue (new size=3).

% Time for loop #2: 64 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      medv(A) :- rm(A, 3), lstat(A, 3).  [covers 26,0/48,0 pos, 0,0/0,0 neg]
% This clause covers 26 positive examples, of which 26 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3).  [covers 48,0/22,0 pos, 0,0/0,0 neg]'
%     Score = -23.480,474260 (regressionFit = 23.480,474259, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 22,0/22,0 pos, 0,0/0,0 neg]

% Have these 7 positive seeds: 2 5 9 10 13 14 18
% Gleaner: New best node found (score = -23.480,474260): medv(A) :- rm(A, 3).  [covers 22,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.371,012502 (regressionFit = 1.371,012500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 2).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.371,012502): medv(A) :- rm(A, 3), crim(A, 2).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.347,001907 (regressionFit = 1.347,001905, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 7).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.347,001907): medv(A) :- rm(A, 3), crim(A, 7).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.160,201113 (regressionFit = 1.160,201111, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), crim(A, 5).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.160,201113): medv(A) :- rm(A, 3), crim(A, 5).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 45).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.008,994478 (regressionFit = 1.008,994476, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 0).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.008,994478): medv(A) :- rm(A, 3), zn(A, 0).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -942,138122 (regressionFit = 942,138120, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 20).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -942,138122): medv(A) :- rm(A, 3), zn(A, 20).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), zn(A, 33).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -947,509917 (regressionFit = 947,509915, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 4).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.329,307296 (regressionFit = 1.329,307294, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 2).  [covers 5,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.370,730835 (regressionFit = 1.370,730833, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), indus(A, 1).  [covers 6,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.281,405265 (regressionFit = 1.281,405263, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), chas(A, 0).  [covers 19,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 5).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.368,278590 (regressionFit = 1.368,278588, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 4).  [covers 5,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.143,945907 (regressionFit = 1.143,945905, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 8).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), nox(A, 7).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.366,694377 (regressionFit = 1.366,694375, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), age(A, 3).  [covers 6,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.360,574446 (regressionFit = 1.360,574444, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 4).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.314,370280 (regressionFit = 1.314,370278, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 2).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -937,457780 (regressionFit = 937,457778, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -937,457780): medv(A) :- rm(A, 3), age(A, 9).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 2).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.339,532985 (regressionFit = 1.339,532982, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 4).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.368,972985 (regressionFit = 1.368,972982, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 8).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.366,991113 (regressionFit = 1.366,991111, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 9).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 7).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), dis(A, 6).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -947,509917 (regressionFit = 947,509915, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 5).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.326,547370 (regressionFit = 1.326,547368, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 8).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), rad(A, 7).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 398).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.326,547370 (regressionFit = 1.326,547368, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 307).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -923,328573 (regressionFit = 923,328571, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -923,328573): medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 222).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 1).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.326,547370 (regressionFit = 1.326,547368, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 6).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -952,847865 (regressionFit = 952,847863, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 9).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.370,836844 (regressionFit = 1.370,836842, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 3), ptratio(A, 3).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.191,763613 (regressionFit = 1.191,763611, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 1).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 8).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.356,536142 (regressionFit = 1.356,536140, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 2).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.295,510590 (regressionFit = 1.295,510588, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 6).  [covers 5,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.085,512502 (regressionFit = 1.085,512500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), b(A, 5).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.370,812481 (regressionFit = 1.370,812479, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 1).  [covers 9,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 8).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -1.273,032145 (regressionFit = 1.273,032143, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 9).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), lstat(A, 2).  [covers 2,0/22,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -62,323.
% Will extend: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
Comparing variance: 53.019999999999754 to score=0.0025 #egs=8.0
Comparing variance: 35.65489795918399 to score=0.0025 #egs=14.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 8,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-53,020000)
%         ILP node to extend: medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -53,020000) into position #1 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 14,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-35,654898)
%         ILP node to extend: medv(A) :- rm(A, 3).  [covers 22,0/22,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -35,654898) into position #3 in the search queue (new size=4).

% Time for loop #3: 32 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
% This clause covers 8 positive examples, of which 8 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/8,0 pos, 0,0/0,0 neg]'
%     Score = -923,328573 (regressionFit = 923,328571, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/8,0 pos, 0,0/0,0 neg]

***** Warning: % Have only 8 positive examples, so cannot choose 10 of them. *****


% Have these 8 positive seeds: 0 1 2 3 4 5 6 7
% Gleaner: New best node found (score = -923,328573): medv(A) :- rm(A, 3), tax(A, 264).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -421,280003 (regressionFit = 421,280000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), crim(A, 5).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -421,280003): medv(A) :- rm(A, 3), tax(A, 264), crim(A, 5).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -421,280003 (regressionFit = 421,280000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), crim(A, 7).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), zn(A, 20).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), indus(A, 4).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), chas(A, 0).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), nox(A, 8).  [covers 7,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), nox(A, 7).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -328,940003 (regressionFit = 328,940000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 9).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -328,940003): medv(A) :- rm(A, 3), tax(A, 264), age(A, 9).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 6).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 2).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 7).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), age(A, 4).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -423,678670 (regressionFit = 423,678667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), dis(A, 9).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%     Score = -295,198670 (regressionFit = 295,198667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -295,198670): medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), dis(A, 7).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), rad(A, 5).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), ptratio(A, 9).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), b(A, 6).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -401,715003 (regressionFit = 401,715000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), b(A, 5).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), b(A, 2).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 1).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 2).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 8).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 3), tax(A, 264), lstat(A, 9).  [covers 2,0/8,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -53,020.
% Will extend: medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
Comparing variance: 26.748888888888814 to score=0.0025 #egs=3.0
Comparing variance: 42.9903999999995 to score=0.0025 #egs=5.0
%   Creating a TRUE-branch leaf because length = 4 > 3
%   Creating a FALSE-branch leaf because wgtedCountFalseBranchPos = 5,0 < 2.1 * minPosCov = 6,3

% Time for loop #4: 38 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      medv(A) :- rm(A, 3), tax(A, 264), dis(A, 8).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 5 positive seeds: 15 18 140 197 345

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 388,0/388,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 388,0/388,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -20.282,748757 (regressionFit = 20.282,748756, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20.282,748757): medv(A) :- crim(A, 4).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.152,832076 (regressionFit = 20.152,832075, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 45,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -20.152,832076): medv(A) :- crim(A, 3).  [covers 45,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.279,021143 (regressionFit = 20.279,021142, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 33,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.377,258363 (regressionFit = 19.377,258362, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -19.377,258363): medv(A) :- crim(A, 1).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
%     Score = -18.021,872107 (regressionFit = 18.021,872106, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 286,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -18.021,872107): medv(A) :- zn(A, 0).  [covers 286,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.222,510619 (regressionFit = 20.222,510618, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 22).  [covers 8,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.126,970910 (regressionFit = 20.126,970909, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 75).  [covers 3,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.279,348978 (regressionFit = 20.279,348977, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.115,755157 (regressionFit = 20.115,755156, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 47,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.013,904208 (regressionFit = 19.013,904207, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 35,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.723,458473 (regressionFit = 19.723,458472, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 360,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.070,208776 (regressionFit = 20.070,208775, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.793,921077 (regressionFit = 19.793,921076, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 46,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.546,665423 (regressionFit = 19.546,665422, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.254,983198 (regressionFit = 20.254,983196, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 43,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.256,664206 (regressionFit = 20.256,664205, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.144,894065 (regressionFit = 20.144,894064, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 45,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.517,670352 (regressionFit = 19.517,670351, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.266,287450 (regressionFit = 20.266,287449, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 30,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.111,776227 (regressionFit = 19.111,776226, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.092,406243 (regressionFit = 20.092,406242, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.278,847408 (regressionFit = 20.278,847407, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 27,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.911,660248 (regressionFit = 19.911,660246, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 26,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.872,466756 (regressionFit = 19.872,466755, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 42,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.033,212110 (regressionFit = 20.033,212109, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 36,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.281,849028 (regressionFit = 20.281,849027, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 18,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.044,316333 (regressionFit = 20.044,316332, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 13,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.282,844400 (regressionFit = 20.282,844399, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 97,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.374,003183 (regressionFit = 19.374,003182, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 33,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.266,535856 (regressionFit = 20.266,535855, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 432).  [covers 9,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.222,510619 (regressionFit = 20.222,510618, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 330).  [covers 8,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.268,791743 (regressionFit = 20.268,791742, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 14,0/388,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 469).  [covers 1,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.719,093507 (regressionFit = 19.719,093506, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.129,458290 (regressionFit = 20.129,458289, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.037,631528 (regressionFit = 20.037,631527, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 48,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.094,774813 (regressionFit = 20.094,774812, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 7).  [covers 16,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.233,401635 (regressionFit = 20.233,401634, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 95,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.038,160325 (regressionFit = 20.038,160324, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 33,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.177,623706 (regressionFit = 20.177,623705, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 25,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.210,053644 (regressionFit = 20.210,053643, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 43,0/388,0 pos, 0,0/0,0 neg]
%     Score = -19.564,277391 (regressionFit = 19.564,277389, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 38,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.264,069164 (regressionFit = 20.264,069163, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/388,0 pos, 0,0/0,0 neg]
%     Score = -18.544,702343 (regressionFit = 18.544,702342, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.262,545787 (regressionFit = 20.262,545786, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 42,0/388,0 pos, 0,0/0,0 neg]
%     Score = -20.133,833853 (regressionFit = 20.133,833852, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 37,0/388,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0).  [covers 286,0/388,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0).  [covers 286,0/388,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -52,275.
% Will extend: medv(A) :- zn(A, 0).  [covers 286,0/388,0 pos, 0,0/0,0 neg]
Comparing variance: 53.83745183138575 to score=0.0025 #egs=286.0
Comparing variance: 25.729028258362188 to score=0.0025 #egs=102.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 286,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-53,837452)
%         ILP node to extend: medv(A) :- zn(A, 0).  [covers 286,0/388,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -53,837452) into position #1 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 102,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-25,729028)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -25,729028) into the LAST position (#4) in the search queue.

% Time for loop #5: 151 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #5, the best clause found is:
%      medv(A) :- zn(A, 0).  [covers 286,0/388,0 pos, 0,0/0,0 neg]
% This clause covers 286 positive examples, of which 286 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- zn(A, 0).  [covers 286,0/286,0 pos, 0,0/0,0 neg]'
%     Score = -18.021,872107 (regressionFit = 18.021,872106, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 286,0/286,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 80 88 132 136 147 192 207 208
% Gleaner: New best node found (score = -18.021,872107): medv(A) :- zn(A, 0).  [covers 286,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.691,423657 (regressionFit = 14.691,423655, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 2).  [covers 27,0/286,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -14.691,423657): medv(A) :- zn(A, 0), crim(A, 2).  [covers 27,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.354,614606 (regressionFit = 15.354,614604, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 4).  [covers 28,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.299,369447 (regressionFit = 15.299,369445, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 7).  [covers 31,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.304,763659 (regressionFit = 12.304,763657, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 10).  [covers 44,0/286,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -12.304,763659): medv(A) :- zn(A, 0), crim(A, 10).  [covers 44,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.278,344434 (regressionFit = 15.278,344432, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 9).  [covers 32,0/286,0 pos, 0,0/0,0 neg]
%     Score = -13.939,588457 (regressionFit = 13.939,588455, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 1).  [covers 12,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.273,009562 (regressionFit = 15.273,009560, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 6).  [covers 36,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.127,480881 (regressionFit = 15.127,480879, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 4).  [covers 13,0/286,0 pos, 0,0/0,0 neg]
%     Score = -13.431,776820 (regressionFit = 13.431,776818, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 10).  [covers 88,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.616,913602 (regressionFit = 14.616,913600, penalties=2.0300000000000005E-6) for clause:  medv(A) :- zn(A, 0), chas(A, 0).  [covers 261,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.272,931139 (regressionFit = 14.272,931137, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 4).  [covers 34,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.373,591047 (regressionFit = 15.373,591045, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 1).  [covers 46,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.055,128941 (regressionFit = 15.055,128939, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 2).  [covers 22,0/286,0 pos, 0,0/0,0 neg]
%     Score = -11.417,175433 (regressionFit = 11.417,175431, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 10).  [covers 41,0/286,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11.417,175433): medv(A) :- zn(A, 0), nox(A, 10).  [covers 41,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.374,322253 (regressionFit = 14.374,322251, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4).  [covers 19,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.087,544849 (regressionFit = 15.087,544847, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 7).  [covers 38,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.600,845216 (regressionFit = 14.600,845214, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1).  [covers 23,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.382,576784 (regressionFit = 15.382,576782, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 2).  [covers 31,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.386,454443 (regressionFit = 15.386,454441, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 8).  [covers 35,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.498,564419 (regressionFit = 14.498,564416, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 9).  [covers 42,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.099,182917 (regressionFit = 15.099,182915, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 7).  [covers 39,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.280,692807 (regressionFit = 15.280,692805, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 4).  [covers 23,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.397,409122 (regressionFit = 15.397,409120, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 9).  [covers 34,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.078,557173 (regressionFit = 15.078,557171, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 10).  [covers 15,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.594,408965 (regressionFit = 14.594,408963, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 6).  [covers 45,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.392,022350 (regressionFit = 15.392,022348, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 2).  [covers 31,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.726,266571 (regressionFit = 14.726,266569, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 6).  [covers 25,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.378,757564 (regressionFit = 15.378,757562, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 1).  [covers 36,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.954,508961 (regressionFit = 14.954,508959, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 4).  [covers 32,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.317,186579 (regressionFit = 15.317,186577, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 2).  [covers 26,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.152,715370 (regressionFit = 15.152,715368, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 10).  [covers 50,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.432,911188 (regressionFit = 14.432,911186, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 3).  [covers 24,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.397,476341 (regressionFit = 15.397,476339, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 4).  [covers 70,0/286,0 pos, 0,0/0,0 neg]
%     Score = -13.431,776820 (regressionFit = 13.431,776818, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 24).  [covers 88,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.243,537681 (regressionFit = 14.243,537679, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 193).  [covers 6,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.255,601675 (regressionFit = 15.255,601673, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 277).  [covers 11,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.390,364515 (regressionFit = 15.390,364513, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 304).  [covers 12,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.394,547587 (regressionFit = 15.394,547585, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 430).  [covers 3,0/286,0 pos, 0,0/0,0 neg]
%     Score = -13.431,776820 (regressionFit = 13.431,776818, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 666).  [covers 88,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.835,387692 (regressionFit = 14.835,387690, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 2).  [covers 30,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.029,384170 (regressionFit = 15.029,384168, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 3).  [covers 38,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.763,838902 (regressionFit = 14.763,838900, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 6).  [covers 19,0/286,0 pos, 0,0/0,0 neg]
%     Score = -13.533,313571 (regressionFit = 13.533,313568, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 10).  [covers 95,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.227,336354 (regressionFit = 15.227,336352, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 3).  [covers 31,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.354,002534 (regressionFit = 15.354,002532, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 6).  [covers 24,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.330,636140 (regressionFit = 15.330,636138, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 4).  [covers 15,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.325,436630 (regressionFit = 15.325,436628, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 5).  [covers 25,0/286,0 pos, 0,0/0,0 neg]
%     Score = -13.906,160636 (regressionFit = 13.906,160634, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 7).  [covers 40,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.217,696260 (regressionFit = 15.217,696258, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 1).  [covers 66,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.387,987936 (regressionFit = 15.387,987934, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 9).  [covers 37,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.060,154928 (regressionFit = 14.060,154926, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 1).  [covers 19,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.056,395562 (regressionFit = 15.056,395560, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 7).  [covers 36,0/286,0 pos, 0,0/0,0 neg]
%     Score = -14.528,451214 (regressionFit = 14.528,451212, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 2).  [covers 24,0/286,0 pos, 0,0/0,0 neg]
%     Score = -15.203,103714 (regressionFit = 15.203,103712, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 8).  [covers 38,0/286,0 pos, 0,0/0,0 neg]
%     Score = -12.590,286584 (regressionFit = 12.590,286582, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 6).  [covers 43,0/286,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), nox(A, 10).  [covers 41,0/286,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), nox(A, 10).  [covers 41,0/286,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -53,837.
% Will extend: medv(A) :- zn(A, 0), nox(A, 10).  [covers 41,0/286,0 pos, 0,0/0,0 neg]
Comparing variance: 11.264866151100582 to score=0.0025 #egs=41.0
Comparing variance: 44.71557517701015 to score=0.0025 #egs=245.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 41,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-11,264866)
%         ILP node to extend: medv(A) :- zn(A, 0), nox(A, 10).  [covers 41,0/286,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -11,264866) into the LAST position (#4) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 245,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-44,715575)
%         ILP node to extend: medv(A) :- zn(A, 0).  [covers 286,0/286,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -44,715575) into position #1 in the search queue (new size=5).

% Time for loop #6: 228 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      medv(A) :- zn(A, 0), nox(A, 10).  [covers 41,0/286,0 pos, 0,0/0,0 neg]
% This clause covers 41 positive examples, of which 41 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- zn(A, 0).  [covers 286,0/245,0 pos, 0,0/0,0 neg]'
%     Score = -18.021,872107 (regressionFit = 18.021,872106, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 245,0/245,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 1 33 67 83 101 121 137 153
% Gleaner: New best node found (score = -18.021,872107): medv(A) :- zn(A, 0).  [covers 245,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.862,242216 (regressionFit = 10.862,242214, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 3).  [covers 29,0/245,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10.862,242216): medv(A) :- zn(A, 0), crim(A, 3).  [covers 29,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.954,474411 (regressionFit = 10.954,474409, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 7).  [covers 31,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.761,804785 (regressionFit = 10.761,804783, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 5).  [covers 39,0/245,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10.761,804785): medv(A) :- zn(A, 0), crim(A, 5).  [covers 39,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.827,186069 (regressionFit = 10.827,186067, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 6).  [covers 18,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.949,561221 (regressionFit = 10.949,561219, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), crim(A, 1).  [covers 9,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.769,962904 (regressionFit = 10.769,962902, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 3).  [covers 40,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.741,410776 (regressionFit = 10.741,410774, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 8).  [covers 21,0/245,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10.741,410776): medv(A) :- zn(A, 0), indus(A, 8).  [covers 21,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.875,226175 (regressionFit = 10.875,226173, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 9).  [covers 25,0/245,0 pos, 0,0/0,0 neg]
%     Score = -9.872,746325 (regressionFit = 9.872,746323, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 1).  [covers 12,0/245,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.872,746325): medv(A) :- zn(A, 0), indus(A, 1).  [covers 12,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.894,189219 (regressionFit = 10.894,189217, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 7).  [covers 15,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.953,408758 (regressionFit = 10.953,408756, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 6).  [covers 36,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.953,074312 (regressionFit = 10.953,074310, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), indus(A, 5).  [covers 13,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.550,767420 (regressionFit = 10.550,767418, penalties=2.0300000000000005E-6) for clause:  medv(A) :- zn(A, 0), chas(A, 0).  [covers 220,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.550,767420 (regressionFit = 10.550,767418, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), chas(A, 1).  [covers 25,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.860,383810 (regressionFit = 10.860,383808, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 3).  [covers 33,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.749,903002 (regressionFit = 10.749,903000, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 8).  [covers 26,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.919,859271 (regressionFit = 10.919,859269, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 7).  [covers 26,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.363,317577 (regressionFit = 10.363,317575, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 4).  [covers 34,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.684,517948 (regressionFit = 10.684,517946, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 1).  [covers 46,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.947,598517 (regressionFit = 10.947,598515, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), nox(A, 5).  [covers 13,0/245,0 pos, 0,0/0,0 neg]
%     Score = -9.684,953285 (regressionFit = 9.684,953283, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4).  [covers 16,0/245,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.684,953285): medv(A) :- zn(A, 0), rm(A, 4).  [covers 16,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.439,944383 (regressionFit = 10.439,944381, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 7).  [covers 35,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.909,168762 (regressionFit = 10.909,168760, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 8).  [covers 32,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.953,108956 (regressionFit = 10.953,108953, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 6).  [covers 30,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.918,975430 (regressionFit = 10.918,975428, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 10).  [covers 29,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.300,648573 (regressionFit = 10.300,648571, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 1).  [covers 21,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.945,079334 (regressionFit = 10.945,079332, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 4).  [covers 23,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.577,015028 (regressionFit = 10.577,015026, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 7).  [covers 33,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.926,461232 (regressionFit = 10.926,461230, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 8).  [covers 13,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.801,497907 (regressionFit = 10.801,497905, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 1).  [covers 27,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.913,865283 (regressionFit = 10.913,865281, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), age(A, 3).  [covers 22,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.628,930902 (regressionFit = 10.628,930900, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 6).  [covers 25,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.955,215966 (regressionFit = 10.955,215964, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 7).  [covers 25,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.810,972988 (regressionFit = 10.810,972986, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 4).  [covers 32,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.838,818454 (regressionFit = 10.838,818452, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 3).  [covers 17,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.924,732117 (regressionFit = 10.924,732115, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 1).  [covers 36,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.954,663522 (regressionFit = 10.954,663519, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), dis(A, 2).  [covers 26,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.955,126152 (regressionFit = 10.955,126150, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 5).  [covers 72,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.721,232945 (regressionFit = 10.721,232943, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 4).  [covers 70,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.406,493522 (regressionFit = 10.406,493520, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rad(A, 3).  [covers 24,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.955,313631 (regressionFit = 10.955,313629, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 384).  [covers 11,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.747,643920 (regressionFit = 10.747,643918, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 437).  [covers 14,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.875,226175 (regressionFit = 10.875,226173, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 403).  [covers 25,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.040,468956 (regressionFit = 10.040,468954, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 193).  [covers 6,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.889,175197 (regressionFit = 10.889,175195, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 276).  [covers 6,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.902,527960 (regressionFit = 10.902,527958, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 289).  [covers 5,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.947,820145 (regressionFit = 10.947,820143, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 304).  [covers 12,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.944,619372 (regressionFit = 10.944,619370, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), tax(A, 224).  [covers 7,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.660,719533 (regressionFit = 10.660,719531, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 4).  [covers 32,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.747,643920 (regressionFit = 10.747,643918, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 7).  [covers 14,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.875,226175 (regressionFit = 10.875,226173, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 9).  [covers 25,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.729,651971 (regressionFit = 10.729,651969, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 2).  [covers 30,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.897,450555 (regressionFit = 10.897,450553, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 1).  [covers 10,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.870,625208 (regressionFit = 10.870,625206, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 3).  [covers 38,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.890,041992 (regressionFit = 10.890,041990, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), ptratio(A, 10).  [covers 54,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.950,840292 (regressionFit = 10.950,840290, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 4).  [covers 15,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.953,816231 (regressionFit = 10.953,816229, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 6).  [covers 24,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.954,673027 (regressionFit = 10.954,673025, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 9).  [covers 34,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.939,503373 (regressionFit = 10.939,503371, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 5).  [covers 24,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.898,296431 (regressionFit = 10.898,296429, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 3).  [covers 29,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.953,669449 (regressionFit = 10.953,669447, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), b(A, 1).  [covers 47,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.664,634527 (regressionFit = 10.664,634525, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 9).  [covers 18,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.867,742192 (regressionFit = 10.867,742190, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 10).  [covers 29,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.948,417937 (regressionFit = 10.948,417935, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 4).  [covers 33,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.940,179321 (regressionFit = 10.940,179319, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 8).  [covers 38,0/245,0 pos, 0,0/0,0 neg]
%     Score = -10.063,490088 (regressionFit = 10.063,490086, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), lstat(A, 1).  [covers 19,0/245,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), rm(A, 4).  [covers 16,0/245,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), rm(A, 4).  [covers 16,0/245,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -44,716.
% Will extend: medv(A) :- zn(A, 0), rm(A, 4).  [covers 16,0/245,0 pos, 0,0/0,0 neg]
Comparing variance: 93.7440234375 to score=0.0025 #egs=16.0
Comparing variance: 35.74257165195216 to score=0.0025 #egs=229.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 16,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-93,744023)
%         ILP node to extend: medv(A) :- zn(A, 0), rm(A, 4).  [covers 16,0/245,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -93,744023) into position #1 in the search queue (new size=5).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 229,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-35,742572)
%         ILP node to extend: medv(A) :- zn(A, 0).  [covers 245,0/245,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -35,742572) into position #2 in the search queue (new size=6).

% Time for loop #7: 214 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      medv(A) :- zn(A, 0), rm(A, 4).  [covers 16,0/245,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 16 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- zn(A, 0), rm(A, 4).  [covers 16,0/16,0 pos, 0,0/0,0 neg]'
%     Score = -9.684,953285 (regressionFit = 9.684,953283, penalties=2.0500000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4).  [covers 16,0/16,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 1 2 4 5 6 7 10 13
% Gleaner: New best node found (score = -9.684,953285): medv(A) :- zn(A, 0), rm(A, 4).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), crim(A, 5).  [covers 2,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.409,509747 (regressionFit = 1.409,509744, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), crim(A, 2).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.409,509747): medv(A) :- zn(A, 0), rm(A, 4), crim(A, 2).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), crim(A, 7).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), crim(A, 9).  [covers 2,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), crim(A, 3).  [covers 2,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), indus(A, 9).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.480,052311 (regressionFit = 1.480,052308, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), indus(A, 4).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.277,594170 (regressionFit = 1.277,594167, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), indus(A, 1).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.277,594170): medv(A) :- zn(A, 0), rm(A, 4), indus(A, 1).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.471,257439 (regressionFit = 1.471,257436, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), indus(A, 2).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.381,149170 (regressionFit = 1.381,149167, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), indus(A, 10).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.407,057439 (regressionFit = 1.407,057436, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), chas(A, 0).  [covers 13,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.407,057439 (regressionFit = 1.407,057436, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), chas(A, 1).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.483,846670 (regressionFit = 1.483,846667, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), nox(A, 7).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.477,079170 (regressionFit = 1.477,079167, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), nox(A, 3).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.475,679170 (regressionFit = 1.475,679167, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), nox(A, 4).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), nox(A, 8).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.479,549747 (regressionFit = 1.479,549744, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), nox(A, 2).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), age(A, 5).  [covers 2,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.256,529234 (regressionFit = 1.256,529231, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), age(A, 4).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.256,529234): medv(A) :- zn(A, 0), rm(A, 4), age(A, 4).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), age(A, 7).  [covers 2,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), age(A, 9).  [covers 2,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), age(A, 2).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), age(A, 10).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.431,169747 (regressionFit = 1.431,169744, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), age(A, 1).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), dis(A, 9).  [covers 2,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.473,059276 (regressionFit = 1.473,059273, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), dis(A, 6).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.463,990772 (regressionFit = 1.463,990769, penalties=3.0500000000000004E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), dis(A, 4).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), dis(A, 10).  [covers 2,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.479,549747 (regressionFit = 1.479,549744, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), dis(A, 3).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.469,957439 (regressionFit = 1.469,957436, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), rad(A, 5).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.349,919276 (regressionFit = 1.349,919273, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), rad(A, 3).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), rad(A, 8).  [covers 2,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.381,149170 (regressionFit = 1.381,149167, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), rad(A, 24).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), tax(A, 403).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), tax(A, 296).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), tax(A, 193).  [covers 2,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), tax(A, 307).  [covers 2,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.381,149170 (regressionFit = 1.381,149167, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), tax(A, 666).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), tax(A, 233).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), tax(A, 222).  [covers 2,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), ptratio(A, 9).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.489,415901 (regressionFit = 1.489,415897, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), ptratio(A, 6).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.491,401821 (regressionFit = 1.491,401818, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), ptratio(A, 2).  [covers 5,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.381,149170 (regressionFit = 1.381,149167, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), ptratio(A, 10).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), ptratio(A, 3).  [covers 2,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), b(A, 9).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), b(A, 6).  [covers 2,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), b(A, 3).  [covers 2,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), b(A, 2).  [covers 2,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), b(A, 5).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.474,663593 (regressionFit = 1.474,663590, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), b(A, 1).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -981,603593 (regressionFit = 981,603590, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), lstat(A, 3).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -981,603593): medv(A) :- zn(A, 0), rm(A, 4), lstat(A, 3).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), lstat(A, 9).  [covers 2,0/16,0 pos, 0,0/0,0 neg]
%     Score = -1.462,221003 (regressionFit = 1.462,221000, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), lstat(A, 1).  [covers 6,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- zn(A, 0), rm(A, 4), lstat(A, 8).  [covers 2,0/16,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), rm(A, 4), lstat(A, 3).  [covers 3,0/16,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 0), rm(A, 4), lstat(A, 3).  [covers 3,0/16,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -93,744.
% Will extend: medv(A) :- zn(A, 0), rm(A, 4), lstat(A, 3).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #8: 33 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      medv(A) :- zn(A, 0), rm(A, 4), lstat(A, 3).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (medv(A) :- rm(A, 4))
Created a leaf under (medv(A) :- tax(A, 264))
Created a leaf under (medv(A) :- lstat(A, 3))
Created a leaf under (medv(A) :- zn(A, 0))
Created a leaf under (medv(A) :- nox(A, 10))

%%%%%  WILL-Produced Tree #1 @ 14:10:12 10/20/22.  %%%%%


% FOR medv(A):
%   if ( rm(A, 3) )
%   then if ( lstat(A, 3) )
%   | then return 44.94230769230769;  // std dev = 5,156, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( tax(A, 264) )
%   | | then if ( dis(A, 8) )
%   | | | then return 35.96666666666667;  // std dev = 8,958, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 44.260000000000005;  // std dev = 14,661, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 31.77142857142857;  // std dev = 5,971, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( zn(A, 0) )
%   | then if ( nox(A, 10) )
%   | | then return 10.458536585365852;  // std dev = 3,356, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else if ( rm(A, 4) )
%   | | | then if ( lstat(A, 3) )
%   | | | | then return 41.56666666666666;  // std dev = 11,743, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 26.984615384615385;  // std dev = 29,047, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 20.502183406113524;  // std dev = 5,979, 229,000 (wgt'ed) examples reached here.  /* #pos=229 */
%   | else return 25.061764705882354;  // std dev = 5,072, 102,000 (wgt'ed) examples reached here.  /* #pos=102 */


% Clauses:

medv(A, 44.94230769230769) :- 
     rm(A, 3), 
     lstat(A, 3), 
     !. // Clause #1.

medv(A, 35.96666666666667) :- 
     rm(A, 3), 
     tax(A, 264), 
     dis(A, 8), 
     !. // Clause #2.

medv(A, 44.260000000000005) :- 
     rm(A, 3), 
     tax(A, 264), 
     !. // Clause #3.

medv(A, 31.77142857142857) :- 
     rm(A, 3), 
     !. // Clause #4.

medv(A, 10.458536585365852) :- 
     zn(A, 0), 
     nox(A, 10), 
     !. // Clause #5.

medv(A, 41.56666666666666) :- 
     zn(A, 0), 
     rm(A, 4), 
     lstat(A, 3), 
     !. // Clause #6.

medv(A, 26.984615384615385) :- 
     zn(A, 0), 
     rm(A, 4), 
     !. // Clause #7.

medv(A, 20.502183406113524) :- 
     zn(A, 0), 
     !. // Clause #8.

medv(A, 25.061764705882354) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_medv(a, 44.94230769230769) :-  /* #pos=26 */ 
   rm(a, 3),
   lstat(a, 3),
   !. // Flattened version of clause #1.

flattened_medv(a, 35.96666666666667) :-  /* #pos=3 */ 
   rm(a, 3),
   tax(a, 264),
   dis(a, 8),
   !. // Flattened version of clause #2.

flattened_medv(a, 44.260000000000005) :-  /* #pos=5 */ 
   rm(a, 3),
   tax(a, 264),
   !. // Flattened version of clause #3.

flattened_medv(a, 31.77142857142857) :-  /* #pos=14 */ 
   rm(a, 3),
   !. // Flattened version of clause #4.

flattened_medv(a, 10.458536585365852) :-  /* #pos=41 */ 
   zn(a, 0),
   nox(a, 10),
   !. // Flattened version of clause #5.

flattened_medv(a, 41.56666666666666) :-  /* #pos=3 */ 
   zn(a, 0),
   rm(a, 4),
   lstat(a, 3),
   !. // Flattened version of clause #6.

flattened_medv(a, 26.984615384615385) :-  /* #pos=13 */ 
   zn(a, 0),
   rm(a, 4),
   !. // Flattened version of clause #7.

flattened_medv(a, 20.502183406113524) :-  /* #pos=229 */ 
   zn(a, 0),
   !. // Flattened version of clause #8.

flattened_medv(underscore, 25.061764705882354) :-  /* #pos=102 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   nox(a, 10)
%   tax(a, 264)
%   rm(a, 4)
%   rm(a, 3)
%   lstat(a, 3)
%   dis(a, 8)
%   zn(a, 0)

% Saving model in: data/boston_housing/train/models/bRDNs/medv.model.ckpt
% Time taken to learn 1 trees is 1,191 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:93.7440234375
Set score:0.0025
% Kept 436 of the 436 positive examples.
% Kept 0 of the 0 negative examples.
% Dataset size: 436
Computing probabilities
prob time:35 milliseconds
No hidden examples for : medv
Time to build dataset: 39 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:31.510283468399752
Set score:0.0025

% Have these 7 positive seeds: 16 61 241 268 307 338 372

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -13.716,348863 (regressionFit = 13.716,348862, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -13.716,348863): medv(A) :- crim(A, 4).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.625,206601 (regressionFit = 13.625,206600, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -13.625,206601): medv(A) :- crim(A, 5).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.681,732961 (regressionFit = 13.681,732960, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.393,679089 (regressionFit = 13.393,679088, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -13.393,679089): medv(A) :- crim(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.114,850510 (regressionFit = 13.114,850509, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -13.114,850510): medv(A) :- crim(A, 10).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.737,248387 (regressionFit = 13.737,248386, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.737,253094 (regressionFit = 13.737,253093, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 55).  [covers 3,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.712,452445 (regressionFit = 13.712,452444, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.709,131990 (regressionFit = 13.709,131989, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.520,524955 (regressionFit = 13.520,524954, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.539,271456 (regressionFit = 13.539,271455, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.716,505027 (regressionFit = 13.716,505026, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.642,592107 (regressionFit = 13.642,592106, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.436,792038 (regressionFit = 13.436,792037, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 401,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.436,792038 (regressionFit = 13.436,792037, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 35,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.608,029206 (regressionFit = 13.608,029205, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -12.861,488432 (regressionFit = 12.861,488431, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -12.861,488432): medv(A) :- nox(A, 9).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.170,365558 (regressionFit = 13.170,365557, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.721,322576 (regressionFit = 13.721,322575, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.718,406315 (regressionFit = 13.718,406314, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.738,194447 (regressionFit = 13.738,194446, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.736,780253 (regressionFit = 13.736,780252, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.083,573769 (regressionFit = 13.083,573768, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.629,680547 (regressionFit = 13.629,680546, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.717,419021 (regressionFit = 13.717,419020, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.437,433357 (regressionFit = 13.437,433356, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.682,939398 (regressionFit = 13.682,939396, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.728,303411 (regressionFit = 13.728,303410, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.632,277877 (regressionFit = 13.632,277876, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.671,279490 (regressionFit = 13.671,279489, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.546,903355 (regressionFit = 13.546,903354, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.695,003193 (regressionFit = 13.695,003192, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.378,033896 (regressionFit = 13.378,033895, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.731,756678 (regressionFit = 13.731,756677, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.686,635276 (regressionFit = 13.686,635275, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.738,482721 (regressionFit = 13.738,482720, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.694,419429 (regressionFit = 13.694,419428, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 18,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.682,298725 (regressionFit = 13.682,298724, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.642,592107 (regressionFit = 13.642,592106, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.379,374111 (regressionFit = 13.379,374110, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 37,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.732,405088 (regressionFit = 13.732,405087, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 432).  [covers 9,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.709,131990 (regressionFit = 13.709,131989, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.703,468567 (regressionFit = 13.703,468566, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 287).  [covers 8,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 370).  [covers 2,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.736,789385 (regressionFit = 13.736,789384, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 279).  [covers 4,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.642,592107 (regressionFit = 13.642,592106, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.737,092139 (regressionFit = 13.737,092138, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 233).  [covers 9,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.573,322895 (regressionFit = 13.573,322894, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.736,373477 (regressionFit = 13.736,373476, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.734,692252 (regressionFit = 13.734,692251, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.637,957805 (regressionFit = 13.637,957804, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 97,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.738,439035 (regressionFit = 13.738,439034, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 102,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.724,401157 (regressionFit = 13.724,401156, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.721,373636 (regressionFit = 13.721,373635, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -12.919,867156 (regressionFit = 12.919,867155, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.728,457816 (regressionFit = 13.728,457814, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.471,782641 (regressionFit = 13.471,782640, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 38,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.631,497353 (regressionFit = 13.631,497352, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 38,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.509,789473 (regressionFit = 13.509,789472, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -12.994,205859 (regressionFit = 12.994,205858, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.610,189124 (regressionFit = 13.610,189123, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -13.297,779639 (regressionFit = 13.297,779638, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 9).  [covers 42,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 9).  [covers 42,0/436,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: medv(A) :- nox(A, 9).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
Comparing variance: 23.927173772292726 to score=0.0025 #egs=42.0
Comparing variance: 30.092759220480268 to score=0.0025 #egs=394.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 42,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-23,927174)
%         ILP node to extend: medv(A) :- nox(A, 9).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -23,927174) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 394,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-30,092759)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -30,092759) into position #1 in the search queue (new size=2).

% Time for loop #1: 160 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      medv(A) :- nox(A, 9).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
% This clause covers 42 positive examples, of which 42 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 55 58 80 105 160 197 211 217

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 394,0/394,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 394,0/394,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -11.551,746275 (regressionFit = 11.551,746274, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 11,0/394,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11.551,746275): medv(A) :- crim(A, 8).  [covers 11,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.672,766291 (regressionFit = 11.672,766290, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 44,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.626,805699 (regressionFit = 11.626,805698, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 51,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.794,713200 (regressionFit = 11.794,713199, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 41,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.851,642757 (regressionFit = 11.851,642756, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 43,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.854,501932 (regressionFit = 11.854,501931, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 47,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.828,714080 (regressionFit = 11.828,714079, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 265,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.782,896164 (regressionFit = 11.782,896163, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 45).  [covers 6,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.828,268554 (regressionFit = 11.828,268553, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 33).  [covers 4,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.779,968872 (regressionFit = 11.779,968871, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 13,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.741,058726 (regressionFit = 11.741,058725, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 49,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.851,653957 (regressionFit = 11.851,653956, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.523,771848 (regressionFit = 11.523,771847, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/394,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11.523,771848): medv(A) :- indus(A, 3).  [covers 47,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.807,409665 (regressionFit = 11.807,409664, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 7).  [covers 17,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.640,051326 (regressionFit = 11.640,051325, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 48,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.262,614064 (regressionFit = 11.262,614063, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 368,0/394,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11.262,614064): medv(A) :- chas(A, 0).  [covers 368,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.262,614064 (regressionFit = 11.262,614063, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 26,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.809,034495 (regressionFit = 11.809,034494, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 32,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.850,938990 (regressionFit = 11.850,938989, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 50,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.433,400706 (regressionFit = 11.433,400705, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 48,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.635,173211 (regressionFit = 11.635,173210, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.748,381596 (regressionFit = 11.748,381595, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 43,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.198,930195 (regressionFit = 11.198,930194, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 45,0/394,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -11.198,930195): medv(A) :- rm(A, 4).  [covers 45,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.792,305846 (regressionFit = 11.792,305845, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 38,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.334,319355 (regressionFit = 11.334,319354, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 38,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.854,557899 (regressionFit = 11.854,557898, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 32,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.853,860384 (regressionFit = 11.853,860383, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 36,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.856,530019 (regressionFit = 11.856,530018, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 46,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.748,840126 (regressionFit = 11.748,840125, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 34,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.852,421840 (regressionFit = 11.852,421839, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 36,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.846,232067 (regressionFit = 11.846,232066, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 25,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.818,915089 (regressionFit = 11.818,915088, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 45,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.855,886919 (regressionFit = 11.855,886918, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 48,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.778,992704 (regressionFit = 11.778,992703, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 50,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.669,928176 (regressionFit = 11.669,928175, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 31,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.747,052062 (regressionFit = 11.747,052061, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 96,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.712,855231 (regressionFit = 11.712,855230, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 101,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.856,420000 (regressionFit = 11.856,419999, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 16,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.779,968872 (regressionFit = 11.779,968871, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 13,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.811,593668 (regressionFit = 11.811,593667, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 398).  [covers 12,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.804,978076 (regressionFit = 11.804,978075, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 277).  [covers 11,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.771,218990 (regressionFit = 11.771,218989, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 39,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.799,551690 (regressionFit = 11.799,551689, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 289).  [covers 5,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.807,098873 (regressionFit = 11.807,098872, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 222).  [covers 7,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.820,268983 (regressionFit = 11.820,268982, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 14,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.805,489984 (regressionFit = 11.805,489983, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 34,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.830,312798 (regressionFit = 11.830,312797, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 45,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.822,249812 (regressionFit = 11.822,249811, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 51,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.565,087408 (regressionFit = 11.565,087407, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 32,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.856,326465 (regressionFit = 11.856,326464, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 46,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.529,210428 (regressionFit = 11.529,210427, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 29,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.837,039298 (regressionFit = 11.837,039297, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 39,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.856,526159 (regressionFit = 11.856,526158, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 27,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.851,727886 (regressionFit = 11.851,727885, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 98,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.854,451508 (regressionFit = 11.854,451507, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 26,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.740,589445 (regressionFit = 11.740,589444, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 37,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.742,262704 (regressionFit = 11.742,262703, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 44,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.719,433700 (regressionFit = 11.719,433699, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 29,0/394,0 pos, 0,0/0,0 neg]
%     Score = -11.854,319633 (regressionFit = 11.854,319632, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 43,0/394,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 4).  [covers 45,0/394,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 4).  [covers 45,0/394,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -30,093.
% Will extend: medv(A) :- rm(A, 4).  [covers 45,0/394,0 pos, 0,0/0,0 neg]
Comparing variance: 28.16233755832054 to score=0.0025 #egs=45.0
Comparing variance: 28.457378234834465 to score=0.0025 #egs=349.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 45,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-28,162338)
%         ILP node to extend: medv(A) :- rm(A, 4).  [covers 45,0/394,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -28,162338) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 349,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-28,457378)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -28,457378) into position #1 in the search queue (new size=3).

% Time for loop #2: 173 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      medv(A) :- rm(A, 4).  [covers 45,0/394,0 pos, 0,0/0,0 neg]
% This clause covers 45 positive examples, of which 45 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 26 46 71 182 203 239 277 299

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 349,0/349,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 349,0/349,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -9.928,179440 (regressionFit = 9.928,179439, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 38,0/349,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.928,179440): medv(A) :- crim(A, 1).  [covers 38,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.771,645942 (regressionFit = 9.771,645941, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 40,0/349,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.771,645942): medv(A) :- crim(A, 5).  [covers 40,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.929,708968 (regressionFit = 9.929,708967, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 43,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.861,301535 (regressionFit = 9.861,301534, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 42,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.927,466924 (regressionFit = 9.927,466923, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 46,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.580,725726 (regressionFit = 9.580,725725, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 9).  [covers 19,0/349,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.580,725726): medv(A) :- crim(A, 9).  [covers 19,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.697,895197 (regressionFit = 9.697,895196, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 36,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.889,384314 (regressionFit = 9.889,384313, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 40,0/349,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 18).  [covers 1,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.604,578022 (regressionFit = 9.604,578021, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 247,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.902,557918 (regressionFit = 9.902,557917, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 33).  [covers 3,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.828,146746 (regressionFit = 9.828,146745, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 36,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.797,617156 (regressionFit = 9.797,617155, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 21,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.705,271539 (regressionFit = 9.705,271538, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 46,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.900,796396 (regressionFit = 9.900,796395, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 58,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.931,581094 (regressionFit = 9.931,581093, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 44,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.339,392527 (regressionFit = 9.339,392526, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 328,0/349,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.339,392527): medv(A) :- chas(A, 0).  [covers 328,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.339,392527 (regressionFit = 9.339,392526, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 21,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.797,265345 (regressionFit = 9.797,265344, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.856,837481 (regressionFit = 9.856,837480, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 33,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.494,526312 (regressionFit = 9.494,526311, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 42,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.927,941305 (regressionFit = 9.927,941304, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 29,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.925,987144 (regressionFit = 9.925,987143, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 39,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.263,001734 (regressionFit = 9.263,001733, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 41,0/349,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.263,001734): medv(A) :- rm(A, 1).  [covers 41,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.836,718498 (regressionFit = 9.836,718497, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 33,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.929,209520 (regressionFit = 9.929,209518, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 47,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.862,651241 (regressionFit = 9.862,651240, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 35,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.879,285134 (regressionFit = 9.879,285133, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 43,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.532,352305 (regressionFit = 9.532,352304, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 38,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.928,117757 (regressionFit = 9.928,117756, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 39,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.905,174368 (regressionFit = 9.905,174367, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 36,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.874,848161 (regressionFit = 9.874,848160, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 31,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.931,617058 (regressionFit = 9.931,617057, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 33,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.931,247825 (regressionFit = 9.931,247824, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 40,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.899,739303 (regressionFit = 9.899,739302, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 29,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.930,256138 (regressionFit = 9.930,256137, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 45,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.895,430505 (regressionFit = 9.895,430503, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 34,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.771,469797 (regressionFit = 9.771,469796, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 25,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.909,074578 (regressionFit = 9.909,074577, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 44,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.872,558478 (regressionFit = 9.872,558477, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 12,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.801,866064 (regressionFit = 9.801,866063, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 96,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.791,754363 (regressionFit = 9.791,754362, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 29,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.924,120124 (regressionFit = 9.924,120123, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 13,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.864,339051 (regressionFit = 9.864,339050, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 83,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.900,796396 (regressionFit = 9.900,796395, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 58,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.858,274540 (regressionFit = 9.858,274539, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 296).  [covers 7,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.788,092639 (regressionFit = 9.788,092638, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 437).  [covers 14,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.403,935586 (regressionFit = 9.403,935585, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 193).  [covers 6,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.854,204828 (regressionFit = 9.854,204827, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 222).  [covers 4,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.896,417075 (regressionFit = 9.896,417074, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 287).  [covers 8,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.900,796396 (regressionFit = 9.900,796395, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 58,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.930,387122 (regressionFit = 9.930,387121, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 233).  [covers 8,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.921,924603 (regressionFit = 9.921,924602, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 35,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.736,775896 (regressionFit = 9.736,775895, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 7).  [covers 16,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.893,937652 (regressionFit = 9.893,937651, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 38,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.873,422447 (regressionFit = 9.873,422446, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 47,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.929,690764 (regressionFit = 9.929,690763, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 39,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.909,378814 (regressionFit = 9.909,378813, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 65,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.900,127719 (regressionFit = 9.900,127718, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 86,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.928,672112 (regressionFit = 9.928,672111, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 25,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.756,054767 (regressionFit = 9.756,054766, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 26,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.712,391634 (regressionFit = 9.712,391633, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 35,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.589,425198 (regressionFit = 9.589,425197, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 33,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.791,397426 (regressionFit = 9.791,397425, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 39,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.847,485495 (regressionFit = 9.847,485494, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 41,0/349,0 pos, 0,0/0,0 neg]
%     Score = -9.926,449093 (regressionFit = 9.926,449092, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 40,0/349,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 1).  [covers 41,0/349,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 1).  [covers 41,0/349,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -28,457.
% Will extend: medv(A) :- rm(A, 1).  [covers 41,0/349,0 pos, 0,0/0,0 neg]
Comparing variance: 33.488106396081406 to score=0.0025 #egs=41.0
Comparing variance: 25.616848607676488 to score=0.0025 #egs=308.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 41,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-33,488106)
%         ILP node to extend: medv(A) :- rm(A, 1).  [covers 41,0/349,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -33,488106) into position #1 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 308,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-25,616849)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -25,616849) into position #3 in the search queue (new size=4).

% Time for loop #3: 157 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      medv(A) :- rm(A, 1).  [covers 41,0/349,0 pos, 0,0/0,0 neg]
% This clause covers 41 positive examples, of which 41 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 1).  [covers 41,0/41,0 pos, 0,0/0,0 neg]'
%     Score = -9.263,001734 (regressionFit = 9.263,001733, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 41,0/41,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 3 9 10 15 18 25 29 33
% Gleaner: New best node found (score = -9.263,001734): medv(A) :- rm(A, 1).  [covers 41,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.372,849273 (regressionFit = 1.372,849271, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), crim(A, 2).  [covers 5,0/41,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.372,849273): medv(A) :- rm(A, 1), crim(A, 2).  [covers 5,0/41,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), crim(A, 5).  [covers 2,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.346,812481 (regressionFit = 1.346,812479, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), crim(A, 7).  [covers 5,0/41,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.346,812481): medv(A) :- rm(A, 1), crim(A, 7).  [covers 5,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.335,198364 (regressionFit = 1.335,198362, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), crim(A, 3).  [covers 7,0/41,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.335,198364): medv(A) :- rm(A, 1), crim(A, 3).  [covers 7,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.236,847831 (regressionFit = 1.236,847829, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 1), crim(A, 1).  [covers 10,0/41,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.236,847831): medv(A) :- rm(A, 1), crim(A, 1).  [covers 10,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.331,080327 (regressionFit = 1.331,080325, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), crim(A, 10).  [covers 3,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.095,771134 (regressionFit = 1.095,771132, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0).  [covers 21,0/41,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.095,771134): medv(A) :- rm(A, 1), zn(A, 0).  [covers 21,0/41,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 20).  [covers 1,0/41,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 60).  [covers 2,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.372,895794 (regressionFit = 1.372,895792, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), indus(A, 4).  [covers 7,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.362,861005 (regressionFit = 1.362,861003, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), indus(A, 2).  [covers 6,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.325,325013 (regressionFit = 1.325,325011, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), indus(A, 7).  [covers 3,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.361,370601 (regressionFit = 1.361,370598, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 1), indus(A, 1).  [covers 8,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.311,449905 (regressionFit = 1.311,449903, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), indus(A, 10).  [covers 4,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.022,579907 (regressionFit = 1.022,579905, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), chas(A, 0).  [covers 38,0/41,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.022,579907): medv(A) :- rm(A, 1), chas(A, 0).  [covers 38,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.345,689459 (regressionFit = 1.345,689457, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), nox(A, 3).  [covers 6,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.345,305383 (regressionFit = 1.345,305381, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), nox(A, 4).  [covers 4,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.371,637256 (regressionFit = 1.371,637254, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), nox(A, 2).  [covers 3,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.335,477058 (regressionFit = 1.335,477056, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), nox(A, 5).  [covers 11,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.338,850082 (regressionFit = 1.338,850080, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), nox(A, 6).  [covers 7,0/41,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), nox(A, 10).  [covers 2,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.372,142274 (regressionFit = 1.372,142272, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), age(A, 8).  [covers 9,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.348,257720 (regressionFit = 1.348,257718, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), age(A, 2).  [covers 5,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.372,236217 (regressionFit = 1.372,236215, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), age(A, 10).  [covers 7,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.328,339461 (regressionFit = 1.328,339459, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 1), age(A, 1).  [covers 7,0/41,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), age(A, 6).  [covers 2,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.310,515498 (regressionFit = 1.310,515496, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), dis(A, 6).  [covers 4,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.285,188172 (regressionFit = 1.285,188170, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), dis(A, 4).  [covers 8,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.352,480323 (regressionFit = 1.352,480321, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 1), dis(A, 1).  [covers 5,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.346,124140 (regressionFit = 1.346,124138, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), dis(A, 3).  [covers 8,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.292,337888 (regressionFit = 1.292,337886, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), dis(A, 5).  [covers 6,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.311,449905 (regressionFit = 1.311,449903, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), dis(A, 10).  [covers 4,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.349,845603 (regressionFit = 1.349,845601, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), rad(A, 5).  [covers 7,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.277,995422 (regressionFit = 1.277,995420, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), rad(A, 8).  [covers 4,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.355,279211 (regressionFit = 1.355,279209, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), rad(A, 3).  [covers 4,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.307,074684 (regressionFit = 1.307,074682, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), rad(A, 4).  [covers 12,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.317,675146 (regressionFit = 1.317,675144, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 1), rad(A, 1).  [covers 3,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.311,449905 (regressionFit = 1.311,449903, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), rad(A, 24).  [covers 4,0/41,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), tax(A, 296).  [covers 2,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.320,213898 (regressionFit = 1.320,213896, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), tax(A, 307).  [covers 5,0/41,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), tax(A, 223).  [covers 1,0/41,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), tax(A, 289).  [covers 2,0/41,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), tax(A, 422).  [covers 1,0/41,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), tax(A, 411).  [covers 1,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.311,449905 (regressionFit = 1.311,449903, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), tax(A, 666).  [covers 4,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.366,435207 (regressionFit = 1.366,435205, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), ptratio(A, 6).  [covers 10,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.363,570148 (regressionFit = 1.363,570146, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), ptratio(A, 3).  [covers 7,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.369,232114 (regressionFit = 1.369,232112, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 1), ptratio(A, 1).  [covers 9,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.311,449905 (regressionFit = 1.311,449903, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), ptratio(A, 10).  [covers 4,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.368,204641 (regressionFit = 1.368,204639, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), b(A, 6).  [covers 5,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.372,480990 (regressionFit = 1.372,480988, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 1), b(A, 1).  [covers 10,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.372,944417 (regressionFit = 1.372,944415, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), b(A, 5).  [covers 5,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.367,530281 (regressionFit = 1.367,530278, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), b(A, 3).  [covers 3,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.291,616165 (regressionFit = 1.291,616163, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), b(A, 8).  [covers 4,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.372,994528 (regressionFit = 1.372,994526, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 1), lstat(A, 1).  [covers 10,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.349,590312 (regressionFit = 1.349,590310, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), lstat(A, 9).  [covers 10,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.152,268060 (regressionFit = 1.152,268058, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), lstat(A, 3).  [covers 7,0/41,0 pos, 0,0/0,0 neg]
%     Score = -1.349,253347 (regressionFit = 1.349,253345, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), lstat(A, 2).  [covers 7,0/41,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), lstat(A, 5).  [covers 2,0/41,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 1), chas(A, 0).  [covers 38,0/41,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 1), chas(A, 0).  [covers 38,0/41,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -33,488.
% Will extend: medv(A) :- rm(A, 1), chas(A, 0).  [covers 38,0/41,0 pos, 0,0/0,0 neg]
Comparing variance: 17.46947117119766 to score=0.0025 #egs=38.0
Comparing variance: 119.57999999999997 to score=0.0025 #egs=3.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 38,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-17,469471)
%         ILP node to extend: medv(A) :- rm(A, 1), chas(A, 0).  [covers 38,0/41,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -17,469471) into the LAST position (#4) in the search queue.
%   Creating a FALSE-branch leaf because wgtedCountFalseBranchPos = 3,0 < 2.1 * minPosCov = 6,3

% Time for loop #4: 47 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      medv(A) :- rm(A, 1), chas(A, 0).  [covers 38,0/41,0 pos, 0,0/0,0 neg]
% This clause covers 38 positive examples, of which 38 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 4).  [covers 45,0/45,0 pos, 0,0/0,0 neg]'
%     Score = -11.198,930195 (regressionFit = 11.198,930194, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 45,0/45,0 pos, 0,0/0,0 neg]

% Have these 7 positive seeds: 9 15 20 31 35 40 42
% Gleaner: New best node found (score = -11.198,930195): medv(A) :- rm(A, 4).  [covers 45,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.237,094756 (regressionFit = 1.237,094754, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 1).  [covers 11,0/45,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.237,094756): medv(A) :- rm(A, 4), crim(A, 1).  [covers 11,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.259,543704 (regressionFit = 1.259,543702, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 5).  [covers 4,0/45,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 4).  [covers 1,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.148,455622 (regressionFit = 1.148,455620, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 9).  [covers 4,0/45,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.148,455622): medv(A) :- rm(A, 4), crim(A, 9).  [covers 4,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.075,855754 (regressionFit = 1.075,855752, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 2).  [covers 9,0/45,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.075,855754): medv(A) :- rm(A, 4), crim(A, 2).  [covers 9,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.154,938721 (regressionFit = 1.154,938719, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), crim(A, 3).  [covers 4,0/45,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 95).  [covers 2,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.207,127481 (regressionFit = 1.207,127479, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 20).  [covers 4,0/45,0 pos, 0,0/0,0 neg]
%     Score = -990,386045 (regressionFit = 990,386043, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0).  [covers 18,0/45,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -990,386045): medv(A) :- rm(A, 4), zn(A, 0).  [covers 18,0/45,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 75).  [covers 1,0/45,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 25).  [covers 1,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.252,911990 (regressionFit = 1.252,911988, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), indus(A, 1).  [covers 12,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.185,281651 (regressionFit = 1.185,281649, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 4), indus(A, 4).  [covers 13,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.111,355045 (regressionFit = 1.111,355043, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), indus(A, 10).  [covers 6,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.264,981828 (regressionFit = 1.264,981826, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), indus(A, 5).  [covers 5,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.264,164748 (regressionFit = 1.264,164746, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), chas(A, 0).  [covers 40,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.264,164748 (regressionFit = 1.264,164746, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), chas(A, 1).  [covers 5,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.208,572213 (regressionFit = 1.208,572211, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 6).  [covers 10,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.250,168058 (regressionFit = 1.250,168056, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 8).  [covers 3,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.260,985984 (regressionFit = 1.260,985982, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 2).  [covers 9,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.245,545641 (regressionFit = 1.245,545639, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), nox(A, 5).  [covers 7,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.165,420045 (regressionFit = 1.165,420043, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 10).  [covers 10,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.262,181452 (regressionFit = 1.262,181450, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 6).  [covers 3,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.159,998380 (regressionFit = 1.159,998377, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 8).  [covers 9,0/45,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 5).  [covers 2,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.266,375497 (regressionFit = 1.266,375495, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 1).  [covers 4,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.237,540077 (regressionFit = 1.237,540075, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), age(A, 3).  [covers 6,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.263,167150 (regressionFit = 1.263,167148, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 5).  [covers 10,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.193,341599 (regressionFit = 1.193,341597, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 8).  [covers 3,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.214,739414 (regressionFit = 1.214,739412, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 1).  [covers 3,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.261,719038 (regressionFit = 1.261,719036, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 10).  [covers 4,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.121,195878 (regressionFit = 1.121,195876, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 2).  [covers 6,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.259,689718 (regressionFit = 1.259,689716, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), dis(A, 3).  [covers 7,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.224,283481 (regressionFit = 1.224,283479, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 3).  [covers 8,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.240,795908 (regressionFit = 1.240,795906, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 5).  [covers 13,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.111,355045 (regressionFit = 1.111,355043, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 24).  [covers 6,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.215,758673 (regressionFit = 1.215,758671, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), rad(A, 8).  [covers 3,0/45,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 402).  [covers 2,0/45,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 264).  [covers 2,0/45,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 216).  [covers 2,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.111,355045 (regressionFit = 1.111,355043, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 666).  [covers 6,0/45,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 252).  [covers 1,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.244,472020 (regressionFit = 1.244,472018, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 222).  [covers 3,0/45,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), tax(A, 284).  [covers 1,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.258,916449 (regressionFit = 1.258,916447, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 6).  [covers 6,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.267,207843 (regressionFit = 1.267,207841, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 9).  [covers 4,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.151,025825 (regressionFit = 1.151,025822, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 1).  [covers 10,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.111,355045 (regressionFit = 1.111,355043, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 10).  [covers 6,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.265,954729 (regressionFit = 1.265,954727, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 3).  [covers 4,0/45,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), ptratio(A, 8).  [covers 2,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.206,847640 (regressionFit = 1.206,847638, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 1).  [covers 12,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.225,534221 (regressionFit = 1.225,534219, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), b(A, 2).  [covers 7,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.259,781338 (regressionFit = 1.259,781336, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 4), b(A, 4).  [covers 4,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.163,974850 (regressionFit = 1.163,974848, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), lstat(A, 3).  [covers 15,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.265,592325 (regressionFit = 1.265,592323, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), lstat(A, 9).  [covers 5,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.236,890595 (regressionFit = 1.236,890593, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), lstat(A, 1).  [covers 13,0/45,0 pos, 0,0/0,0 neg]
%     Score = -1.267,298974 (regressionFit = 1.267,298972, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), lstat(A, 2).  [covers 3,0/45,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 4), zn(A, 0).  [covers 18,0/45,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 4), zn(A, 0).  [covers 18,0/45,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -28,162.
% Will extend: medv(A) :- rm(A, 4), zn(A, 0).  [covers 18,0/45,0 pos, 0,0/0,0 neg]
Comparing variance: 35.23436863573748 to score=0.0025 #egs=18.0
Comparing variance: 13.191385459533615 to score=0.0025 #egs=27.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 18,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-35,234369)
%         ILP node to extend: medv(A) :- rm(A, 4), zn(A, 0).  [covers 18,0/45,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -35,234369) into position #1 in the search queue (new size=4).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 27,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-13,191385)
%         ILP node to extend: medv(A) :- rm(A, 4).  [covers 45,0/45,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -13,191385) into the LAST position (#5) in the search queue.

% Time for loop #5: 45 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #5, the best clause found is:
%      medv(A) :- rm(A, 4), zn(A, 0).  [covers 18,0/45,0 pos, 0,0/0,0 neg]
% This clause covers 18 positive examples, of which 18 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 4), zn(A, 0).  [covers 18,0/18,0 pos, 0,0/0,0 neg]'
%     Score = -990,386045 (regressionFit = 990,386043, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0).  [covers 18,0/18,0 pos, 0,0/0,0 neg]

% Have these 5 positive seeds: 2 5 6 9 16
% Gleaner: New best node found (score = -990,386045): medv(A) :- rm(A, 4), zn(A, 0).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -474,570665 (regressionFit = 474,570662, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), crim(A, 2).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -474,570665): medv(A) :- rm(A, 4), zn(A, 0), crim(A, 2).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), crim(A, 7).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), crim(A, 5).  [covers 2,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), crim(A, 10).  [covers 2,0/18,0 pos, 0,0/0,0 neg]
%     Score = -622,215305 (regressionFit = 622,215302, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), crim(A, 6).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
%     Score = -632,890745 (regressionFit = 632,890742, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), indus(A, 4).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
%     Score = -630,066089 (regressionFit = 630,066086, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), indus(A, 2).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
%     Score = -607,964070 (regressionFit = 607,964067, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), indus(A, 10).  [covers 6,0/18,0 pos, 0,0/0,0 neg]
%     Score = -621,692843 (regressionFit = 621,692840, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), chas(A, 0).  [covers 15,0/18,0 pos, 0,0/0,0 neg]
%     Score = -621,692843 (regressionFit = 621,692840, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), chas(A, 1).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
%     Score = -633,561945 (regressionFit = 633,561942, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), nox(A, 3).  [covers 4,0/18,0 pos, 0,0/0,0 neg]
%     Score = -630,009802 (regressionFit = 630,009799, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), nox(A, 10).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
%     Score = -558,278943 (regressionFit = 558,278940, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), nox(A, 4).  [covers 4,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), age(A, 4).  [covers 2,0/18,0 pos, 0,0/0,0 neg]
%     Score = -596,614177 (regressionFit = 596,614174, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), age(A, 9).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), age(A, 2).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -623,831217 (regressionFit = 623,831214, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), age(A, 7).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
%     Score = -542,860097 (regressionFit = 542,860094, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), dis(A, 6).  [covers 5,0/18,0 pos, 0,0/0,0 neg]
%     Score = -627,088478 (regressionFit = 627,088475, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), dis(A, 4).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
%     Score = -615,453275 (regressionFit = 615,453272, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), dis(A, 10).  [covers 4,0/18,0 pos, 0,0/0,0 neg]
%     Score = -633,891705 (regressionFit = 633,891702, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), rad(A, 5).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), rad(A, 8).  [covers 2,0/18,0 pos, 0,0/0,0 neg]
%     Score = -607,964070 (regressionFit = 607,964067, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), rad(A, 24).  [covers 6,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), rad(A, 2).  [covers 2,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), tax(A, 296).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), tax(A, 307).  [covers 2,0/18,0 pos, 0,0/0,0 neg]
%     Score = -607,964070 (regressionFit = 607,964067, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), tax(A, 666).  [covers 6,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), tax(A, 270).  [covers 2,0/18,0 pos, 0,0/0,0 neg]
%     Score = -634,216206 (regressionFit = 634,216203, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), ptratio(A, 6).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
%     Score = -607,964070 (regressionFit = 607,964067, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), ptratio(A, 10).  [covers 6,0/18,0 pos, 0,0/0,0 neg]
%     Score = -580,225828 (regressionFit = 580,225825, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), ptratio(A, 2).  [covers 5,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), b(A, 6).  [covers 2,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), b(A, 2).  [covers 2,0/18,0 pos, 0,0/0,0 neg]
%     Score = -582,125514 (regressionFit = 582,125510, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), b(A, 1).  [covers 5,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), lstat(A, 9).  [covers 2,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), lstat(A, 8).  [covers 2,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), lstat(A, 7).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -511,496859 (regressionFit = 511,496856, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), lstat(A, 1).  [covers 6,0/18,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 4), zn(A, 0), crim(A, 2).  [covers 3,0/18,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 4), zn(A, 0), crim(A, 2).  [covers 3,0/18,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -35,234.
% Will extend: medv(A) :- rm(A, 4), zn(A, 0), crim(A, 2).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
Comparing variance: 11.842222222222233 to score=0.0025 #egs=3.0
Comparing variance: 29.269599671464466 to score=0.0025 #egs=15.0
%   Creating a TRUE-branch leaf because length = 4 > 3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 15,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-29,269600)
%         ILP node to extend: medv(A) :- rm(A, 4), zn(A, 0).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -29,269600) into position #1 in the search queue (new size=5).

% Time for loop #6: 28 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      medv(A) :- rm(A, 4), zn(A, 0), crim(A, 2).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 4), zn(A, 0).  [covers 18,0/15,0 pos, 0,0/0,0 neg]'
%     Score = -990,386045 (regressionFit = 990,386043, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0).  [covers 15,0/15,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 1 2 3 4 7 8 9 11
% Gleaner: New best node found (score = -990,386045): medv(A) :- rm(A, 4), zn(A, 0).  [covers 15,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), crim(A, 5).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -401,648671 (regressionFit = 401,648668, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), crim(A, 6).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -401,648671): medv(A) :- rm(A, 4), zn(A, 0), crim(A, 6).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), crim(A, 7).  [covers 1,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), crim(A, 10).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -435,259643 (regressionFit = 435,259640, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), crim(A, 9).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), indus(A, 9).  [covers 1,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), indus(A, 1).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -438,794652 (regressionFit = 438,794649, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), indus(A, 2).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -437,629426 (regressionFit = 437,629423, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), indus(A, 10).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -400,711711 (regressionFit = 400,711708, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), chas(A, 0).  [covers 12,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -400,711711): medv(A) :- rm(A, 4), zn(A, 0), chas(A, 0).  [covers 12,0/15,0 pos, 0,0/0,0 neg]
%     Score = -400,711711 (regressionFit = 400,711708, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), chas(A, 1).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -381,923907 (regressionFit = 381,923904, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), nox(A, 7).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -381,923907): medv(A) :- rm(A, 4), zn(A, 0), nox(A, 7).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -401,648671 (regressionFit = 401,648668, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), nox(A, 4).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -438,854950 (regressionFit = 438,854947, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), nox(A, 3).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -438,808484 (regressionFit = 438,808481, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), nox(A, 10).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), age(A, 5).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), age(A, 1).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -425,504894 (regressionFit = 425,504891, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), age(A, 9).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), age(A, 2).  [covers 1,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), age(A, 7).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), age(A, 6).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), dis(A, 9).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -394,205984 (regressionFit = 394,205981, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), dis(A, 6).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -439,022638 (regressionFit = 439,022635, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), dis(A, 4).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -381,711725 (regressionFit = 381,711722, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), dis(A, 10).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -381,711725): medv(A) :- rm(A, 4), zn(A, 0), dis(A, 10).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), dis(A, 8).  [covers 1,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), rad(A, 5).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -436,245648 (regressionFit = 436,245645, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), rad(A, 3).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), rad(A, 8).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -437,629426 (regressionFit = 437,629423, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), rad(A, 24).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), tax(A, 403).  [covers 1,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), tax(A, 193).  [covers 1,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), tax(A, 307).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -437,629426 (regressionFit = 437,629423, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), tax(A, 666).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), ptratio(A, 9).  [covers 1,0/15,0 pos, 0,0/0,0 neg]
%     Score = -408,933374 (regressionFit = 408,933371, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), ptratio(A, 2).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), ptratio(A, 6).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -437,629426 (regressionFit = 437,629423, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), ptratio(A, 10).  [covers 6,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), b(A, 9).  [covers 1,0/15,0 pos, 0,0/0,0 neg]
%     Score = -398,909338 (regressionFit = 398,909335, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), b(A, 1).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), b(A, 2).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), b(A, 6).  [covers 1,0/15,0 pos, 0,0/0,0 neg]
%     Score = -352,639946 (regressionFit = 352,639942, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), b(A, 7).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -352,639946): medv(A) :- rm(A, 4), zn(A, 0), b(A, 7).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -438,685612 (regressionFit = 438,685609, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), lstat(A, 3).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -408,933374 (regressionFit = 408,933371, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), lstat(A, 1).  [covers 4,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), lstat(A, 8).  [covers 2,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), lstat(A, 7).  [covers 1,0/15,0 pos, 0,0/0,0 neg]
%     Score = -408,224911 (regressionFit = 408,224908, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), lstat(A, 5).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 4), zn(A, 0), lstat(A, 6).  [covers 1,0/15,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 4), zn(A, 0), b(A, 7).  [covers 3,0/15,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 4), zn(A, 0), b(A, 7).  [covers 3,0/15,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -29,270.
% Will extend: medv(A) :- rm(A, 4), zn(A, 0), b(A, 7).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #7: 33 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      medv(A) :- rm(A, 4), zn(A, 0), b(A, 7).  [covers 3,0/15,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 6 positive seeds: 21 49 74 101 148 200

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 308,0/308,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 308,0/308,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -7.883,199750 (regressionFit = 7.883,199749, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 36,0/308,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7.883,199750): medv(A) :- crim(A, 3).  [covers 36,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.758,517100 (regressionFit = 7.758,517098, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 38,0/308,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7.758,517100): medv(A) :- crim(A, 5).  [covers 38,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.888,435796 (regressionFit = 7.888,435795, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 27,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.889,561809 (regressionFit = 7.889,561808, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 41,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.889,741473 (regressionFit = 7.889,741472, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 28,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.813,679798 (regressionFit = 7.813,679797, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 37,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.687,529457 (regressionFit = 7.687,529456, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 12.5).  [covers 10,0/308,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7.687,529457): medv(A) :- zn(A, 12.5).  [covers 10,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.587,879010 (regressionFit = 7.587,879009, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 226,0/308,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7.587,879010): medv(A) :- zn(A, 0).  [covers 226,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.828,523251 (regressionFit = 7.828,523250, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 80).  [covers 9,0/308,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 55).  [covers 1,0/308,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 60).  [covers 1,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.718,781268 (regressionFit = 7.718,781267, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 44,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.726,786129 (regressionFit = 7.726,786128, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 12,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.790,791925 (regressionFit = 7.790,791924, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 28,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.887,289635 (regressionFit = 7.887,289634, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 38,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.561,557001 (regressionFit = 7.561,557000, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 290,0/308,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7.561,557001): medv(A) :- chas(A, 0).  [covers 290,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.561,557001 (regressionFit = 7.561,557000, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 18,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.887,150790 (regressionFit = 7.887,150789, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 33,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.887,753286 (regressionFit = 7.887,753285, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 28,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.850,052283 (regressionFit = 7.850,052282, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 31,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.449,799764 (regressionFit = 7.449,799763, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 38,0/308,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7.449,799764): medv(A) :- nox(A, 4).  [covers 38,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.886,898815 (regressionFit = 7.886,898814, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 38,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.861,564523 (regressionFit = 7.861,564522, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 47,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.848,564390 (regressionFit = 7.848,564389, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 37,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.876,052944 (regressionFit = 7.876,052943, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 43,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.882,971676 (regressionFit = 7.882,971675, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 29,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.826,489044 (regressionFit = 7.826,489043, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 29,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.884,508932 (regressionFit = 7.884,508931, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 31,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.828,383715 (regressionFit = 7.828,383713, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 27,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.882,875285 (regressionFit = 7.882,875284, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 32,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.736,057947 (regressionFit = 7.736,057946, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 35,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.889,916844 (regressionFit = 7.889,916843, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 29,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.652,223293 (regressionFit = 7.652,223292, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 30,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.880,912609 (regressionFit = 7.880,912608, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 33,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.815,114363 (regressionFit = 7.815,114362, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 76,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.859,306025 (regressionFit = 7.859,306024, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 19,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.884,389408 (regressionFit = 7.884,389407, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 17,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.841,450250 (regressionFit = 7.841,450249, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 9,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.799,198739 (regressionFit = 7.799,198738, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 84,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.750,493949 (regressionFit = 7.750,493948, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 311).  [covers 7,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.726,786129 (regressionFit = 7.726,786128, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 12,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.878,040686 (regressionFit = 7.878,040685, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 329).  [covers 3,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.784,762849 (regressionFit = 7.784,762848, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 32,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.865,033014 (regressionFit = 7.865,033013, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 300).  [covers 5,0/308,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 411).  [covers 1,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.843,302276 (regressionFit = 7.843,302275, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 26,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.777,876618 (regressionFit = 7.777,876617, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 30,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.889,797459 (regressionFit = 7.889,797458, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 32,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.819,017783 (regressionFit = 7.819,017782, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 40,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.858,090978 (regressionFit = 7.858,090977, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 76,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.883,755692 (regressionFit = 7.883,755691, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 32,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.887,732511 (regressionFit = 7.887,732510, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 33,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.884,450727 (regressionFit = 7.884,450726, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 39,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.887,049051 (regressionFit = 7.887,049050, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 27,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.866,195241 (regressionFit = 7.866,195240, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 36,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.821,734213 (regressionFit = 7.821,734212, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 29,0/308,0 pos, 0,0/0,0 neg]
%     Score = -7.780,548030 (regressionFit = 7.780,548029, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 34,0/308,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 4).  [covers 38,0/308,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 4).  [covers 38,0/308,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -25,617.
% Will extend: medv(A) :- nox(A, 4).  [covers 38,0/308,0 pos, 0,0/0,0 neg]
Comparing variance: 13.783740303330038 to score=0.0025 #egs=38.0
Comparing variance: 25.65191715351959 to score=0.0025 #egs=270.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 38,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-13,783740)
%         ILP node to extend: medv(A) :- nox(A, 4).  [covers 38,0/308,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -13,783740) into position #3 in the search queue (new size=4).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 270,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-25,651917)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 4 and with score = -25,651917) into position #1 in the search queue (new size=5).

% Time for loop #8: 110 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      medv(A) :- nox(A, 4).  [covers 38,0/308,0 pos, 0,0/0,0 neg]
% This clause covers 38 positive examples, of which 38 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (medv(A) :- nox(A, 4))
Created a leaf under (medv(A) :- nox(A, 9))
Created a leaf under (medv(A) :- chas(A, 0))
Created a leaf under (medv(A) :- nox(A, 4))
Created a leaf under (medv(A) :- zn(A, 0))

%%%%%  WILL-Produced Tree #2 @ 14:10:13 10/20/22.  %%%%%


% FOR medv(A):
%   if ( nox(A, 9) )
%   then return -4.343890004775831;  // std dev = 4,892, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   else if ( rm(A, 4) )
%   | then if ( zn(A, 0) )
%   | | then if ( crim(A, 2) )
%   | | | then return 7.682051282051282;  // std dev = 5,960, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( b(A, 7) )
%   | | | | then return -5.109255784865541;  // std dev = 9,835, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.8908849280800512;  // std dev = 15,998, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 6.086383442265793;  // std dev = 3,632, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( rm(A, 1) )
%   | | then if ( chas(A, 0) )
%   | | | then return 2.971386795100127;  // std dev = 4,180, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return 14.197816593886477;  // std dev = 18,940, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( nox(A, 4) )
%   | | | then return 2.6807942976352646;  // std dev = 3,713, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return -0.9543492950915202;  // std dev = 5,065, 270,000 (wgt'ed) examples reached here.  /* #pos=270 */


% Clauses:

medv(A, -4.343890004775831) :- 
     nox(A, 9), 
     !. // Clause #1.

medv(A, 7.682051282051282) :- 
     rm(A, 4), 
     zn(A, 0), 
     crim(A, 2), 
     !. // Clause #2.

medv(A, -5.109255784865541) :- 
     rm(A, 4), 
     zn(A, 0), 
     b(A, 7), 
     !. // Clause #3.

medv(A, 0.8908849280800512) :- 
     rm(A, 4), 
     zn(A, 0), 
     !. // Clause #4.

medv(A, 6.086383442265793) :- 
     rm(A, 4), 
     !. // Clause #5.

medv(A, 2.971386795100127) :- 
     rm(A, 1), 
     chas(A, 0), 
     !. // Clause #6.

medv(A, 14.197816593886477) :- 
     rm(A, 1), 
     !. // Clause #7.

medv(A, 2.6807942976352646) :- 
     nox(A, 4), 
     !. // Clause #8.

medv(A, -0.9543492950915202) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_medv(a, -4.343890004775831) :-  /* #pos=42 */ 
   nox(a, 9),
   !. // Flattened version of clause #1.

flattened_medv(a, 7.682051282051282) :-  /* #pos=3 */ 
   rm(a, 4),
   zn(a, 0),
   crim(a, 2),
   !. // Flattened version of clause #2.

flattened_medv(a, -5.109255784865541) :-  /* #pos=3 */ 
   rm(a, 4),
   zn(a, 0),
   b(a, 7),
   !. // Flattened version of clause #3.

flattened_medv(a, 0.8908849280800512) :-  /* #pos=12 */ 
   rm(a, 4),
   zn(a, 0),
   !. // Flattened version of clause #4.

flattened_medv(a, 6.086383442265793) :-  /* #pos=27 */ 
   rm(a, 4),
   !. // Flattened version of clause #5.

flattened_medv(a, 2.971386795100127) :-  /* #pos=38 */ 
   rm(a, 1),
   chas(a, 0),
   !. // Flattened version of clause #6.

flattened_medv(a, 14.197816593886477) :-  /* #pos=3 */ 
   rm(a, 1),
   !. // Flattened version of clause #7.

flattened_medv(a, 2.6807942976352646) :-  /* #pos=38 */ 
   nox(a, 4),
   !. // Flattened version of clause #8.

flattened_medv(underscore, -0.9543492950915202) :-  /* #pos=270 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   crim(a, 2)
%   rm(a, 4)
%   b(a, 7)
%   nox(a, 4)
%   nox(a, 9)
%   rm(a, 1)
%   zn(a, 0)
%   chas(a, 0)

% Saving model in: data/boston_housing/train/models/bRDNs/medv.model.ckpt
% Time taken to learn 2 trees is 1,998 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:25.616848607676488
Set score:0.0025
% Kept 436 of the 436 positive examples.
% Kept 0 of the 0 negative examples.
% Dataset size: 436
Computing probabilities
prob time:55 milliseconds
No hidden examples for : medv
Time to build dataset: 59 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:23.444162803863147
Set score:0.0025

% Have these 4 positive seeds: 103 271 331 393

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -10.216,436680 (regressionFit = 10.216,436679, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10.216,436680): medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.027,848650 (regressionFit = 10.027,848649, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 9).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10.027,848650): medv(A) :- crim(A, 9).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.203,758840 (regressionFit = 10.203,758839, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 60).  [covers 4,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 85).  [covers 2,0/436,0 pos, 0,0/0,0 neg]
%     Score = -9.999,096509 (regressionFit = 9.999,096508, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.999,096509): medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 100).  [covers 1,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.206,116895 (regressionFit = 10.206,116894, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.150,552880 (regressionFit = 10.150,552879, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.201,387581 (regressionFit = 10.201,387580, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.026,764851 (regressionFit = 10.026,764850, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 401,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.204,992556 (regressionFit = 10.204,992555, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.190,317673 (regressionFit = 10.190,317672, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.214,973750 (regressionFit = 10.214,973749, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.216,726330 (regressionFit = 10.216,726329, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.221,159248 (regressionFit = 10.221,159247, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.182,545946 (regressionFit = 10.182,545945, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.199,825781 (regressionFit = 10.199,825780, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.221,051247 (regressionFit = 10.221,051246, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.220,660280 (regressionFit = 10.220,660279, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.217,199048 (regressionFit = 10.217,199047, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.104,266177 (regressionFit = 10.104,266176, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -9.994,096721 (regressionFit = 9.994,096720, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.994,096721): medv(A) :- dis(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.202,288522 (regressionFit = 10.202,288521, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.159,346165 (regressionFit = 10.159,346164, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 15,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.132,821621 (regressionFit = 10.132,821620, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 101,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.150,552880 (regressionFit = 10.150,552879, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.152,863814 (regressionFit = 10.152,863813, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 265).  [covers 2,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 351).  [covers 1,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.150,552880 (regressionFit = 10.150,552879, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 256).  [covers 1,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.219,362550 (regressionFit = 10.219,362549, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.178,670403 (regressionFit = 10.178,670402, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.149,778012 (regressionFit = 10.149,778011, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 97,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.218,635215 (regressionFit = 10.218,635214, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.054,234178 (regressionFit = 10.054,234177, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.124,026211 (regressionFit = 10.124,026210, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.157,503633 (regressionFit = 10.157,503632, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.073,372635 (regressionFit = 10.073,372634, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
%     Score = -10.061,808467 (regressionFit = 10.061,808466, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- dis(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- dis(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: medv(A) :- dis(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
Comparing variance: 8.284628541175222 to score=0.0025 #egs=46.0
Comparing variance: 24.648727710714425 to score=0.0025 #egs=390.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 46,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-8,284629)
%         ILP node to extend: medv(A) :- dis(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -8,284629) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 390,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-24,648728)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -24,648728) into position #1 in the search queue (new size=2).

% Time for loop #1: 121 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      medv(A) :- dis(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
% This clause covers 46 positive examples, of which 46 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 12 16 81 98 209 230 286 365

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 390,0/390,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 390,0/390,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -9.611,611627 (regressionFit = 9.611,611626, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 39,0/390,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.611,611627): medv(A) :- crim(A, 3).  [covers 39,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.581,108665 (regressionFit = 9.581,108664, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 35,0/390,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.581,108665): medv(A) :- crim(A, 4).  [covers 35,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.511,967908 (regressionFit = 9.511,967907, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 47,0/390,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.511,967908): medv(A) :- crim(A, 2).  [covers 47,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.610,326144 (regressionFit = 9.610,326143, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 33,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.456,203358 (regressionFit = 9.456,203357, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 9).  [covers 32,0/390,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.456,203358): medv(A) :- crim(A, 9).  [covers 32,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.537,377970 (regressionFit = 9.537,377969, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 305,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.607,023912 (regressionFit = 9.607,023911, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 45).  [covers 6,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.365,306668 (regressionFit = 9.365,306667, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/390,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.365,306668): medv(A) :- indus(A, 3).  [covers 47,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.612,731659 (regressionFit = 9.612,731658, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.590,585022 (regressionFit = 9.590,585021, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 44,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.551,505926 (regressionFit = 9.551,505925, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 51,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.578,419307 (regressionFit = 9.578,419306, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 90,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.531,635779 (regressionFit = 9.531,635778, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 7).  [covers 17,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.456,898549 (regressionFit = 9.456,898548, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 355,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.604,153296 (regressionFit = 9.604,153295, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 43,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.512,908855 (regressionFit = 9.512,908854, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.608,868619 (regressionFit = 9.608,868618, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 32,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.605,578979 (regressionFit = 9.605,578978, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 43,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.612,195630 (regressionFit = 9.612,195628, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 10).  [covers 42,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.552,213354 (regressionFit = 9.552,213353, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 40,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.577,500227 (regressionFit = 9.577,500226, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 36,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.611,306419 (regressionFit = 9.611,306418, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 44,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.343,816996 (regressionFit = 9.343,816995, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 42,0/390,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9.343,816996): medv(A) :- rm(A, 7).  [covers 42,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.443,744794 (regressionFit = 9.443,744793, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 35,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.611,673356 (regressionFit = 9.611,673355, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 42,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.502,708210 (regressionFit = 9.502,708209, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 43,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.612,457027 (regressionFit = 9.612,457026, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 40,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.612,962307 (regressionFit = 9.612,962306, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 34,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.612,897391 (regressionFit = 9.612,897390, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 41,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.563,936394 (regressionFit = 9.563,936393, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 34,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.545,437036 (regressionFit = 9.545,437035, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 32,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.457,001191 (regressionFit = 9.457,001190, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 29,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.593,655724 (regressionFit = 9.593,655723, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 50,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.572,846705 (regressionFit = 9.572,846704, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 48,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.575,128904 (regressionFit = 9.575,128903, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 43,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.571,592842 (regressionFit = 9.571,592841, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 107,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.566,486451 (regressionFit = 9.566,486450, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 13,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.512,148340 (regressionFit = 9.512,148339, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 96,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.599,833791 (regressionFit = 9.599,833790, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 19,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.578,419307 (regressionFit = 9.578,419306, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 90,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.612,512730 (regressionFit = 9.612,512729, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 384).  [covers 11,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.610,284969 (regressionFit = 9.610,284968, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 432).  [covers 9,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.586,162778 (regressionFit = 9.586,162777, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 296).  [covers 8,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.593,741018 (regressionFit = 9.593,741017, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 398).  [covers 12,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.599,272448 (regressionFit = 9.599,272447, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 14,0/390,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 242).  [covers 2,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.578,419307 (regressionFit = 9.578,419306, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 90,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.469,836395 (regressionFit = 9.469,836394, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 32,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.572,344476 (regressionFit = 9.572,344475, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 45,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.574,405873 (regressionFit = 9.574,405872, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 38,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.612,435048 (regressionFit = 9.612,435047, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 36,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.608,136163 (regressionFit = 9.608,136162, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 47,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.579,299212 (regressionFit = 9.579,299211, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 97,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.609,735951 (regressionFit = 9.609,735950, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 35,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.591,482286 (regressionFit = 9.591,482285, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 92,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.610,253764 (regressionFit = 9.610,253763, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 41,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.612,000555 (regressionFit = 9.612,000554, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 25,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.612,880411 (regressionFit = 9.612,880410, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 38,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.535,397259 (regressionFit = 9.535,397258, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 38,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.516,239895 (regressionFit = 9.516,239894, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 35,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.419,721247 (regressionFit = 9.419,721246, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 37,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.450,354358 (regressionFit = 9.450,354357, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 43,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.442,878848 (regressionFit = 9.442,878847, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 38,0/390,0 pos, 0,0/0,0 neg]
%     Score = -9.532,428008 (regressionFit = 9.532,428007, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 38,0/390,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 7).  [covers 42,0/390,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 7).  [covers 42,0/390,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -24,649.
% Will extend: medv(A) :- rm(A, 7).  [covers 42,0/390,0 pos, 0,0/0,0 neg]
Comparing variance: 13.006649953061165 to score=0.0025 #egs=42.0
Comparing variance: 25.280280737088628 to score=0.0025 #egs=348.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 42,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-13,006650)
%         ILP node to extend: medv(A) :- rm(A, 7).  [covers 42,0/390,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -13,006650) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 348,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-25,280281)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -25,280281) into position #1 in the search queue (new size=3).

% Time for loop #2: 156 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      medv(A) :- rm(A, 7).  [covers 42,0/390,0 pos, 0,0/0,0 neg]
% This clause covers 42 positive examples, of which 42 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 15 50 90 99 182 195 219 233

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 348,0/348,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 348,0/348,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -8.778,344998 (regressionFit = 8.778,344997, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 25,0/348,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.778,344998): medv(A) :- crim(A, 4).  [covers 25,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.789,901079 (regressionFit = 8.789,901078, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 40,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.738,905067 (regressionFit = 8.738,905066, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 46,0/348,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.738,905067): medv(A) :- crim(A, 2).  [covers 46,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.731,804456 (regressionFit = 8.731,804455, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 42,0/348,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.731,804456): medv(A) :- crim(A, 7).  [covers 42,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.473,132291 (regressionFit = 8.473,132290, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 28,0/348,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.473,132291): medv(A) :- crim(A, 8).  [covers 28,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.648,757194 (regressionFit = 8.648,757193, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 9).  [covers 28,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.724,745936 (regressionFit = 8.724,745935, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 267,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.794,529068 (regressionFit = 8.794,529067, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 45).  [covers 6,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.797,537443 (regressionFit = 8.797,537442, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 31,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.743,681625 (regressionFit = 8.743,681624, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 26,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.784,545709 (regressionFit = 8.784,545708, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 43,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.653,086804 (regressionFit = 8.653,086803, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 37,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.766,141388 (regressionFit = 8.766,141387, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 79,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.670,360518 (regressionFit = 8.670,360517, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 315,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.670,360518 (regressionFit = 8.670,360517, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 33,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.746,095567 (regressionFit = 8.746,095566, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 37,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.792,403626 (regressionFit = 8.792,403625, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 36,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.791,440577 (regressionFit = 8.791,440576, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 30,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.797,501019 (regressionFit = 8.797,501018, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 44,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.676,444775 (regressionFit = 8.676,444774, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 30,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.762,599727 (regressionFit = 8.762,599726, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 40,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.763,898559 (regressionFit = 8.763,898558, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 43,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.796,996857 (regressionFit = 8.796,996856, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 44,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.670,127592 (regressionFit = 8.670,127591, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 35,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.797,537519 (regressionFit = 8.797,537518, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 37,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.760,890617 (regressionFit = 8.760,890616, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 38,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.747,504316 (regressionFit = 8.747,504315, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 34,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.746,817928 (regressionFit = 8.746,817927, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 36,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.769,724503 (regressionFit = 8.769,724502, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 34,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.795,082800 (regressionFit = 8.795,082799, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 34,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.796,507226 (regressionFit = 8.796,507225, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 38,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.797,528709 (regressionFit = 8.797,528708, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 41,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.640,636007 (regressionFit = 8.640,636006, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 27,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.752,224353 (regressionFit = 8.752,224352, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 44,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.669,045963 (regressionFit = 8.669,045962, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 44,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.772,255075 (regressionFit = 8.772,255074, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 41,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.792,293633 (regressionFit = 8.792,293632, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 42,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.782,887445 (regressionFit = 8.782,887444, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 46,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.756,798758 (regressionFit = 8.756,798757, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 30,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.733,938741 (regressionFit = 8.733,938740, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 12,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.775,822953 (regressionFit = 8.775,822952, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 101,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.761,609338 (regressionFit = 8.761,609337, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 78,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.766,141388 (regressionFit = 8.766,141387, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 79,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.791,790490 (regressionFit = 8.791,790489, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 432).  [covers 8,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.743,681625 (regressionFit = 8.743,681624, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 26,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.786,114257 (regressionFit = 8.786,114256, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 398).  [covers 12,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.795,450805 (regressionFit = 8.795,450804, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 277).  [covers 9,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.794,223931 (regressionFit = 8.794,223930, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 11,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.795,276825 (regressionFit = 8.795,276824, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 287).  [covers 7,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.766,141388 (regressionFit = 8.766,141387, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 79,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.777,096159 (regressionFit = 8.777,096158, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 40,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.728,455183 (regressionFit = 8.728,455182, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 44,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.797,459474 (regressionFit = 8.797,459473, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 33,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.796,112758 (regressionFit = 8.796,112757, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 43,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.790,266399 (regressionFit = 8.790,266398, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 30,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.769,779130 (regressionFit = 8.769,779129, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 86,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.770,079962 (regressionFit = 8.770,079961, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 83,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.758,791697 (regressionFit = 8.758,791696, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 30,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.796,547419 (regressionFit = 8.796,547418, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 34,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.796,372270 (regressionFit = 8.796,372269, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 38,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.520,368134 (regressionFit = 8.520,368133, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 34,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.691,533106 (regressionFit = 8.691,533105, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 27,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.797,225806 (regressionFit = 8.797,225805, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 33,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.680,287295 (regressionFit = 8.680,287294, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 43,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.797,354904 (regressionFit = 8.797,354903, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 38,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.746,409833 (regressionFit = 8.746,409832, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 38,0/348,0 pos, 0,0/0,0 neg]
%     Score = -8.729,740776 (regressionFit = 8.729,740775, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 34,0/348,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- crim(A, 8).  [covers 28,0/348,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- crim(A, 8).  [covers 28,0/348,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -25,280.
% Will extend: medv(A) :- crim(A, 8).  [covers 28,0/348,0 pos, 0,0/0,0 neg]
Comparing variance: 48.25960424272119 to score=0.0025 #egs=28.0
Comparing variance: 22.255823036409662 to score=0.0025 #egs=320.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 28,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-48,259604)
%         ILP node to extend: medv(A) :- crim(A, 8).  [covers 28,0/348,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -48,259604) into position #1 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 320,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-22,255823)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -22,255823) into position #2 in the search queue (new size=4).

% Time for loop #3: 144 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      medv(A) :- crim(A, 8).  [covers 28,0/348,0 pos, 0,0/0,0 neg]
% This clause covers 28 positive examples, of which 28 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- crim(A, 8).  [covers 28,0/28,0 pos, 0,0/0,0 neg]'
%     Score = -8.473,132291 (regressionFit = 8.473,132290, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 28,0/28,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 1 2 8 10 11 15 18 21
% Gleaner: New best node found (score = -8.473,132291): medv(A) :- crim(A, 8).  [covers 28,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), zn(A, 0).  [covers 28,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.080,902617 (regressionFit = 1.080,902615, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), indus(A, 9).  [covers 15,0/28,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.080,902617): medv(A) :- crim(A, 8), indus(A, 9).  [covers 15,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), indus(A, 6).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -977,276847 (regressionFit = 977,276845, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), indus(A, 10).  [covers 12,0/28,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -977,276847): medv(A) :- crim(A, 8), indus(A, 10).  [covers 12,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.312,305155 (regressionFit = 1.312,305153, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), chas(A, 0).  [covers 22,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.312,305155 (regressionFit = 1.312,305153, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), chas(A, 1).  [covers 6,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.208,554648 (regressionFit = 1.208,554646, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), nox(A, 9).  [covers 17,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.351,204899 (regressionFit = 1.351,204897, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), nox(A, 7).  [covers 7,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), nox(A, 1).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.349,187475 (regressionFit = 1.349,187473, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), rm(A, 9).  [covers 11,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.342,284444 (regressionFit = 1.342,284442, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), rm(A, 3).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.348,312344 (regressionFit = 1.348,312342, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), rm(A, 6).  [covers 5,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.324,532438 (regressionFit = 1.324,532436, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), age(A, 6).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.323,603844 (regressionFit = 1.323,603842, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), age(A, 5).  [covers 7,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.330,614358 (regressionFit = 1.330,614356, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), age(A, 7).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- crim(A, 8), age(A, 8).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.350,653609 (regressionFit = 1.350,653607, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), age(A, 2).  [covers 5,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.350,906940 (regressionFit = 1.350,906937, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), dis(A, 10).  [covers 8,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.291,939429 (regressionFit = 1.291,939427, penalties=2.0300000000000005E-6) for clause:  medv(A) :- crim(A, 8), dis(A, 8).  [covers 5,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.351,050891 (regressionFit = 1.351,050888, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), dis(A, 7).  [covers 10,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.080,902617 (regressionFit = 1.080,902615, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), rad(A, 5).  [covers 15,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), rad(A, 4).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -977,276847 (regressionFit = 977,276845, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), rad(A, 24).  [covers 12,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.080,902617 (regressionFit = 1.080,902615, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), tax(A, 403).  [covers 15,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), tax(A, 304).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -977,276847 (regressionFit = 977,276845, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), tax(A, 666).  [covers 12,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.080,902617 (regressionFit = 1.080,902615, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), ptratio(A, 9).  [covers 15,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), ptratio(A, 3).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -977,276847 (regressionFit = 977,276845, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), ptratio(A, 10).  [covers 12,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.215,399700 (regressionFit = 1.215,399698, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), b(A, 1).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.335,039799 (regressionFit = 1.335,039797, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), b(A, 6).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.298,436528 (regressionFit = 1.298,436526, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), b(A, 7).  [covers 5,0/28,0 pos, 0,0/0,0 neg]
%     Score = -791,755125 (regressionFit = 791,755123, penalties=2.0300000000000005E-6) for clause:  medv(A) :- crim(A, 8), b(A, 8).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -791,755125): medv(A) :- crim(A, 8), b(A, 8).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.318,443707 (regressionFit = 1.318,443705, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), b(A, 9).  [covers 9,0/28,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), b(A, 5).  [covers 1,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.123,697547 (regressionFit = 1.123,697545, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), lstat(A, 6).  [covers 6,0/28,0 pos, 0,0/0,0 neg]
%     Score = -990,779808 (regressionFit = 990,779806, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), lstat(A, 3).  [covers 3,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.350,221255 (regressionFit = 1.350,221253, penalties=2.0300000000000005E-6) for clause:  medv(A) :- crim(A, 8), lstat(A, 8).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
%     Score = -1.345,917407 (regressionFit = 1.345,917405, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), lstat(A, 4).  [covers 6,0/28,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- crim(A, 8), b(A, 8).  [covers 4,0/28,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- crim(A, 8), b(A, 8).  [covers 4,0/28,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -48,260.
% Will extend: medv(A) :- crim(A, 8), b(A, 8).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
Comparing variance: 89.73229289256795 to score=0.0025 #egs=4.0
Comparing variance: 18.03441464938913 to score=0.0025 #egs=24.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 4,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 24,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-18,034415)
%         ILP node to extend: medv(A) :- crim(A, 8).  [covers 28,0/28,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -18,034415) into position #2 in the search queue (new size=4).

% Time for loop #4: 32 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      medv(A) :- crim(A, 8), b(A, 8).  [covers 4,0/28,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 22 26 56 95 111 119 147 293

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 320,0/320,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 320,0/320,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -7.115,877711 (regressionFit = 7.115,877710, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 36,0/320,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7.115,877711): medv(A) :- crim(A, 3).  [covers 36,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.025,782908 (regressionFit = 7.025,782907, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 46,0/320,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7.025,782908): medv(A) :- crim(A, 2).  [covers 46,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.121,143810 (regressionFit = 7.121,143809, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 40,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.025,130911 (regressionFit = 7.025,130910, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 12.5).  [covers 8,0/320,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7.025,130911): medv(A) :- zn(A, 12.5).  [covers 8,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.089,679244 (regressionFit = 7.089,679243, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 239,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.027,555553 (regressionFit = 7.027,555552, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 30).  [covers 4,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.017,118234 (regressionFit = 7.017,118233, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 37,0/320,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7.017,118234): medv(A) :- indus(A, 3).  [covers 37,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.100,822596 (regressionFit = 7.100,822595, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 16,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.090,055960 (regressionFit = 7.090,055959, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 43,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.037,450137 (regressionFit = 7.037,450136, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 7).  [covers 16,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.086,248719 (regressionFit = 7.086,248718, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 46,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.083,485689 (regressionFit = 7.083,485688, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 27,0/320,0 pos, 0,0/0,0 neg]
%     Score = -6.959,706489 (regressionFit = 6.959,706488, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 293,0/320,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6.959,706489): medv(A) :- chas(A, 0).  [covers 293,0/320,0 pos, 0,0/0,0 neg]
%     Score = -6.959,706489 (regressionFit = 6.959,706488, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 27,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.118,852865 (regressionFit = 7.118,852864, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 41,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.121,689507 (regressionFit = 7.121,689505, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 21,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.099,085518 (regressionFit = 7.099,085517, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 36,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.121,164021 (regressionFit = 7.121,164020, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 30,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.078,167234 (regressionFit = 7.078,167233, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 37,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.111,073158 (regressionFit = 7.111,073157, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 37,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.121,720001 (regressionFit = 7.121,720000, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 41,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.119,494301 (regressionFit = 7.119,494300, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 36,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.114,865968 (regressionFit = 7.114,865967, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 33,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.118,872021 (regressionFit = 7.118,872020, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 29,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.069,795240 (regressionFit = 7.069,795239, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 29,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.076,157308 (regressionFit = 7.076,157307, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 30,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.121,425392 (regressionFit = 7.121,425391, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 36,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.118,553205 (regressionFit = 7.118,553204, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 29,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.034,103870 (regressionFit = 7.034,103869, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 44,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.106,474110 (regressionFit = 7.106,474109, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 32,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.073,546246 (regressionFit = 7.073,546245, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 29,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.121,762206 (regressionFit = 7.121,762205, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 42,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.112,257569 (regressionFit = 7.112,257568, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 41,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.086,500653 (regressionFit = 7.086,500652, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 46,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.067,540337 (regressionFit = 7.067,540336, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 86,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.114,230506 (regressionFit = 7.114,230505, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 18,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.095,647165 (regressionFit = 7.095,647164, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 19,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.073,157649 (regressionFit = 7.073,157648, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 12,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.114,568156 (regressionFit = 7.114,568155, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 77,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.042,240628 (regressionFit = 7.042,240627, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 311).  [covers 6,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.121,478049 (regressionFit = 7.121,478048, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 188).  [covers 6,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.094,988638 (regressionFit = 7.094,988637, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 296).  [covers 8,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.093,292858 (regressionFit = 7.093,292857, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 276).  [covers 9,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.032,263561 (regressionFit = 7.032,263560, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 32,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.027,555553 (regressionFit = 7.027,555552, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 300).  [covers 4,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.119,756727 (regressionFit = 7.119,756726, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 33,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.120,730179 (regressionFit = 7.120,730178, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 30,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.095,733878 (regressionFit = 7.095,733877, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 37,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.066,826888 (regressionFit = 7.066,826887, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 24,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.120,351118 (regressionFit = 7.120,351117, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 80,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.050,896030 (regressionFit = 7.050,896029, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 30,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.111,222159 (regressionFit = 7.111,222158, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 31,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.120,588630 (regressionFit = 7.120,588629, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 39,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.115,786573 (regressionFit = 7.115,786572, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 31,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.094,026210 (regressionFit = 7.094,026209, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 21,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.118,281595 (regressionFit = 7.118,281594, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 22,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.121,279975 (regressionFit = 7.121,279974, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 27,0/320,0 pos, 0,0/0,0 neg]
%     Score = -6.838,899555 (regressionFit = 6.838,899554, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 35,0/320,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6.838,899555): medv(A) :- lstat(A, 6).  [covers 35,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.121,613896 (regressionFit = 7.121,613895, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 34,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.034,367279 (regressionFit = 7.034,367278, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 25,0/320,0 pos, 0,0/0,0 neg]
%     Score = -7.082,681517 (regressionFit = 7.082,681516, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 40,0/320,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 6).  [covers 35,0/320,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 6).  [covers 35,0/320,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -22,256.
% Will extend: medv(A) :- lstat(A, 6).  [covers 35,0/320,0 pos, 0,0/0,0 neg]
Comparing variance: 9.120163030549566 to score=0.0025 #egs=35.0
Comparing variance: 22.876118766093 to score=0.0025 #egs=285.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 35,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-9,120163)
%         ILP node to extend: medv(A) :- lstat(A, 6).  [covers 35,0/320,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -9,120163) into position #3 in the search queue (new size=4).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 285,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-22,876119)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 4 and with score = -22,876119) into position #1 in the search queue (new size=5).

% Time for loop #5: 137 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #5, the best clause found is:
%      medv(A) :- lstat(A, 6).  [covers 35,0/320,0 pos, 0,0/0,0 neg]
% This clause covers 35 positive examples, of which 35 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 7 positive seeds: 17 35 45 70 90 130 131

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 285,0/285,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 285,0/285,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -6.507,347288 (regressionFit = 6.507,347287, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 24,0/285,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6.507,347288): medv(A) :- crim(A, 4).  [covers 24,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.471,064373 (regressionFit = 6.471,064372, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 39,0/285,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6.471,064373): medv(A) :- crim(A, 7).  [covers 39,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.518,760962 (regressionFit = 6.518,760961, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 38,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.518,945199 (regressionFit = 6.518,945198, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 35,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.463,981721 (regressionFit = 6.463,981720, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 46,0/285,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6.463,981721): medv(A) :- crim(A, 2).  [covers 46,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.433,194569 (regressionFit = 6.433,194568, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 204,0/285,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6.433,194569): medv(A) :- zn(A, 0).  [covers 204,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.519,661306 (regressionFit = 6.519,661305, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 20).  [covers 21,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.517,595603 (regressionFit = 6.517,595602, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 28,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.513,910802 (regressionFit = 6.513,910801, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 13,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.434,907355 (regressionFit = 6.434,907354, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 11,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.390,243241 (regressionFit = 6.390,243240, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 36,0/285,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6.390,243241): medv(A) :- indus(A, 3).  [covers 36,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.457,902803 (regressionFit = 6.457,902802, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 7).  [covers 16,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.461,688867 (regressionFit = 6.461,688866, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 45,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.372,960515 (regressionFit = 6.372,960514, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 259,0/285,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6.372,960515): medv(A) :- chas(A, 0).  [covers 259,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.372,960515 (regressionFit = 6.372,960514, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 26,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.486,524610 (regressionFit = 6.486,524609, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 35,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.314,315456 (regressionFit = 6.314,315455, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 23,0/285,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6.314,315456): medv(A) :- nox(A, 8).  [covers 23,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.518,917561 (regressionFit = 6.518,917560, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 19,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.516,742034 (regressionFit = 6.516,742033, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 39,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.519,625072 (regressionFit = 6.519,625071, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 31,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.517,654345 (regressionFit = 6.517,654344, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 29,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.416,169995 (regressionFit = 6.416,169994, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 33,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.493,444362 (regressionFit = 6.493,444361, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 12,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.509,510250 (regressionFit = 6.509,510249, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 23,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.515,659640 (regressionFit = 6.515,659639, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 24,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.495,401568 (regressionFit = 6.495,401567, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 24,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.439,801456 (regressionFit = 6.439,801455, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 29,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.517,596257 (regressionFit = 6.517,596256, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 36,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.516,238376 (regressionFit = 6.516,238375, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 34,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.462,231405 (regressionFit = 6.462,231404, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 17,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.516,484942 (regressionFit = 6.516,484941, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 23,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.516,023358 (regressionFit = 6.516,023357, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 40,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.493,463464 (regressionFit = 6.493,463463, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 29,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.501,353302 (regressionFit = 6.501,353301, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 40,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.453,074496 (regressionFit = 6.453,074495, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 12,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.510,105296 (regressionFit = 6.510,105295, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 72,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.504,597447 (regressionFit = 6.504,597446, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 86,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.381,743462 (regressionFit = 6.381,743461, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 27,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.513,294763 (regressionFit = 6.513,294762, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 432).  [covers 8,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.504,614781 (regressionFit = 6.504,614780, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 437).  [covers 8,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.434,907355 (regressionFit = 6.434,907354, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 11,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.412,520523 (regressionFit = 6.412,520522, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 31,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.500,770764 (regressionFit = 6.500,770763, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 276).  [covers 9,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.508,316645 (regressionFit = 6.508,316644, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 223).  [covers 5,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.491,380940 (regressionFit = 6.491,380939, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 39,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.504,614781 (regressionFit = 6.504,614780, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 7).  [covers 8,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.443,030208 (regressionFit = 6.443,030207, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 29,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.458,621474 (regressionFit = 6.458,621472, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 23,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.519,389822 (regressionFit = 6.519,389820, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 33,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.513,998158 (regressionFit = 6.513,998157, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 40,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.489,431032 (regressionFit = 6.489,431031, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 17,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.519,684262 (regressionFit = 6.519,684261, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 35,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.367,073732 (regressionFit = 6.367,073731, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 17,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.519,505049 (regressionFit = 6.519,505048, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 67,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.508,761203 (regressionFit = 6.508,761202, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 30,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.395,859970 (regressionFit = 6.395,859969, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 25,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.491,248626 (regressionFit = 6.491,248625, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 26,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.344,372558 (regressionFit = 6.344,372557, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 36,0/285,0 pos, 0,0/0,0 neg]
%     Score = -6.513,100002 (regressionFit = 6.513,100001, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 27,0/285,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 8).  [covers 23,0/285,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 8).  [covers 23,0/285,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -22,876.
% Will extend: medv(A) :- nox(A, 8).  [covers 23,0/285,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #6: 111 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      medv(A) :- nox(A, 8).  [covers 23,0/285,0 pos, 0,0/0,0 neg]
% This clause covers 23 positive examples, of which 23 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- crim(A, 8).  [covers 28,0/24,0 pos, 0,0/0,0 neg]'
%     Score = -8.473,132291 (regressionFit = 8.473,132290, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 24,0/24,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 1 2 3 4 7 8 13 14
% Gleaner: New best node found (score = -8.473,132291): medv(A) :- crim(A, 8).  [covers 24,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), zn(A, 0).  [covers 24,0/24,0 pos, 0,0/0,0 neg]
%     Score = -363,880253 (regressionFit = 363,880251, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), indus(A, 9).  [covers 14,0/24,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -363,880253): medv(A) :- crim(A, 8), indus(A, 9).  [covers 14,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), indus(A, 6).  [covers 1,0/24,0 pos, 0,0/0,0 neg]
%     Score = -431,319802 (regressionFit = 431,319800, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), chas(A, 0).  [covers 18,0/24,0 pos, 0,0/0,0 neg]
%     Score = -431,319802 (regressionFit = 431,319800, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), chas(A, 1).  [covers 6,0/24,0 pos, 0,0/0,0 neg]
%     Score = -424,372491 (regressionFit = 424,372489, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), nox(A, 9).  [covers 16,0/24,0 pos, 0,0/0,0 neg]
%     Score = -413,530887 (regressionFit = 413,530885, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), nox(A, 7).  [covers 6,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), nox(A, 1).  [covers 1,0/24,0 pos, 0,0/0,0 neg]
%     Score = -407,601013 (regressionFit = 407,601011, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), rm(A, 9).  [covers 10,0/24,0 pos, 0,0/0,0 neg]
%     Score = -424,789694 (regressionFit = 424,789692, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), rm(A, 6).  [covers 5,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), rm(A, 3).  [covers 2,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- crim(A, 8), rm(A, 8).  [covers 2,0/24,0 pos, 0,0/0,0 neg]
%     Score = -381,545167 (regressionFit = 381,545165, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), age(A, 6).  [covers 3,0/24,0 pos, 0,0/0,0 neg]
%     Score = -430,386504 (regressionFit = 430,386502, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), age(A, 5).  [covers 6,0/24,0 pos, 0,0/0,0 neg]
%     Score = -432,452714 (regressionFit = 432,452712, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), age(A, 7).  [covers 4,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- crim(A, 8), age(A, 8).  [covers 1,0/24,0 pos, 0,0/0,0 neg]
%     Score = -401,622322 (regressionFit = 401,622320, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), dis(A, 10).  [covers 7,0/24,0 pos, 0,0/0,0 neg]
%     Score = -394,481177 (regressionFit = 394,481175, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), dis(A, 9).  [covers 4,0/24,0 pos, 0,0/0,0 neg]
%     Score = -402,115719 (regressionFit = 402,115717, penalties=2.0300000000000005E-6) for clause:  medv(A) :- crim(A, 8), dis(A, 8).  [covers 3,0/24,0 pos, 0,0/0,0 neg]
%     Score = -414,331148 (regressionFit = 414,331146, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), dis(A, 7).  [covers 9,0/24,0 pos, 0,0/0,0 neg]
%     Score = -363,880253 (regressionFit = 363,880251, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), rad(A, 5).  [covers 14,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), rad(A, 4).  [covers 1,0/24,0 pos, 0,0/0,0 neg]
%     Score = -363,880253 (regressionFit = 363,880251, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), tax(A, 403).  [covers 14,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), tax(A, 304).  [covers 1,0/24,0 pos, 0,0/0,0 neg]
%     Score = -363,880253 (regressionFit = 363,880251, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), ptratio(A, 9).  [covers 14,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), ptratio(A, 3).  [covers 1,0/24,0 pos, 0,0/0,0 neg]
%     Score = -362,341748 (regressionFit = 362,341746, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), b(A, 1).  [covers 3,0/24,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -362,341748): medv(A) :- crim(A, 8), b(A, 1).  [covers 3,0/24,0 pos, 0,0/0,0 neg]
%     Score = -424,886891 (regressionFit = 424,886889, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), b(A, 7).  [covers 5,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), b(A, 2).  [covers 1,0/24,0 pos, 0,0/0,0 neg]
%     Score = -377,344498 (regressionFit = 377,344496, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), b(A, 6).  [covers 3,0/24,0 pos, 0,0/0,0 neg]
%     Score = -431,913221 (regressionFit = 431,913219, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), b(A, 9).  [covers 9,0/24,0 pos, 0,0/0,0 neg]
%     Score = -327,173577 (regressionFit = 327,173575, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), lstat(A, 6).  [covers 6,0/24,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -327,173577): medv(A) :- crim(A, 8), lstat(A, 6).  [covers 6,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), lstat(A, 7).  [covers 2,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), lstat(A, 3).  [covers 1,0/24,0 pos, 0,0/0,0 neg]
%     Score = -425,019726 (regressionFit = 425,019724, penalties=2.0500000000000003E-6) for clause:  medv(A) :- crim(A, 8), lstat(A, 4).  [covers 6,0/24,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- crim(A, 8), lstat(A, 6).  [covers 6,0/24,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- crim(A, 8), lstat(A, 6).  [covers 6,0/24,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -18,034.
% Will extend: medv(A) :- crim(A, 8), lstat(A, 6).  [covers 6,0/24,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #7: 22 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      medv(A) :- crim(A, 8), lstat(A, 6).  [covers 6,0/24,0 pos, 0,0/0,0 neg]
% This clause covers 6 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 7).  [covers 42,0/42,0 pos, 0,0/0,0 neg]'
%     Score = -9.343,816996 (regressionFit = 9.343,816995, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 42,0/42,0 pos, 0,0/0,0 neg]

% Have these 7 positive seeds: 2 9 18 22 24 29 36
% Gleaner: New best node found (score = -9.343,816996): medv(A) :- rm(A, 7).  [covers 42,0/42,0 pos, 0,0/0,0 neg]
%     Score = -542,490750 (regressionFit = 542,490748, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 7), crim(A, 7).  [covers 3,0/42,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -542,490750): medv(A) :- rm(A, 7), crim(A, 7).  [covers 3,0/42,0 pos, 0,0/0,0 neg]
%     Score = -511,987786 (regressionFit = 511,987784, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), crim(A, 8).  [covers 4,0/42,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -511,987786): medv(A) :- rm(A, 7), crim(A, 8).  [covers 4,0/42,0 pos, 0,0/0,0 neg]
%     Score = -546,260819 (regressionFit = 546,260817, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), crim(A, 3).  [covers 3,0/42,0 pos, 0,0/0,0 neg]
%     Score = -501,269212 (regressionFit = 501,269210, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), crim(A, 5).  [covers 9,0/42,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -501,269212): medv(A) :- rm(A, 7), crim(A, 5).  [covers 9,0/42,0 pos, 0,0/0,0 neg]
%     Score = -545,785340 (regressionFit = 545,785338, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), crim(A, 10).  [covers 6,0/42,0 pos, 0,0/0,0 neg]
%     Score = -541,671588 (regressionFit = 541,671586, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), crim(A, 4).  [covers 10,0/42,0 pos, 0,0/0,0 neg]
%     Score = -462,079182 (regressionFit = 462,079180, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), zn(A, 0).  [covers 38,0/42,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -462,079182): medv(A) :- rm(A, 7), zn(A, 0).  [covers 38,0/42,0 pos, 0,0/0,0 neg]
%     Score = -535,711880 (regressionFit = 535,711878, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), indus(A, 8).  [covers 5,0/42,0 pos, 0,0/0,0 neg]
%     Score = -521,220117 (regressionFit = 521,220115, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), indus(A, 9).  [covers 3,0/42,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 7), indus(A, 7).  [covers 1,0/42,0 pos, 0,0/0,0 neg]
%     Score = -499,693715 (regressionFit = 499,693713, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), indus(A, 3).  [covers 10,0/42,0 pos, 0,0/0,0 neg]
%     Score = -537,063651 (regressionFit = 537,063649, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), indus(A, 10).  [covers 11,0/42,0 pos, 0,0/0,0 neg]
%     Score = -544,314704 (regressionFit = 544,314702, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), indus(A, 2).  [covers 5,0/42,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), chas(A, 0).  [covers 40,0/42,0 pos, 0,0/0,0 neg]
%     Score = -509,621880 (regressionFit = 509,621878, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 7), nox(A, 7).  [covers 4,0/42,0 pos, 0,0/0,0 neg]
%     Score = -538,289440 (regressionFit = 538,289438, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), nox(A, 9).  [covers 6,0/42,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), nox(A, 5).  [covers 2,0/42,0 pos, 0,0/0,0 neg]
%     Score = -537,485446 (regressionFit = 537,485444, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), nox(A, 4).  [covers 4,0/42,0 pos, 0,0/0,0 neg]
%     Score = -533,557846 (regressionFit = 533,557844, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), nox(A, 1).  [covers 10,0/42,0 pos, 0,0/0,0 neg]
%     Score = -531,313920 (regressionFit = 531,313917, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), nox(A, 8).  [covers 6,0/42,0 pos, 0,0/0,0 neg]
%     Score = -531,175663 (regressionFit = 531,175661, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), nox(A, 2).  [covers 3,0/42,0 pos, 0,0/0,0 neg]
%     Score = -518,276547 (regressionFit = 518,276545, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 7), age(A, 7).  [covers 9,0/42,0 pos, 0,0/0,0 neg]
%     Score = -523,980466 (regressionFit = 523,980464, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), age(A, 5).  [covers 5,0/42,0 pos, 0,0/0,0 neg]
%     Score = -543,981244 (regressionFit = 543,981241, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), age(A, 1).  [covers 6,0/42,0 pos, 0,0/0,0 neg]
%     Score = -545,047148 (regressionFit = 545,047146, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), age(A, 4).  [covers 4,0/42,0 pos, 0,0/0,0 neg]
%     Score = -546,278041 (regressionFit = 546,278039, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), age(A, 6).  [covers 7,0/42,0 pos, 0,0/0,0 neg]
%     Score = -533,504678 (regressionFit = 533,504676, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), age(A, 8).  [covers 5,0/42,0 pos, 0,0/0,0 neg]
%     Score = -543,502922 (regressionFit = 543,502920, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), dis(A, 9).  [covers 7,0/42,0 pos, 0,0/0,0 neg]
%     Score = -513,249398 (regressionFit = 513,249396, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), dis(A, 10).  [covers 7,0/42,0 pos, 0,0/0,0 neg]
%     Score = -515,578774 (regressionFit = 515,578772, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), dis(A, 3).  [covers 6,0/42,0 pos, 0,0/0,0 neg]
%     Score = -545,915885 (regressionFit = 545,915883, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), dis(A, 2).  [covers 4,0/42,0 pos, 0,0/0,0 neg]
%     Score = -544,622003 (regressionFit = 544,622001, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), dis(A, 4).  [covers 3,0/42,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), rad(A, 2).  [covers 1,0/42,0 pos, 0,0/0,0 neg]
%     Score = -545,115140 (regressionFit = 545,115138, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), rad(A, 5).  [covers 6,0/42,0 pos, 0,0/0,0 neg]
%     Score = -513,825181 (regressionFit = 513,825178, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), rad(A, 4).  [covers 18,0/42,0 pos, 0,0/0,0 neg]
%     Score = -537,063651 (regressionFit = 537,063649, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), rad(A, 24).  [covers 11,0/42,0 pos, 0,0/0,0 neg]
%     Score = -507,499108 (regressionFit = 507,499106, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), rad(A, 3).  [covers 4,0/42,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), tax(A, 188).  [covers 1,0/42,0 pos, 0,0/0,0 neg]
%     Score = -521,220117 (regressionFit = 521,220115, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), tax(A, 403).  [covers 3,0/42,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), tax(A, 289).  [covers 1,0/42,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), tax(A, 287).  [covers 1,0/42,0 pos, 0,0/0,0 neg]
%     Score = -517,612171 (regressionFit = 517,612169, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), tax(A, 307).  [covers 7,0/42,0 pos, 0,0/0,0 neg]
%     Score = -537,063651 (regressionFit = 537,063649, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), tax(A, 666).  [covers 11,0/42,0 pos, 0,0/0,0 neg]
%     Score = -531,175663 (regressionFit = 531,175661, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), tax(A, 233).  [covers 3,0/42,0 pos, 0,0/0,0 neg]
%     Score = -518,428208 (regressionFit = 518,428206, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), ptratio(A, 5).  [covers 3,0/42,0 pos, 0,0/0,0 neg]
%     Score = -521,220117 (regressionFit = 521,220115, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), ptratio(A, 9).  [covers 3,0/42,0 pos, 0,0/0,0 neg]
%     Score = -536,822324 (regressionFit = 536,822322, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), ptratio(A, 1).  [covers 3,0/42,0 pos, 0,0/0,0 neg]
%     Score = -528,148259 (regressionFit = 528,148257, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), ptratio(A, 4).  [covers 8,0/42,0 pos, 0,0/0,0 neg]
%     Score = -537,063651 (regressionFit = 537,063649, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), ptratio(A, 10).  [covers 11,0/42,0 pos, 0,0/0,0 neg]
%     Score = -503,404922 (regressionFit = 503,404920, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), ptratio(A, 2).  [covers 5,0/42,0 pos, 0,0/0,0 neg]
%     Score = -544,407142 (regressionFit = 544,407140, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), b(A, 9).  [covers 9,0/42,0 pos, 0,0/0,0 neg]
%     Score = -541,796817 (regressionFit = 541,796815, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 7), b(A, 7).  [covers 5,0/42,0 pos, 0,0/0,0 neg]
%     Score = -546,263917 (regressionFit = 546,263915, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), b(A, 1).  [covers 9,0/42,0 pos, 0,0/0,0 neg]
%     Score = -543,648528 (regressionFit = 543,648526, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), b(A, 6).  [covers 7,0/42,0 pos, 0,0/0,0 neg]
%     Score = -526,764510 (regressionFit = 526,764508, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), lstat(A, 6).  [covers 3,0/42,0 pos, 0,0/0,0 neg]
%     Score = -505,018929 (regressionFit = 505,018927, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 7), lstat(A, 7).  [covers 11,0/42,0 pos, 0,0/0,0 neg]
%     Score = -544,652544 (regressionFit = 544,652542, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), lstat(A, 4).  [covers 5,0/42,0 pos, 0,0/0,0 neg]
%     Score = -506,133805 (regressionFit = 506,133803, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), lstat(A, 5).  [covers 10,0/42,0 pos, 0,0/0,0 neg]
%     Score = -544,845912 (regressionFit = 544,845910, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 7), lstat(A, 8).  [covers 4,0/42,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 7), zn(A, 0).  [covers 38,0/42,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 7), zn(A, 0).  [covers 38,0/42,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -13,007.
% Will extend: medv(A) :- rm(A, 7), zn(A, 0).  [covers 38,0/42,0 pos, 0,0/0,0 neg]
Comparing variance: 12.035241572324216 to score=0.0025 #egs=38.0
Comparing variance: 1.1849999999999952 to score=0.0025 #egs=4.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 38,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-12,035242)
%         ILP node to extend: medv(A) :- rm(A, 7), zn(A, 0).  [covers 38,0/42,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -12,035242) into position #1 in the search queue (new size=3).
%   Creating a FALSE-branch leaf because wgtedCountFalseBranchPos = 4,0 < 2.1 * minPosCov = 6,3

% Time for loop #8: 46 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      medv(A) :- rm(A, 7), zn(A, 0).  [covers 38,0/42,0 pos, 0,0/0,0 neg]
% This clause covers 38 positive examples, of which 38 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (medv(A) :- zn(A, 0))
Created a leaf under (medv(A) :- lstat(A, 6))
Created a leaf under (medv(A) :- dis(A, 5))

%%%%%  WILL-Produced Tree #3 @ 14:10:14 10/20/22.  %%%%%


% FOR medv(A):
%   if ( dis(A, 5) )
%   then return -2.1035674764240597;  // std dev = 2,878, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( rm(A, 7) )
%   | then if ( zn(A, 0) )
%   | | then return -1.6839496281419581;  // std dev = 3,469, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -6.507415410790832;  // std dev = 2,177, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( crim(A, 8) )
%   | | then if ( b(A, 8) )
%   | | | then return 14.750431700037447;  // std dev = 18,945, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( lstat(A, 6) )
%   | | | | then return -1.658293401337694;  // std dev = 4,593, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | else return 3.187148359315861;  // std dev = 17,495, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( lstat(A, 6) )
%   | | | then return -2.432224521105666;  // std dev = 3,020, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else if ( nox(A, 8) )
%   | | | | then return 3.445782893154989;  // std dev = 46,648, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | | else return 0.3291529246732404;  // std dev = 64,329, 262,000 (wgt'ed) examples reached here.  /* #pos=262 */


% Clauses:

medv(A, -2.1035674764240597) :- 
     dis(A, 5), 
     !. // Clause #1.

medv(A, -1.6839496281419581) :- 
     rm(A, 7), 
     zn(A, 0), 
     !. // Clause #2.

medv(A, -6.507415410790832) :- 
     rm(A, 7), 
     !. // Clause #3.

medv(A, 14.750431700037447) :- 
     crim(A, 8), 
     b(A, 8), 
     !. // Clause #4.

medv(A, -1.658293401337694) :- 
     crim(A, 8), 
     lstat(A, 6), 
     !. // Clause #5.

medv(A, 3.187148359315861) :- 
     crim(A, 8), 
     !. // Clause #6.

medv(A, -2.432224521105666) :- 
     lstat(A, 6), 
     !. // Clause #7.

medv(A, 3.445782893154989) :- 
     nox(A, 8), 
     !. // Clause #8.

medv(A, 0.3291529246732404) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_medv(a, -2.1035674764240597) :-  /* #pos=46 */ 
   dis(a, 5),
   !. // Flattened version of clause #1.

flattened_medv(a, -1.6839496281419581) :-  /* #pos=38 */ 
   rm(a, 7),
   zn(a, 0),
   !. // Flattened version of clause #2.

flattened_medv(a, -6.507415410790832) :-  /* #pos=4 */ 
   rm(a, 7),
   !. // Flattened version of clause #3.

flattened_medv(a, 14.750431700037447) :-  /* #pos=4 */ 
   crim(a, 8),
   b(a, 8),
   !. // Flattened version of clause #4.

flattened_medv(a, -1.658293401337694) :-  /* #pos=6 */ 
   crim(a, 8),
   lstat(a, 6),
   !. // Flattened version of clause #5.

flattened_medv(a, 3.187148359315861) :-  /* #pos=18 */ 
   crim(a, 8),
   !. // Flattened version of clause #6.

flattened_medv(a, -2.432224521105666) :-  /* #pos=35 */ 
   lstat(a, 6),
   !. // Flattened version of clause #7.

flattened_medv(a, 3.445782893154989) :-  /* #pos=23 */ 
   nox(a, 8),
   !. // Flattened version of clause #8.

flattened_medv(underscore, 0.3291529246732404) :-  /* #pos=262 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   b(a, 8)
%   rm(a, 7)
%   nox(a, 8)
%   lstat(a, 6)
%   crim(a, 8)
%   zn(a, 0)
%   dis(a, 5)

% Saving model in: data/boston_housing/train/models/bRDNs/medv.model.ckpt
% Time taken to learn 3 trees is 2,842 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:13.006649953061167
Set score:0.0025
% Kept 436 of the 436 positive examples.
% Kept 0 of the 0 negative examples.
% Dataset size: 436
Computing probabilities
prob time:57 milliseconds
No hidden examples for : medv
Time to build dataset: 61 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:18.722009175469893
Set score:0.0025

% Have these 8 positive seeds: 4 17 48 132 207 306 307 334

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -8.161,052955 (regressionFit = 8.161,052954, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.161,052955): medv(A) :- crim(A, 4).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.160,023475 (regressionFit = 8.160,023474, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.160,023475): medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.159,877458 (regressionFit = 8.159,877457, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.159,877458): medv(A) :- crim(A, 8).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.071,915550 (regressionFit = 8.071,915549, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.071,915550): medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.162,133903 (regressionFit = 8.162,133902, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.109,133377 (regressionFit = 8.109,133376, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.086,420366 (regressionFit = 8.086,420365, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.089,808738 (regressionFit = 8.089,808737, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.162,751842 (regressionFit = 8.162,751841, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 52.5).  [covers 3,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.020,375704 (regressionFit = 8.020,375703, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -8.020,375704): medv(A) :- indus(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.157,839203 (regressionFit = 8.157,839202, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.143,240327 (regressionFit = 8.143,240325, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.137,318597 (regressionFit = 8.137,318596, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.133,651172 (regressionFit = 8.133,651171, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.118,049965 (regressionFit = 8.118,049964, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.076,123047 (regressionFit = 8.076,123046, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 401,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.076,123047 (regressionFit = 8.076,123046, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 35,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.158,411264 (regressionFit = 8.158,411263, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.107,627305 (regressionFit = 8.107,627304, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.150,301147 (regressionFit = 8.150,301146, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.145,542271 (regressionFit = 8.145,542270, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.113,337841 (regressionFit = 8.113,337840, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.155,811347 (regressionFit = 8.155,811346, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.152,428579 (regressionFit = 8.152,428578, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.086,365059 (regressionFit = 8.086,365058, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.162,777174 (regressionFit = 8.162,777173, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.159,501430 (regressionFit = 8.159,501429, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.161,446490 (regressionFit = 8.161,446489, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.145,163230 (regressionFit = 8.145,163229, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.161,624486 (regressionFit = 8.161,624485, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.146,021125 (regressionFit = 8.146,021124, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.154,892978 (regressionFit = 8.154,892977, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.143,832501 (regressionFit = 8.143,832500, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.095,908869 (regressionFit = 8.095,908868, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.106,821210 (regressionFit = 8.106,821209, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.162,789655 (regressionFit = 8.162,789654, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.100,074217 (regressionFit = 8.100,074216, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.042,315052 (regressionFit = 8.042,315051, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -7.970,491665 (regressionFit = 7.970,491664, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7.970,491665): medv(A) :- dis(A, 10).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.162,796002 (regressionFit = 8.162,796001, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.144,244692 (regressionFit = 8.144,244691, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.161,250828 (regressionFit = 8.161,250827, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.137,330379 (regressionFit = 8.137,330378, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 18,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.119,354644 (regressionFit = 8.119,354643, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 24,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.118,049965 (regressionFit = 8.118,049964, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.161,709732 (regressionFit = 8.161,709731, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 384).  [covers 11,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.161,321140 (regressionFit = 8.161,321139, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 432).  [covers 9,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.143,240327 (regressionFit = 8.143,240325, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.037,587900 (regressionFit = 8.037,587899, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.162,751842 (regressionFit = 8.162,751841, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 293).  [covers 3,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.118,049965 (regressionFit = 8.118,049964, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.140,270703 (regressionFit = 8.140,270702, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 279).  [covers 4,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.083,215248 (regressionFit = 8.083,215247, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.115,194023 (regressionFit = 8.115,194022, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.160,683163 (regressionFit = 8.160,683162, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.157,369896 (regressionFit = 8.157,369895, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.120,330146 (regressionFit = 8.120,330145, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 97,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.161,622323 (regressionFit = 8.161,622322, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.034,692555 (regressionFit = 8.034,692554, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.155,216110 (regressionFit = 8.155,216109, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.160,988821 (regressionFit = 8.160,988820, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 102,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.162,695029 (regressionFit = 8.162,695028, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.127,923268 (regressionFit = 8.127,923267, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.161,965059 (regressionFit = 8.161,965058, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.158,806581 (regressionFit = 8.158,806580, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.162,406024 (regressionFit = 8.162,406023, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.147,400869 (regressionFit = 8.147,400868, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -8.105,769302 (regressionFit = 8.105,769301, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 38,0/436,0 pos, 0,0/0,0 neg]
%     Score = -7.980,872483 (regressionFit = 7.980,872482, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- dis(A, 10).  [covers 51,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- dis(A, 10).  [covers 51,0/436,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: medv(A) :- dis(A, 10).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
Comparing variance: 49.32360626794658 to score=0.0025 #egs=51.0
Comparing variance: 14.168799336916669 to score=0.0025 #egs=385.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 51,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-49,323606)
%         ILP node to extend: medv(A) :- dis(A, 10).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -49,323606) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 385,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-14,168799)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -14,168799) into the LAST position (#2) in the search queue.

% Time for loop #1: 187 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      medv(A) :- dis(A, 10).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
% This clause covers 51 positive examples, of which 51 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- dis(A, 10).  [covers 51,0/51,0 pos, 0,0/0,0 neg]'
%     Score = -7.970,491665 (regressionFit = 7.970,491664, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 51,0/51,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 0 2 4 12 13 23 25 29
% Gleaner: New best node found (score = -7.970,491665): medv(A) :- dis(A, 10).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 7).  [covers 1,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.502,080939 (regressionFit = 2.502,080937, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8).  [covers 11,0/51,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.502,080939): medv(A) :- dis(A, 10), crim(A, 8).  [covers 11,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.512,935771 (regressionFit = 2.512,935769, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 5).  [covers 4,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.174,481420 (regressionFit = 2.174,481418, penalties=2.0300000000000005E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 10).  [covers 26,0/51,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.174,481420): medv(A) :- dis(A, 10), crim(A, 10).  [covers 26,0/51,0 pos, 0,0/0,0 neg]
%     Score = -1.976,891667 (regressionFit = 1.976,891665, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9).  [covers 9,0/51,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.976,891667): medv(A) :- dis(A, 10), crim(A, 9).  [covers 9,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), zn(A, 0).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), indus(A, 8).  [covers 2,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.508,560864 (regressionFit = 2.508,560862, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), indus(A, 9).  [covers 12,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.485,480328 (regressionFit = 2.485,480326, penalties=2.0300000000000005E-6) for clause:  medv(A) :- dis(A, 10), indus(A, 10).  [covers 37,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.294,837232 (regressionFit = 2.294,837230, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), chas(A, 0).  [covers 46,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.294,837232 (regressionFit = 2.294,837230, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), chas(A, 1).  [covers 5,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.170,908460 (regressionFit = 2.170,908458, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), nox(A, 8).  [covers 12,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.515,222107 (regressionFit = 2.515,222105, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), nox(A, 9).  [covers 13,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.408,867523 (regressionFit = 2.408,867521, penalties=2.0300000000000005E-6) for clause:  medv(A) :- dis(A, 10), nox(A, 10).  [covers 20,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.509,024580 (regressionFit = 2.509,024578, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rm(A, 6).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.487,675175 (regressionFit = 2.487,675173, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rm(A, 9).  [covers 25,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.514,768139 (regressionFit = 2.514,768137, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rm(A, 7).  [covers 7,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rm(A, 3).  [covers 1,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.513,893984 (regressionFit = 2.513,893982, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rm(A, 4).  [covers 4,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.514,414289 (regressionFit = 2.514,414287, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rm(A, 1).  [covers 4,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.506,450318 (regressionFit = 2.506,450316, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), age(A, 7).  [covers 5,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.504,163832 (regressionFit = 2.504,163830, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), age(A, 6).  [covers 29,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.511,586079 (regressionFit = 2.511,586077, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), age(A, 5).  [covers 10,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.354,980134 (regressionFit = 2.354,980132, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), age(A, 9).  [covers 5,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rad(A, 4).  [covers 2,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.508,560864 (regressionFit = 2.508,560862, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rad(A, 5).  [covers 12,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.485,480328 (regressionFit = 2.485,480326, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rad(A, 24).  [covers 37,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), tax(A, 437).  [covers 2,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.508,560864 (regressionFit = 2.508,560862, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), tax(A, 403).  [covers 12,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.485,480328 (regressionFit = 2.485,480326, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), tax(A, 666).  [covers 37,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), ptratio(A, 7).  [covers 2,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.508,560864 (regressionFit = 2.508,560862, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), ptratio(A, 9).  [covers 12,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.485,480328 (regressionFit = 2.485,480326, penalties=2.0300000000000005E-6) for clause:  medv(A) :- dis(A, 10), ptratio(A, 10).  [covers 37,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 6).  [covers 1,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.287,044804 (regressionFit = 2.287,044802, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1).  [covers 19,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.380,166777 (regressionFit = 2.380,166775, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 9).  [covers 11,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.475,088565 (regressionFit = 2.475,088562, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 7).  [covers 10,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.385,139758 (regressionFit = 2.385,139756, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), lstat(A, 6).  [covers 26,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.509,334904 (regressionFit = 2.509,334902, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), lstat(A, 4).  [covers 4,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.515,329672 (regressionFit = 2.515,329670, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), lstat(A, 7).  [covers 3,0/51,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- dis(A, 10), lstat(A, 10).  [covers 2,0/51,0 pos, 0,0/0,0 neg]
%     Score = -2.419,279797 (regressionFit = 2.419,279795, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), lstat(A, 5).  [covers 9,0/51,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- dis(A, 10), crim(A, 9).  [covers 9,0/51,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- dis(A, 10), crim(A, 9).  [covers 9,0/51,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -49,324.
% Will extend: medv(A) :- dis(A, 10), crim(A, 9).  [covers 9,0/51,0 pos, 0,0/0,0 neg]
Comparing variance: 106.75082024419939 to score=0.0025 #egs=9.0
Comparing variance: 24.19367339427318 to score=0.0025 #egs=42.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 9,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-106,750820)
%         ILP node to extend: medv(A) :- dis(A, 10), crim(A, 9).  [covers 9,0/51,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -106,750820) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 42,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-24,193673)
%         ILP node to extend: medv(A) :- dis(A, 10).  [covers 51,0/51,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -24,193673) into position #2 in the search queue (new size=3).

% Time for loop #2: 41 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      medv(A) :- dis(A, 10), crim(A, 9).  [covers 9,0/51,0 pos, 0,0/0,0 neg]
% This clause covers 9 positive examples, of which 9 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- dis(A, 10), crim(A, 9).  [covers 9,0/9,0 pos, 0,0/0,0 neg]'
%     Score = -1.976,891667 (regressionFit = 1.976,891665, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9).  [covers 9,0/9,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 0 1 2 3 4 5 6 7
% Gleaner: New best node found (score = -1.976,891667): medv(A) :- dis(A, 10), crim(A, 9).  [covers 9,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), zn(A, 0).  [covers 9,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), indus(A, 10).  [covers 9,0/9,0 pos, 0,0/0,0 neg]
%     Score = -825,913631 (regressionFit = 825,913628, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), chas(A, 1).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -825,913631): medv(A) :- dis(A, 10), crim(A, 9), chas(A, 1).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -825,913631 (regressionFit = 825,913628, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), chas(A, 0).  [covers 6,0/9,0 pos, 0,0/0,0 neg]
%     Score = -422,548616 (regressionFit = 422,548613, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), nox(A, 8).  [covers 4,0/9,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -422,548616): medv(A) :- dis(A, 10), crim(A, 9), nox(A, 8).  [covers 4,0/9,0 pos, 0,0/0,0 neg]
%     Score = -677,826456 (regressionFit = 677,826453, penalties=3.0500000000000004E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), nox(A, 10).  [covers 4,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), rm(A, 1).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), rm(A, 4).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), rm(A, 10).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), rm(A, 8).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), rm(A, 9).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -897,497482 (regressionFit = 897,497479, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), age(A, 5).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -957,467769 (regressionFit = 957,467766, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), age(A, 6).  [covers 4,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), age(A, 9).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), age(A, 2).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), rad(A, 24).  [covers 9,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), tax(A, 666).  [covers 9,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), ptratio(A, 10).  [covers 9,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), b(A, 8).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), b(A, 2).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -960,292193 (regressionFit = 960,292190, penalties=3.0500000000000004E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), b(A, 9).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -841,288680 (regressionFit = 841,288677, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), b(A, 1).  [covers 3,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), lstat(A, 3).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), lstat(A, 2).  [covers 2,0/9,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), lstat(A, 5).  [covers 1,0/9,0 pos, 0,0/0,0 neg]
%     Score = -623,903362 (regressionFit = 623,903359, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 9), lstat(A, 6).  [covers 4,0/9,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- dis(A, 10), crim(A, 9), nox(A, 8).  [covers 4,0/9,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- dis(A, 10), crim(A, 9), nox(A, 8).  [covers 4,0/9,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -106,751.
% Will extend: medv(A) :- dis(A, 10), crim(A, 9), nox(A, 8).  [covers 4,0/9,0 pos, 0,0/0,0 neg]
Comparing variance: 98.06663621047102 to score=0.0025 #egs=4.0
Comparing variance: 6.056413691070373 to score=0.0025 #egs=5.0
%   Creating a TRUE-branch leaf because length = 4 > 3
%   Creating a FALSE-branch leaf because wgtedCountFalseBranchPos = 5,0 < 2.1 * minPosCov = 6,3

% Time for loop #3: 16 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      medv(A) :- dis(A, 10), crim(A, 9), nox(A, 8).  [covers 4,0/9,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- dis(A, 10).  [covers 51,0/42,0 pos, 0,0/0,0 neg]'
%     Score = -7.970,491665 (regressionFit = 7.970,491664, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 42,0/42,0 pos, 0,0/0,0 neg]

% Have these 6 positive seeds: 3 11 25 28 35 38
% Gleaner: New best node found (score = -7.970,491665): medv(A) :- dis(A, 10).  [covers 42,0/42,0 pos, 0,0/0,0 neg]
%     Score = -924,277129 (regressionFit = 924,277127, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8).  [covers 11,0/42,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -924,277129): medv(A) :- dis(A, 10), crim(A, 8).  [covers 11,0/42,0 pos, 0,0/0,0 neg]
%     Score = -1.013,744985 (regressionFit = 1.013,744983, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 5).  [covers 4,0/42,0 pos, 0,0/0,0 neg]
%     Score = -943,544962 (regressionFit = 943,544960, penalties=2.0300000000000005E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 10).  [covers 26,0/42,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), zn(A, 0).  [covers 42,0/42,0 pos, 0,0/0,0 neg]
%     Score = -1.004,303234 (regressionFit = 1.004,303232, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), indus(A, 9).  [covers 12,0/42,0 pos, 0,0/0,0 neg]
%     Score = -1.014,747065 (regressionFit = 1.014,747063, penalties=2.0300000000000005E-6) for clause:  medv(A) :- dis(A, 10), indus(A, 10).  [covers 28,0/42,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), chas(A, 0).  [covers 40,0/42,0 pos, 0,0/0,0 neg]
%     Score = -980,421218 (regressionFit = 980,421216, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), nox(A, 9).  [covers 13,0/42,0 pos, 0,0/0,0 neg]
%     Score = -993,593072 (regressionFit = 993,593070, penalties=2.0300000000000005E-6) for clause:  medv(A) :- dis(A, 10), nox(A, 10).  [covers 16,0/42,0 pos, 0,0/0,0 neg]
%     Score = -1.011,286337 (regressionFit = 1.011,286335, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), nox(A, 8).  [covers 8,0/42,0 pos, 0,0/0,0 neg]
%     Score = -999,477576 (regressionFit = 999,477574, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), nox(A, 7).  [covers 5,0/42,0 pos, 0,0/0,0 neg]
%     Score = -1.006,599029 (regressionFit = 1.006,599027, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rm(A, 9).  [covers 23,0/42,0 pos, 0,0/0,0 neg]
%     Score = -998,928493 (regressionFit = 998,928491, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rm(A, 7).  [covers 6,0/42,0 pos, 0,0/0,0 neg]
%     Score = -1.013,577194 (regressionFit = 1.013,577192, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), age(A, 6).  [covers 25,0/42,0 pos, 0,0/0,0 neg]
%     Score = -999,573549 (regressionFit = 999,573547, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), age(A, 9).  [covers 4,0/42,0 pos, 0,0/0,0 neg]
%     Score = -1.004,303234 (regressionFit = 1.004,303232, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rad(A, 5).  [covers 12,0/42,0 pos, 0,0/0,0 neg]
%     Score = -1.014,747065 (regressionFit = 1.014,747063, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rad(A, 24).  [covers 28,0/42,0 pos, 0,0/0,0 neg]
%     Score = -1.004,303234 (regressionFit = 1.004,303232, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), tax(A, 403).  [covers 12,0/42,0 pos, 0,0/0,0 neg]
%     Score = -1.014,747065 (regressionFit = 1.014,747063, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), tax(A, 666).  [covers 28,0/42,0 pos, 0,0/0,0 neg]
%     Score = -1.004,303234 (regressionFit = 1.004,303232, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), ptratio(A, 9).  [covers 12,0/42,0 pos, 0,0/0,0 neg]
%     Score = -1.014,747065 (regressionFit = 1.014,747063, penalties=2.0300000000000005E-6) for clause:  medv(A) :- dis(A, 10), ptratio(A, 10).  [covers 28,0/42,0 pos, 0,0/0,0 neg]
%     Score = -901,325359 (regressionFit = 901,325357, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1).  [covers 16,0/42,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -901,325359): medv(A) :- dis(A, 10), b(A, 1).  [covers 16,0/42,0 pos, 0,0/0,0 neg]
%     Score = -910,876302 (regressionFit = 910,876300, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 9).  [covers 8,0/42,0 pos, 0,0/0,0 neg]
%     Score = -1.014,967423 (regressionFit = 1.014,967421, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 7).  [covers 10,0/42,0 pos, 0,0/0,0 neg]
%     Score = -933,002647 (regressionFit = 933,002645, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 8).  [covers 4,0/42,0 pos, 0,0/0,0 neg]
%     Score = -1.009,419626 (regressionFit = 1.009,419624, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), lstat(A, 6).  [covers 22,0/42,0 pos, 0,0/0,0 neg]
%     Score = -983,987537 (regressionFit = 983,987535, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), lstat(A, 4).  [covers 4,0/42,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), lstat(A, 8).  [covers 1,0/42,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- dis(A, 10), b(A, 1).  [covers 16,0/42,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- dis(A, 10), b(A, 1).  [covers 16,0/42,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -24,194.
% Will extend: medv(A) :- dis(A, 10), b(A, 1).  [covers 16,0/42,0 pos, 0,0/0,0 neg]
Comparing variance: 20.00501401795366 to score=0.0025 #egs=16.0
Comparing variance: 22.355582040159252 to score=0.0025 #egs=26.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 16,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-20,005014)
%         ILP node to extend: medv(A) :- dis(A, 10), b(A, 1).  [covers 16,0/42,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -20,005014) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 26,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-22,355582)
%         ILP node to extend: medv(A) :- dis(A, 10).  [covers 42,0/42,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -22,355582) into position #1 in the search queue (new size=3).

% Time for loop #4: 27 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      medv(A) :- dis(A, 10), b(A, 1).  [covers 16,0/42,0 pos, 0,0/0,0 neg]
% This clause covers 16 positive examples, of which 16 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- dis(A, 10).  [covers 42,0/26,0 pos, 0,0/0,0 neg]'
%     Score = -7.970,491665 (regressionFit = 7.970,491664, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 26,0/26,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 1 3 5 6 10 14 17 20
% Gleaner: New best node found (score = -7.970,491665): medv(A) :- dis(A, 10).  [covers 26,0/26,0 pos, 0,0/0,0 neg]
%     Score = -504,666280 (regressionFit = 504,666278, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8).  [covers 8,0/26,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -504,666280): medv(A) :- dis(A, 10), crim(A, 8).  [covers 8,0/26,0 pos, 0,0/0,0 neg]
%     Score = -579,606130 (regressionFit = 579,606128, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 5).  [covers 3,0/26,0 pos, 0,0/0,0 neg]
%     Score = -531,397067 (regressionFit = 531,397065, penalties=2.0300000000000005E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 10).  [covers 14,0/26,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), zn(A, 0).  [covers 26,0/26,0 pos, 0,0/0,0 neg]
%     Score = -580,525118 (regressionFit = 580,525116, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), indus(A, 9).  [covers 9,0/26,0 pos, 0,0/0,0 neg]
%     Score = -580,082725 (regressionFit = 580,082723, penalties=2.0300000000000005E-6) for clause:  medv(A) :- dis(A, 10), indus(A, 10).  [covers 16,0/26,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), chas(A, 0).  [covers 25,0/26,0 pos, 0,0/0,0 neg]
%     Score = -569,238920 (regressionFit = 569,238918, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), nox(A, 9).  [covers 10,0/26,0 pos, 0,0/0,0 neg]
%     Score = -579,332246 (regressionFit = 579,332244, penalties=2.0300000000000005E-6) for clause:  medv(A) :- dis(A, 10), nox(A, 10).  [covers 6,0/26,0 pos, 0,0/0,0 neg]
%     Score = -559,243279 (regressionFit = 559,243277, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), nox(A, 8).  [covers 5,0/26,0 pos, 0,0/0,0 neg]
%     Score = -576,210938 (regressionFit = 576,210936, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rm(A, 6).  [covers 3,0/26,0 pos, 0,0/0,0 neg]
%     Score = -574,668856 (regressionFit = 574,668854, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rm(A, 9).  [covers 13,0/26,0 pos, 0,0/0,0 neg]
%     Score = -580,673133 (regressionFit = 580,673130, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rm(A, 7).  [covers 6,0/26,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- dis(A, 10), rm(A, 10).  [covers 1,0/26,0 pos, 0,0/0,0 neg]
%     Score = -574,825475 (regressionFit = 574,825473, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), age(A, 6).  [covers 15,0/26,0 pos, 0,0/0,0 neg]
%     Score = -571,110414 (regressionFit = 571,110412, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), age(A, 5).  [covers 3,0/26,0 pos, 0,0/0,0 neg]
%     Score = -579,461396 (regressionFit = 579,461394, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), age(A, 7).  [covers 4,0/26,0 pos, 0,0/0,0 neg]
%     Score = -575,679923 (regressionFit = 575,679921, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), age(A, 9).  [covers 3,0/26,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), age(A, 2).  [covers 1,0/26,0 pos, 0,0/0,0 neg]
%     Score = -580,525118 (regressionFit = 580,525116, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rad(A, 5).  [covers 9,0/26,0 pos, 0,0/0,0 neg]
%     Score = -580,082725 (regressionFit = 580,082723, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rad(A, 24).  [covers 16,0/26,0 pos, 0,0/0,0 neg]
%     Score = -580,525118 (regressionFit = 580,525116, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), tax(A, 403).  [covers 9,0/26,0 pos, 0,0/0,0 neg]
%     Score = -580,082725 (regressionFit = 580,082723, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), tax(A, 666).  [covers 16,0/26,0 pos, 0,0/0,0 neg]
%     Score = -580,525118 (regressionFit = 580,525116, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), ptratio(A, 9).  [covers 9,0/26,0 pos, 0,0/0,0 neg]
%     Score = -580,082725 (regressionFit = 580,082723, penalties=2.0300000000000005E-6) for clause:  medv(A) :- dis(A, 10), ptratio(A, 10).  [covers 16,0/26,0 pos, 0,0/0,0 neg]
%     Score = -539,896597 (regressionFit = 539,896595, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 7).  [covers 10,0/26,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 2).  [covers 1,0/26,0 pos, 0,0/0,0 neg]
%     Score = -536,553230 (regressionFit = 536,553228, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 9).  [covers 8,0/26,0 pos, 0,0/0,0 neg]
%     Score = -537,577101 (regressionFit = 537,577099, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 8).  [covers 4,0/26,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 3).  [covers 1,0/26,0 pos, 0,0/0,0 neg]
%     Score = -558,488056 (regressionFit = 558,488054, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), lstat(A, 6).  [covers 10,0/26,0 pos, 0,0/0,0 neg]
%     Score = -524,969226 (regressionFit = 524,969224, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), lstat(A, 5).  [covers 6,0/26,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- dis(A, 10), lstat(A, 10).  [covers 1,0/26,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), lstat(A, 9).  [covers 1,0/26,0 pos, 0,0/0,0 neg]
%     Score = -571,985728 (regressionFit = 571,985726, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), lstat(A, 4).  [covers 4,0/26,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- dis(A, 10), crim(A, 8).  [covers 8,0/26,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- dis(A, 10), crim(A, 8).  [covers 8,0/26,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -22,356.
% Will extend: medv(A) :- dis(A, 10), crim(A, 8).  [covers 8,0/26,0 pos, 0,0/0,0 neg]
Comparing variance: 26.282169650228507 to score=0.0025 #egs=8.0
Comparing variance: 16.35605114378133 to score=0.0025 #egs=18.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 8,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-26,282170)
%         ILP node to extend: medv(A) :- dis(A, 10), crim(A, 8).  [covers 8,0/26,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -26,282170) into position #1 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 18,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-16,356051)
%         ILP node to extend: medv(A) :- dis(A, 10).  [covers 26,0/26,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -16,356051) into position #3 in the search queue (new size=4).

% Time for loop #5: 24 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #5, the best clause found is:
%      medv(A) :- dis(A, 10), crim(A, 8).  [covers 8,0/26,0 pos, 0,0/0,0 neg]
% This clause covers 8 positive examples, of which 8 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- dis(A, 10), crim(A, 8).  [covers 8,0/8,0 pos, 0,0/0,0 neg]'
%     Score = -504,666280 (regressionFit = 504,666278, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8).  [covers 8,0/8,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 0 1 2 3 4 5 6 7
% Gleaner: New best node found (score = -504,666280): medv(A) :- dis(A, 10), crim(A, 8).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), zn(A, 0).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), indus(A, 9).  [covers 6,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), indus(A, 10).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), chas(A, 0).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), nox(A, 9).  [covers 7,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), nox(A, 8).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), rm(A, 6).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -193,543946 (regressionFit = 193,543943, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), rm(A, 7).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -193,543946): medv(A) :- dis(A, 10), crim(A, 8), rm(A, 7).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%     Score = -155,240857 (regressionFit = 155,240854, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), rm(A, 9).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -155,240857): medv(A) :- dis(A, 10), crim(A, 8), rm(A, 9).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%     Score = -203,526870 (regressionFit = 203,526866, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), age(A, 6).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), age(A, 5).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), age(A, 7).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), age(A, 9).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), rad(A, 5).  [covers 6,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), rad(A, 24).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), tax(A, 403).  [covers 6,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), tax(A, 666).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), ptratio(A, 9).  [covers 6,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), ptratio(A, 10).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -182,427349 (regressionFit = 182,427346, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), b(A, 7).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), b(A, 2).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -210,237130 (regressionFit = 210,237127, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), b(A, 9).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), b(A, 8).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -158,249312 (regressionFit = 158,249309, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), lstat(A, 6).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), lstat(A, 7).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), lstat(A, 5).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), lstat(A, 9).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 8), lstat(A, 3).  [covers 1,0/8,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- dis(A, 10), crim(A, 8), rm(A, 9).  [covers 4,0/8,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- dis(A, 10), crim(A, 8), rm(A, 9).  [covers 4,0/8,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -26,282.
% Will extend: medv(A) :- dis(A, 10), crim(A, 8), rm(A, 9).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #6: 15 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      medv(A) :- dis(A, 10), crim(A, 8), rm(A, 9).  [covers 4,0/8,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- dis(A, 10), b(A, 1).  [covers 16,0/16,0 pos, 0,0/0,0 neg]'
%     Score = -901,325359 (regressionFit = 901,325357, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1).  [covers 16,0/16,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 2 3 4 6 7 8 9 10
% Gleaner: New best node found (score = -901,325359): medv(A) :- dis(A, 10), b(A, 1).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -317,173667 (regressionFit = 317,173663, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), crim(A, 8).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -317,173667): medv(A) :- dis(A, 10), b(A, 1), crim(A, 8).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -319,078729 (regressionFit = 319,078726, penalties=3.0500000000000004E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), crim(A, 10).  [covers 12,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), zn(A, 0).  [covers 16,0/16,0 pos, 0,0/0,0 neg]
%     Score = -317,173667 (regressionFit = 317,173663, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), indus(A, 9).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -319,078729 (regressionFit = 319,078726, penalties=3.0500000000000004E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), indus(A, 10).  [covers 12,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), chas(A, 0).  [covers 15,0/16,0 pos, 0,0/0,0 neg]
%     Score = -317,173667 (regressionFit = 317,173663, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), nox(A, 9).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -313,564901 (regressionFit = 313,564898, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), nox(A, 8).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -313,564901): medv(A) :- dis(A, 10), b(A, 1), nox(A, 8).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -319,613196 (regressionFit = 319,613192, penalties=3.0500000000000004E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), nox(A, 10).  [covers 10,0/16,0 pos, 0,0/0,0 neg]
%     Score = -304,524318 (regressionFit = 304,524315, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), rm(A, 9).  [covers 10,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -304,524318): medv(A) :- dis(A, 10), b(A, 1), rm(A, 9).  [covers 10,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), rm(A, 3).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), rm(A, 2).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), rm(A, 4).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), rm(A, 1).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -317,810787 (regressionFit = 317,810784, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), age(A, 6).  [covers 10,0/16,0 pos, 0,0/0,0 neg]
%     Score = -309,845259 (regressionFit = 309,845256, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), age(A, 5).  [covers 4,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), age(A, 7).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -317,173667 (regressionFit = 317,173663, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), rad(A, 5).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -319,078729 (regressionFit = 319,078726, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), rad(A, 24).  [covers 12,0/16,0 pos, 0,0/0,0 neg]
%     Score = -317,173667 (regressionFit = 317,173663, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), tax(A, 403).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -319,078729 (regressionFit = 319,078726, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), tax(A, 666).  [covers 12,0/16,0 pos, 0,0/0,0 neg]
%     Score = -317,173667 (regressionFit = 317,173663, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), ptratio(A, 9).  [covers 3,0/16,0 pos, 0,0/0,0 neg]
%     Score = -319,078729 (regressionFit = 319,078726, penalties=3.0500000000000004E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), ptratio(A, 10).  [covers 12,0/16,0 pos, 0,0/0,0 neg]
%     Score = -237,200823 (regressionFit = 237,200820, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), lstat(A, 6).  [covers 12,0/16,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -237,200823): medv(A) :- dis(A, 10), b(A, 1), lstat(A, 6).  [covers 12,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), lstat(A, 10).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), lstat(A, 7).  [covers 1,0/16,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 1), lstat(A, 5).  [covers 2,0/16,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- dis(A, 10), b(A, 1), lstat(A, 6).  [covers 12,0/16,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- dis(A, 10), b(A, 1), lstat(A, 6).  [covers 12,0/16,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -20,005.
% Will extend: medv(A) :- dis(A, 10), b(A, 1), lstat(A, 6).  [covers 12,0/16,0 pos, 0,0/0,0 neg]
Comparing variance: 7.588019522572292 to score=0.0025 #egs=12.0
Comparing variance: 36.536146389173204 to score=0.0025 #egs=4.0
%   Creating a TRUE-branch leaf because length = 4 > 3
%   Creating a FALSE-branch leaf because wgtedCountFalseBranchPos = 4,0 < 2.1 * minPosCov = 6,3

% Time for loop #7: 22 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      medv(A) :- dis(A, 10), b(A, 1), lstat(A, 6).  [covers 12,0/16,0 pos, 0,0/0,0 neg]
% This clause covers 12 positive examples, of which 12 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- dis(A, 10).  [covers 26,0/18,0 pos, 0,0/0,0 neg]'
%     Score = -7.970,491665 (regressionFit = 7.970,491664, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 18,0/18,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 2 3 4 6 8 11 13 17
% Gleaner: New best node found (score = -7.970,491665): medv(A) :- dis(A, 10).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -282,229661 (regressionFit = 282,229659, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 5).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -282,229661): medv(A) :- dis(A, 10), crim(A, 5).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
%     Score = -293,212688 (regressionFit = 293,212686, penalties=2.0300000000000005E-6) for clause:  medv(A) :- dis(A, 10), crim(A, 10).  [covers 14,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), zn(A, 0).  [covers 18,0/18,0 pos, 0,0/0,0 neg]
%     Score = -282,229661 (regressionFit = 282,229659, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), indus(A, 9).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
%     Score = -293,212688 (regressionFit = 293,212686, penalties=2.0300000000000005E-6) for clause:  medv(A) :- dis(A, 10), indus(A, 10).  [covers 14,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), chas(A, 0).  [covers 17,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), chas(A, 1).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -282,229661 (regressionFit = 282,229659, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), nox(A, 9).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
%     Score = -294,406781 (regressionFit = 294,406779, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), nox(A, 8).  [covers 4,0/18,0 pos, 0,0/0,0 neg]
%     Score = -290,619122 (regressionFit = 290,619120, penalties=2.0300000000000005E-6) for clause:  medv(A) :- dis(A, 10), nox(A, 10).  [covers 6,0/18,0 pos, 0,0/0,0 neg]
%     Score = -270,303879 (regressionFit = 270,303877, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), nox(A, 7).  [covers 5,0/18,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -270,303879): medv(A) :- dis(A, 10), nox(A, 7).  [covers 5,0/18,0 pos, 0,0/0,0 neg]
%     Score = -290,938832 (regressionFit = 290,938830, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rm(A, 9).  [covers 9,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- dis(A, 10), rm(A, 10).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rm(A, 4).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -290,550604 (regressionFit = 290,550602, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), age(A, 6).  [covers 12,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), age(A, 9).  [covers 2,0/18,0 pos, 0,0/0,0 neg]
%     Score = -282,229661 (regressionFit = 282,229659, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rad(A, 5).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
%     Score = -293,212688 (regressionFit = 293,212686, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), rad(A, 24).  [covers 14,0/18,0 pos, 0,0/0,0 neg]
%     Score = -282,229661 (regressionFit = 282,229659, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), tax(A, 403).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
%     Score = -293,212688 (regressionFit = 293,212686, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), tax(A, 666).  [covers 14,0/18,0 pos, 0,0/0,0 neg]
%     Score = -282,229661 (regressionFit = 282,229659, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), ptratio(A, 9).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
%     Score = -293,212688 (regressionFit = 293,212686, penalties=2.0300000000000005E-6) for clause:  medv(A) :- dis(A, 10), ptratio(A, 10).  [covers 14,0/18,0 pos, 0,0/0,0 neg]
%     Score = -240,708634 (regressionFit = 240,708632, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 9).  [covers 5,0/18,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -240,708634): medv(A) :- dis(A, 10), b(A, 9).  [covers 5,0/18,0 pos, 0,0/0,0 neg]
%     Score = -277,749513 (regressionFit = 277,749511, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 7).  [covers 7,0/18,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 3).  [covers 1,0/18,0 pos, 0,0/0,0 neg]
%     Score = -293,502546 (regressionFit = 293,502543, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), b(A, 8).  [covers 3,0/18,0 pos, 0,0/0,0 neg]
%     Score = -261,133158 (regressionFit = 261,133156, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), lstat(A, 4).  [covers 4,0/18,0 pos, 0,0/0,0 neg]
%     Score = -268,332124 (regressionFit = 268,332122, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), lstat(A, 5).  [covers 5,0/18,0 pos, 0,0/0,0 neg]
%     Score = -293,754632 (regressionFit = 293,754630, penalties=2.0500000000000003E-6) for clause:  medv(A) :- dis(A, 10), lstat(A, 6).  [covers 7,0/18,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- dis(A, 10), b(A, 9).  [covers 5,0/18,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- dis(A, 10), b(A, 9).  [covers 5,0/18,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -16,356.
% Will extend: medv(A) :- dis(A, 10), b(A, 9).  [covers 5,0/18,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #8: 20 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      medv(A) :- dis(A, 10), b(A, 9).  [covers 5,0/18,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (medv(A) :- dis(A, 10))

%%%%%  WILL-Produced Tree #4 @ 14:10:14 10/20/22.  %%%%%


% FOR medv(A):
%   if ( dis(A, 10) )
%   then if ( crim(A, 9) )
%   | then if ( nox(A, 8) )
%   | | then return 17.490912152647333;  // std dev = 19,806, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 1.9283305542989624;  // std dev = 5,503, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( b(A, 1) )
%   | | then if ( lstat(A, 6) )
%   | | | then return -0.4732171153967503;  // std dev = 9,542, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -5.729305789804056;  // std dev = 12,089, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( crim(A, 8) )
%   | | | then if ( rm(A, 9) )
%   | | | | then return 6.8140731070717475;  // std dev = 11,756, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 1.5692421701031978;  // std dev = 4,126, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( b(A, 9) )
%   | | | | then return 3.258312247313821;  // std dev = 8,319, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return -0.5979617449414983;  // std dev = 13,096, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.24171634415360135;  // std dev = 3,764, 385,000 (wgt'ed) examples reached here.  /* #pos=385 */


% Clauses:

medv(A, 17.490912152647333) :- 
     dis(A, 10), 
     crim(A, 9), 
     nox(A, 8), 
     !. // Clause #1.

medv(A, 1.9283305542989624) :- 
     dis(A, 10), 
     crim(A, 9), 
     !. // Clause #2.

medv(A, -0.4732171153967503) :- 
     dis(A, 10), 
     b(A, 1), 
     lstat(A, 6), 
     !. // Clause #3.

medv(A, -5.729305789804056) :- 
     dis(A, 10), 
     b(A, 1), 
     !. // Clause #4.

medv(A, 6.8140731070717475) :- 
     dis(A, 10), 
     crim(A, 8), 
     rm(A, 9), 
     !. // Clause #5.

medv(A, 1.5692421701031978) :- 
     dis(A, 10), 
     crim(A, 8), 
     !. // Clause #6.

medv(A, 3.258312247313821) :- 
     dis(A, 10), 
     b(A, 9), 
     !. // Clause #7.

medv(A, -0.5979617449414983) :- 
     dis(A, 10), 
     !. // Clause #8.

medv(A, -0.24171634415360135) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_medv(a, 17.490912152647333) :-  /* #pos=4 */ 
   dis(a, 10),
   crim(a, 9),
   nox(a, 8),
   !. // Flattened version of clause #1.

flattened_medv(a, 1.9283305542989624) :-  /* #pos=5 */ 
   dis(a, 10),
   crim(a, 9),
   !. // Flattened version of clause #2.

flattened_medv(a, -0.4732171153967503) :-  /* #pos=12 */ 
   dis(a, 10),
   b(a, 1),
   lstat(a, 6),
   !. // Flattened version of clause #3.

flattened_medv(a, -5.729305789804056) :-  /* #pos=4 */ 
   dis(a, 10),
   b(a, 1),
   !. // Flattened version of clause #4.

flattened_medv(a, 6.8140731070717475) :-  /* #pos=4 */ 
   dis(a, 10),
   crim(a, 8),
   rm(a, 9),
   !. // Flattened version of clause #5.

flattened_medv(a, 1.5692421701031978) :-  /* #pos=4 */ 
   dis(a, 10),
   crim(a, 8),
   !. // Flattened version of clause #6.

flattened_medv(a, 3.258312247313821) :-  /* #pos=5 */ 
   dis(a, 10),
   b(a, 9),
   !. // Flattened version of clause #7.

flattened_medv(a, -0.5979617449414983) :-  /* #pos=13 */ 
   dis(a, 10),
   !. // Flattened version of clause #8.

flattened_medv(underscore, -0.24171634415360135) :-  /* #pos=385 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   nox(a, 8)
%   dis(a, 10)
%   crim(a, 9)
%   lstat(a, 6)
%   b(a, 1)
%   b(a, 9)
%   crim(a, 8)
%   rm(a, 9)

% Saving model in: data/boston_housing/train/models/bRDNs/medv.model.ckpt
% Time taken to learn 4 trees is 3,270 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:16.35605114378133
Set score:0.0025
% Kept 436 of the 436 positive examples.
% Kept 0 of the 0 negative examples.
% Dataset size: 436
Computing probabilities
prob time:74 milliseconds
No hidden examples for : medv
Time to build dataset: 78 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:14.932767578174529
Set score:0.0025

% Have these 8 positive seeds: 42 54 82 133 236 243 254 287

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -6.451,030636 (regressionFit = 6.451,030635, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6.451,030636): medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.500,079125 (regressionFit = 6.500,079124, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.398,828678 (regressionFit = 6.398,828677, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6.398,828678): medv(A) :- crim(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.501,877482 (regressionFit = 6.501,877481, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.510,593128 (regressionFit = 6.510,593127, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.504,520395 (regressionFit = 6.504,520394, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.482,897453 (regressionFit = 6.482,897452, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.510,458256 (regressionFit = 6.510,458255, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 35).  [covers 3,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.433,668012 (regressionFit = 6.433,668011, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 21,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.510,414653 (regressionFit = 6.510,414652, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.508,591643 (regressionFit = 6.508,591642, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.500,379120 (regressionFit = 6.500,379119, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.496,695007 (regressionFit = 6.496,695006, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.407,062029 (regressionFit = 6.407,062028, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.510,684590 (regressionFit = 6.510,684589, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.509,966612 (regressionFit = 6.509,966611, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 401,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.359,358328 (regressionFit = 6.359,358327, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6.359,358328): medv(A) :- nox(A, 8).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.454,970834 (regressionFit = 6.454,970833, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.510,506487 (regressionFit = 6.510,506486, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.495,448778 (regressionFit = 6.495,448777, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.478,501644 (regressionFit = 6.478,501643, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.491,167259 (regressionFit = 6.491,167258, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.507,942271 (regressionFit = 6.507,942270, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.479,103533 (regressionFit = 6.479,103532, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.489,663929 (regressionFit = 6.489,663928, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.486,207802 (regressionFit = 6.486,207801, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.509,597974 (regressionFit = 6.509,597973, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.463,628797 (regressionFit = 6.463,628796, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.460,759743 (regressionFit = 6.460,759742, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 37,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.498,905839 (regressionFit = 6.498,905838, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.508,556230 (regressionFit = 6.508,556229, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.437,092665 (regressionFit = 6.437,092664, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.440,050806 (regressionFit = 6.440,050805, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.423,665741 (regressionFit = 6.423,665740, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.510,686665 (regressionFit = 6.510,686664, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.423,447637 (regressionFit = 6.423,447636, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.464,681553 (regressionFit = 6.464,681552, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.504,276170 (regressionFit = 6.504,276169, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.470,220259 (regressionFit = 6.470,220258, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.481,966711 (regressionFit = 6.481,966710, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 101,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.509,204198 (regressionFit = 6.509,204197, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.509,357801 (regressionFit = 6.509,357800, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 23,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.508,922797 (regressionFit = 6.508,922796, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 15,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.510,684590 (regressionFit = 6.510,684589, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.376,987344 (regressionFit = 6.376,987343, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 437).  [covers 14,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.510,414653 (regressionFit = 6.510,414652, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.478,946869 (regressionFit = 6.478,946868, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 296).  [covers 8,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 242).  [covers 2,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.509,853688 (regressionFit = 6.509,853687, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 14,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.509,081716 (regressionFit = 6.509,081715, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 287).  [covers 8,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.510,684590 (regressionFit = 6.510,684589, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.369,865241 (regressionFit = 6.369,865240, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 7).  [covers 16,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.509,991325 (regressionFit = 6.509,991324, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.510,379558 (regressionFit = 6.510,379557, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.435,798452 (regressionFit = 6.435,798451, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.493,279415 (regressionFit = 6.493,279414, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.510,367986 (regressionFit = 6.510,367985, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.510,661848 (regressionFit = 6.510,661847, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 97,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.509,302520 (regressionFit = 6.509,302519, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.498,973586 (regressionFit = 6.498,973585, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.505,887419 (regressionFit = 6.505,887418, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.472,315055 (regressionFit = 6.472,315054, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 102,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.503,237097 (regressionFit = 6.503,237096, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 27,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.501,149514 (regressionFit = 6.501,149513, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.509,916896 (regressionFit = 6.509,916895, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.478,477853 (regressionFit = 6.478,477852, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 38,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.500,232964 (regressionFit = 6.500,232963, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.510,624287 (regressionFit = 6.510,624286, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.510,683844 (regressionFit = 6.510,683843, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.498,199985 (regressionFit = 6.498,199984, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -6.448,289632 (regressionFit = 6.448,289631, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 46,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 8).  [covers 36,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 8).  [covers 36,0/436,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: medv(A) :- nox(A, 8).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
Comparing variance: 27.634646648206544 to score=0.0025 #egs=36.0
Comparing variance: 13.411277619937897 to score=0.0025 #egs=400.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 36,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-27,634647)
%         ILP node to extend: medv(A) :- nox(A, 8).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -27,634647) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 400,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-13,411278)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -13,411278) into the LAST position (#2) in the search queue.

% Time for loop #1: 209 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      medv(A) :- nox(A, 8).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
% This clause covers 36 positive examples, of which 36 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- nox(A, 8).  [covers 36,0/36,0 pos, 0,0/0,0 neg]'
%     Score = -6.359,358328 (regressionFit = 6.359,358327, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 36,0/36,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 0 2 7 9 16 19 20 23
% Gleaner: New best node found (score = -6.359,358328): medv(A) :- nox(A, 8).  [covers 36,0/36,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), crim(A, 4).  [covers 1,0/36,0 pos, 0,0/0,0 neg]
%     Score = -953,311827 (regressionFit = 953,311825, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), crim(A, 5).  [covers 12,0/36,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -953,311827): medv(A) :- nox(A, 8), crim(A, 5).  [covers 12,0/36,0 pos, 0,0/0,0 neg]
%     Score = -977,080575 (regressionFit = 977,080573, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), crim(A, 7).  [covers 11,0/36,0 pos, 0,0/0,0 neg]
%     Score = -966,667739 (regressionFit = 966,667737, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), zn(A, 0).  [covers 26,0/36,0 pos, 0,0/0,0 neg]
%     Score = -966,667739 (regressionFit = 966,667737, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), zn(A, 20).  [covers 10,0/36,0 pos, 0,0/0,0 neg]
%     Score = -968,299660 (regressionFit = 968,299658, penalties=2.0300000000000005E-6) for clause:  medv(A) :- nox(A, 8), indus(A, 8).  [covers 14,0/36,0 pos, 0,0/0,0 neg]
%     Score = -966,667739 (regressionFit = 966,667737, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), indus(A, 4).  [covers 10,0/36,0 pos, 0,0/0,0 neg]
%     Score = -990,071263 (regressionFit = 990,071261, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), chas(A, 0).  [covers 33,0/36,0 pos, 0,0/0,0 neg]
%     Score = -945,236555 (regressionFit = 945,236553, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), rm(A, 7).  [covers 6,0/36,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -945,236555): medv(A) :- nox(A, 8), rm(A, 7).  [covers 6,0/36,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- nox(A, 8), rm(A, 8).  [covers 2,0/36,0 pos, 0,0/0,0 neg]
%     Score = -908,525523 (regressionFit = 908,525521, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), rm(A, 4).  [covers 3,0/36,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -908,525523): medv(A) :- nox(A, 8), rm(A, 4).  [covers 3,0/36,0 pos, 0,0/0,0 neg]
%     Score = -984,219232 (regressionFit = 984,219229, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), rm(A, 3).  [covers 7,0/36,0 pos, 0,0/0,0 neg]
%     Score = -916,744862 (regressionFit = 916,744860, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 5).  [covers 9,0/36,0 pos, 0,0/0,0 neg]
%     Score = -980,675709 (regressionFit = 980,675707, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 7).  [covers 5,0/36,0 pos, 0,0/0,0 neg]
%     Score = -970,903275 (regressionFit = 970,903273, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6).  [covers 12,0/36,0 pos, 0,0/0,0 neg]
%     Score = -868,538645 (regressionFit = 868,538643, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 9).  [covers 6,0/36,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -868,538645): medv(A) :- nox(A, 8), age(A, 9).  [covers 6,0/36,0 pos, 0,0/0,0 neg]
%     Score = -983,234522 (regressionFit = 983,234520, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 2).  [covers 3,0/36,0 pos, 0,0/0,0 neg]
%     Score = -923,481699 (regressionFit = 923,481697, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), dis(A, 9).  [covers 7,0/36,0 pos, 0,0/0,0 neg]
%     Score = -974,452048 (regressionFit = 974,452046, penalties=2.0300000000000005E-6) for clause:  medv(A) :- nox(A, 8), dis(A, 8).  [covers 12,0/36,0 pos, 0,0/0,0 neg]
%     Score = -980,126940 (regressionFit = 980,126938, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), dis(A, 7).  [covers 5,0/36,0 pos, 0,0/0,0 neg]
%     Score = -968,299660 (regressionFit = 968,299658, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), rad(A, 4).  [covers 14,0/36,0 pos, 0,0/0,0 neg]
%     Score = -966,667739 (regressionFit = 966,667737, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), rad(A, 5).  [covers 10,0/36,0 pos, 0,0/0,0 neg]
%     Score = -968,299660 (regressionFit = 968,299658, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), tax(A, 437).  [covers 14,0/36,0 pos, 0,0/0,0 neg]
%     Score = -966,667739 (regressionFit = 966,667737, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), tax(A, 264).  [covers 10,0/36,0 pos, 0,0/0,0 neg]
%     Score = -968,299660 (regressionFit = 968,299658, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), ptratio(A, 7).  [covers 14,0/36,0 pos, 0,0/0,0 neg]
%     Score = -966,667739 (regressionFit = 966,667737, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), ptratio(A, 9).  [covers 10,0/36,0 pos, 0,0/0,0 neg]
%     Score = -885,053145 (regressionFit = 885,053143, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), b(A, 2).  [covers 6,0/36,0 pos, 0,0/0,0 neg]
%     Score = -975,818976 (regressionFit = 975,818974, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), b(A, 1).  [covers 7,0/36,0 pos, 0,0/0,0 neg]
%     Score = -994,407552 (regressionFit = 994,407550, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), b(A, 7).  [covers 3,0/36,0 pos, 0,0/0,0 neg]
%     Score = -957,881155 (regressionFit = 957,881153, penalties=2.0300000000000005E-6) for clause:  medv(A) :- nox(A, 8), b(A, 8).  [covers 5,0/36,0 pos, 0,0/0,0 neg]
%     Score = -962,429217 (regressionFit = 962,429215, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), b(A, 5).  [covers 5,0/36,0 pos, 0,0/0,0 neg]
%     Score = -986,049421 (regressionFit = 986,049419, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), lstat(A, 7).  [covers 4,0/36,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), lstat(A, 5).  [covers 2,0/36,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), lstat(A, 9).  [covers 2,0/36,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), lstat(A, 1).  [covers 2,0/36,0 pos, 0,0/0,0 neg]
%     Score = -976,662400 (regressionFit = 976,662398, penalties=2.0300000000000005E-6) for clause:  medv(A) :- nox(A, 8), lstat(A, 8).  [covers 4,0/36,0 pos, 0,0/0,0 neg]
%     Score = -994,828891 (regressionFit = 994,828889, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), lstat(A, 10).  [covers 5,0/36,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 8), age(A, 9).  [covers 6,0/36,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 8), age(A, 9).  [covers 6,0/36,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -27,635.
% Will extend: medv(A) :- nox(A, 8), age(A, 9).  [covers 6,0/36,0 pos, 0,0/0,0 neg]
Comparing variance: 35.40343347423341 to score=0.0025 #egs=6.0
Comparing variance: 21.870601402289573 to score=0.0025 #egs=30.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 6,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 30,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-21,870601)
%         ILP node to extend: medv(A) :- nox(A, 8).  [covers 36,0/36,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -21,870601) into position #1 in the search queue (new size=2).

% Time for loop #2: 29 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      medv(A) :- nox(A, 8), age(A, 9).  [covers 6,0/36,0 pos, 0,0/0,0 neg]
% This clause covers 6 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- nox(A, 8).  [covers 36,0/30,0 pos, 0,0/0,0 neg]'
%     Score = -6.359,358328 (regressionFit = 6.359,358327, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 30,0/30,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 0 1 8 10 11 15 16 18
% Gleaner: New best node found (score = -6.359,358328): medv(A) :- nox(A, 8).  [covers 30,0/30,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), crim(A, 4).  [covers 1,0/30,0 pos, 0,0/0,0 neg]
%     Score = -645,198344 (regressionFit = 645,198342, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), crim(A, 7).  [covers 8,0/30,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -645,198344): medv(A) :- nox(A, 8), crim(A, 7).  [covers 8,0/30,0 pos, 0,0/0,0 neg]
%     Score = -626,070850 (regressionFit = 626,070848, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), crim(A, 5).  [covers 11,0/30,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -626,070850): medv(A) :- nox(A, 8), crim(A, 5).  [covers 11,0/30,0 pos, 0,0/0,0 neg]
%     Score = -590,483455 (regressionFit = 590,483453, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), zn(A, 0).  [covers 24,0/30,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -590,483455): medv(A) :- nox(A, 8), zn(A, 0).  [covers 24,0/30,0 pos, 0,0/0,0 neg]
%     Score = -590,483455 (regressionFit = 590,483453, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), zn(A, 20).  [covers 6,0/30,0 pos, 0,0/0,0 neg]
%     Score = -654,621087 (regressionFit = 654,621085, penalties=2.0300000000000005E-6) for clause:  medv(A) :- nox(A, 8), indus(A, 8).  [covers 14,0/30,0 pos, 0,0/0,0 neg]
%     Score = -590,483455 (regressionFit = 590,483453, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), indus(A, 4).  [covers 6,0/30,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), chas(A, 0).  [covers 28,0/30,0 pos, 0,0/0,0 neg]
%     Score = -603,573203 (regressionFit = 603,573201, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), rm(A, 7).  [covers 5,0/30,0 pos, 0,0/0,0 neg]
%     Score = -644,704482 (regressionFit = 644,704480, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), rm(A, 2).  [covers 3,0/30,0 pos, 0,0/0,0 neg]
%     Score = -606,117557 (regressionFit = 606,117555, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), rm(A, 10).  [covers 4,0/30,0 pos, 0,0/0,0 neg]
%     Score = -653,730422 (regressionFit = 653,730420, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), rm(A, 6).  [covers 3,0/30,0 pos, 0,0/0,0 neg]
%     Score = -594,539683 (regressionFit = 594,539681, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), rm(A, 4).  [covers 3,0/30,0 pos, 0,0/0,0 neg]
%     Score = -586,216507 (regressionFit = 586,216505, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), rm(A, 3).  [covers 3,0/30,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -586,216507): medv(A) :- nox(A, 8), rm(A, 3).  [covers 3,0/30,0 pos, 0,0/0,0 neg]
%     Score = -628,628693 (regressionFit = 628,628691, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), rm(A, 9).  [covers 7,0/30,0 pos, 0,0/0,0 neg]
%     Score = -618,368461 (regressionFit = 618,368459, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 5).  [covers 9,0/30,0 pos, 0,0/0,0 neg]
%     Score = -576,833488 (regressionFit = 576,833486, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6).  [covers 12,0/30,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -576,833488): medv(A) :- nox(A, 8), age(A, 6).  [covers 12,0/30,0 pos, 0,0/0,0 neg]
%     Score = -652,470848 (regressionFit = 652,470845, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 2).  [covers 3,0/30,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 1).  [covers 1,0/30,0 pos, 0,0/0,0 neg]
%     Score = -613,790730 (regressionFit = 613,790728, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), dis(A, 9).  [covers 5,0/30,0 pos, 0,0/0,0 neg]
%     Score = -615,844492 (regressionFit = 615,844490, penalties=2.0300000000000005E-6) for clause:  medv(A) :- nox(A, 8), dis(A, 8).  [covers 10,0/30,0 pos, 0,0/0,0 neg]
%     Score = -654,621087 (regressionFit = 654,621085, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), rad(A, 4).  [covers 14,0/30,0 pos, 0,0/0,0 neg]
%     Score = -590,483455 (regressionFit = 590,483453, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), rad(A, 5).  [covers 6,0/30,0 pos, 0,0/0,0 neg]
%     Score = -654,621087 (regressionFit = 654,621085, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), tax(A, 437).  [covers 14,0/30,0 pos, 0,0/0,0 neg]
%     Score = -590,483455 (regressionFit = 590,483453, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), tax(A, 264).  [covers 6,0/30,0 pos, 0,0/0,0 neg]
%     Score = -654,621087 (regressionFit = 654,621085, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), ptratio(A, 7).  [covers 14,0/30,0 pos, 0,0/0,0 neg]
%     Score = -590,483455 (regressionFit = 590,483453, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), ptratio(A, 9).  [covers 6,0/30,0 pos, 0,0/0,0 neg]
%     Score = -585,553897 (regressionFit = 585,553895, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), b(A, 2).  [covers 6,0/30,0 pos, 0,0/0,0 neg]
%     Score = -652,353618 (regressionFit = 652,353616, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), b(A, 1).  [covers 7,0/30,0 pos, 0,0/0,0 neg]
%     Score = -645,111984 (regressionFit = 645,111981, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), b(A, 3).  [covers 3,0/30,0 pos, 0,0/0,0 neg]
%     Score = -654,667775 (regressionFit = 654,667773, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), lstat(A, 7).  [covers 4,0/30,0 pos, 0,0/0,0 neg]
%     Score = -654,879294 (regressionFit = 654,879292, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), lstat(A, 10).  [covers 4,0/30,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), lstat(A, 5).  [covers 2,0/30,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), lstat(A, 9).  [covers 1,0/30,0 pos, 0,0/0,0 neg]
%     Score = -649,772356 (regressionFit = 649,772354, penalties=2.0300000000000005E-6) for clause:  medv(A) :- nox(A, 8), lstat(A, 8).  [covers 4,0/30,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 8), age(A, 6).  [covers 12,0/30,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 8), age(A, 6).  [covers 12,0/30,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -21,871.
% Will extend: medv(A) :- nox(A, 8), age(A, 6).  [covers 12,0/30,0 pos, 0,0/0,0 neg]
Comparing variance: 34.5274250207185 to score=0.0025 #egs=12.0
Comparing variance: 9.02802144661019 to score=0.0025 #egs=18.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 12,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-34,527425)
%         ILP node to extend: medv(A) :- nox(A, 8), age(A, 6).  [covers 12,0/30,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -34,527425) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 18,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-9,028021)
%         ILP node to extend: medv(A) :- nox(A, 8).  [covers 30,0/30,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -9,028021) into the LAST position (#3) in the search queue.

% Time for loop #3: 26 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      medv(A) :- nox(A, 8), age(A, 6).  [covers 12,0/30,0 pos, 0,0/0,0 neg]
% This clause covers 12 positive examples, of which 12 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- nox(A, 8), age(A, 6).  [covers 12,0/12,0 pos, 0,0/0,0 neg]'
%     Score = -576,833488 (regressionFit = 576,833486, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6).  [covers 12,0/12,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 0 1 3 5 6 7 8 10
% Gleaner: New best node found (score = -576,833488): medv(A) :- nox(A, 8), age(A, 6).  [covers 12,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), crim(A, 7).  [covers 2,0/12,0 pos, 0,0/0,0 neg]
%     Score = -319,941340 (regressionFit = 319,941337, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), crim(A, 5).  [covers 3,0/12,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -319,941340): medv(A) :- nox(A, 8), age(A, 6), crim(A, 5).  [covers 3,0/12,0 pos, 0,0/0,0 neg]
%     Score = -413,808779 (regressionFit = 413,808776, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), crim(A, 10).  [covers 5,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), crim(A, 8).  [covers 1,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), crim(A, 9).  [covers 1,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), zn(A, 0).  [covers 10,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), zn(A, 20).  [covers 2,0/12,0 pos, 0,0/0,0 neg]
%     Score = -385,061911 (regressionFit = 385,061908, penalties=3.0500000000000004E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), indus(A, 8).  [covers 3,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), indus(A, 4).  [covers 2,0/12,0 pos, 0,0/0,0 neg]
%     Score = -259,421308 (regressionFit = 259,421305, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), indus(A, 10).  [covers 7,0/12,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -259,421308): medv(A) :- nox(A, 8), age(A, 6), indus(A, 10).  [covers 7,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), chas(A, 0).  [covers 12,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), rm(A, 2).  [covers 2,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), rm(A, 3).  [covers 1,0/12,0 pos, 0,0/0,0 neg]
%     Score = -413,113299 (regressionFit = 413,113296, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), rm(A, 9).  [covers 6,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), rm(A, 10).  [covers 1,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), dis(A, 9).  [covers 2,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), dis(A, 8).  [covers 2,0/12,0 pos, 0,0/0,0 neg]
%     Score = -266,957878 (regressionFit = 266,957875, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), dis(A, 10).  [covers 8,0/12,0 pos, 0,0/0,0 neg]
%     Score = -385,061911 (regressionFit = 385,061908, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), rad(A, 4).  [covers 3,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), rad(A, 5).  [covers 2,0/12,0 pos, 0,0/0,0 neg]
%     Score = -259,421308 (regressionFit = 259,421305, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), rad(A, 24).  [covers 7,0/12,0 pos, 0,0/0,0 neg]
%     Score = -385,061911 (regressionFit = 385,061908, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), tax(A, 437).  [covers 3,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), tax(A, 264).  [covers 2,0/12,0 pos, 0,0/0,0 neg]
%     Score = -259,421308 (regressionFit = 259,421305, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), tax(A, 666).  [covers 7,0/12,0 pos, 0,0/0,0 neg]
%     Score = -385,061911 (regressionFit = 385,061908, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), ptratio(A, 7).  [covers 3,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), ptratio(A, 9).  [covers 2,0/12,0 pos, 0,0/0,0 neg]
%     Score = -259,421308 (regressionFit = 259,421305, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), ptratio(A, 10).  [covers 7,0/12,0 pos, 0,0/0,0 neg]
%     Score = -380,930485 (regressionFit = 380,930482, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), b(A, 1).  [covers 4,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), b(A, 3).  [covers 1,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), b(A, 5).  [covers 1,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), b(A, 7).  [covers 1,0/12,0 pos, 0,0/0,0 neg]
%     Score = -297,447004 (regressionFit = 297,447001, penalties=3.0500000000000004E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), b(A, 8).  [covers 3,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), lstat(A, 10).  [covers 1,0/12,0 pos, 0,0/0,0 neg]
%     Score = -396,342643 (regressionFit = 396,342640, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), lstat(A, 4).  [covers 3,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), lstat(A, 2).  [covers 2,0/12,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), lstat(A, 3).  [covers 1,0/12,0 pos, 0,0/0,0 neg]
%     Score = -381,873966 (regressionFit = 381,873963, penalties=3.0500000000000004E-6) for clause:  medv(A) :- nox(A, 8), age(A, 6), lstat(A, 6).  [covers 4,0/12,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 8), age(A, 6), indus(A, 10).  [covers 7,0/12,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 8), age(A, 6), indus(A, 10).  [covers 7,0/12,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -34,527.
% Will extend: medv(A) :- nox(A, 8), age(A, 6), indus(A, 10).  [covers 7,0/12,0 pos, 0,0/0,0 neg]
Comparing variance: 31.2515973647445 to score=0.0025 #egs=7.0
Comparing variance: 8.132024605538316 to score=0.0025 #egs=5.0
%   Creating a TRUE-branch leaf because length = 4 > 3
%   Creating a FALSE-branch leaf because wgtedCountFalseBranchPos = 5,0 < 2.1 * minPosCov = 6,3

% Time for loop #4: 22 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      medv(A) :- nox(A, 8), age(A, 6), indus(A, 10).  [covers 7,0/12,0 pos, 0,0/0,0 neg]
% This clause covers 7 positive examples, of which 7 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 37 39 68 127 186 207 209 220

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 400,0/400,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 400,0/400,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -5.328,476021 (regressionFit = 5.328,476020, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 31,0/400,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5.328,476021): medv(A) :- crim(A, 8).  [covers 31,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.278,232146 (regressionFit = 5.278,232145, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 51,0/400,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5.278,232146): medv(A) :- crim(A, 2).  [covers 51,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.348,184464 (regressionFit = 5.348,184463, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 36,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.360,254921 (regressionFit = 5.360,254920, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 37,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.347,806373 (regressionFit = 5.347,806372, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 281,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.364,066166 (regressionFit = 5.364,066165, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 80).  [covers 14,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.364,294775 (regressionFit = 5.364,294774, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 29,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.326,542765 (regressionFit = 5.326,542764, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 39,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.343,524457 (regressionFit = 5.343,524456, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 51,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.340,018148 (regressionFit = 5.340,018147, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 48,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.231,679829 (regressionFit = 5.231,679828, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/400,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5.231,679829): medv(A) :- indus(A, 3).  [covers 47,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.357,519611 (regressionFit = 5.357,519610, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.361,955294 (regressionFit = 5.361,955293, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 368,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.288,627603 (regressionFit = 5.288,627602, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 42,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.361,777438 (regressionFit = 5.361,777437, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 43,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.354,666775 (regressionFit = 5.354,666774, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 48,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.342,823846 (regressionFit = 5.342,823845, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 48,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.315,593540 (regressionFit = 5.315,593539, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.286,212653 (regressionFit = 5.286,212652, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 40,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.341,306119 (regressionFit = 5.341,306118, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 37,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.305,808347 (regressionFit = 5.305,808346, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 43,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.364,109560 (regressionFit = 5.364,109559, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 41,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.364,490679 (regressionFit = 5.364,490678, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 43,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.355,862704 (regressionFit = 5.355,862703, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 38,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.327,338393 (regressionFit = 5.327,338392, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 39,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.362,650335 (regressionFit = 5.362,650334, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 36,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.355,548894 (regressionFit = 5.355,548893, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 32,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.296,875120 (regressionFit = 5.296,875119, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 37,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.357,184035 (regressionFit = 5.357,184034, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 37,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.311,114865 (regressionFit = 5.311,114864, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 49,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.335,118329 (regressionFit = 5.335,118328, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 38,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.360,521147 (regressionFit = 5.360,521146, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 34,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.364,210161 (regressionFit = 5.364,210160, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 46,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.362,600570 (regressionFit = 5.362,600569, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 39,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.295,100643 (regressionFit = 5.295,100642, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 32,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.364,509111 (regressionFit = 5.364,509110, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 45,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.334,408780 (regressionFit = 5.334,408779, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 50,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.349,677530 (regressionFit = 5.349,677529, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 48,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.354,928917 (regressionFit = 5.354,928916, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 102,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.325,072166 (regressionFit = 5.325,072165, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 24,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.358,622265 (regressionFit = 5.358,622264, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 87,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.364,294775 (regressionFit = 5.364,294774, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 29,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.338,157428 (regressionFit = 5.338,157427, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 296).  [covers 8,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.247,604925 (regressionFit = 5.247,604924, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 39,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.362,278915 (regressionFit = 5.362,278914, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 245).  [covers 3,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.361,991741 (regressionFit = 5.361,991740, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 14,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.361,367846 (regressionFit = 5.361,367845, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 287).  [covers 8,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.351,924743 (regressionFit = 5.351,924742, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 40,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.361,041751 (regressionFit = 5.361,041750, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 48,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.364,096961 (regressionFit = 5.364,096960, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 42,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.291,073506 (regressionFit = 5.291,073505, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 32,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.356,411163 (regressionFit = 5.356,411162, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 51,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.245,409496 (regressionFit = 5.245,409495, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 37,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.356,282999 (regressionFit = 5.356,282998, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 34,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.364,341668 (regressionFit = 5.364,341667, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 41,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.311,322926 (regressionFit = 5.311,322925, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 95,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.300,152116 (regressionFit = 5.300,152115, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 38,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.361,319463 (regressionFit = 5.361,319462, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 27,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.362,402429 (regressionFit = 5.362,402428, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 38,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.363,048716 (regressionFit = 5.363,048715, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 40,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.318,901614 (regressionFit = 5.318,901613, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 44,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.354,019085 (regressionFit = 5.354,019084, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 48,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.255,720103 (regressionFit = 5.255,720102, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 37,0/400,0 pos, 0,0/0,0 neg]
%     Score = -5.339,608575 (regressionFit = 5.339,608574, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 38,0/400,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- indus(A, 3).  [covers 47,0/400,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- indus(A, 3).  [covers 47,0/400,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -13,411.
% Will extend: medv(A) :- indus(A, 3).  [covers 47,0/400,0 pos, 0,0/0,0 neg]
Comparing variance: 7.8927421620238425 to score=0.0025 #egs=47.0
Comparing variance: 13.769747723552788 to score=0.0025 #egs=353.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 47,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-7,892742)
%         ILP node to extend: medv(A) :- indus(A, 3).  [covers 47,0/400,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -7,892742) into the LAST position (#2) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 353,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-13,769748)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -13,769748) into position #1 in the search queue (new size=3).

% Time for loop #5: 150 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #5, the best clause found is:
%      medv(A) :- indus(A, 3).  [covers 47,0/400,0 pos, 0,0/0,0 neg]
% This clause covers 47 positive examples, of which 47 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 22 80 82 124 127 209 226 259

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 353,0/353,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 353,0/353,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -4.807,975848 (regressionFit = 4.807,975847, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 31,0/353,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.807,975848): medv(A) :- crim(A, 8).  [covers 31,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.860,242798 (regressionFit = 4.860,242797, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 38,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.859,453666 (regressionFit = 4.859,453665, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 30,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.786,932140 (regressionFit = 4.786,932139, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 49,0/353,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.786,932140): medv(A) :- crim(A, 2).  [covers 49,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.827,616249 (regressionFit = 4.827,616248, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 39,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.860,203057 (regressionFit = 4.860,203055, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 9).  [covers 27,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.841,681766 (regressionFit = 4.841,681765, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 241,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.860,002231 (regressionFit = 4.860,002230, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 22).  [covers 9,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.853,198563 (regressionFit = 4.853,198562, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 60).  [covers 4,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.858,000323 (regressionFit = 4.858,000322, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 29,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.858,951061 (regressionFit = 4.858,951060, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.817,663280 (regressionFit = 4.817,663279, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 48,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.781,506457 (regressionFit = 4.781,506456, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 48,0/353,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.781,506457): medv(A) :- indus(A, 1).  [covers 48,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.838,984034 (regressionFit = 4.838,984033, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 78,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.860,590879 (regressionFit = 4.860,590878, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 321,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.756,031718 (regressionFit = 4.756,031717, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 42,0/353,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.756,031718): medv(A) :- nox(A, 9).  [covers 42,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.852,625287 (regressionFit = 4.852,625286, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 40,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.859,104661 (regressionFit = 4.859,104660, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 50,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.850,908031 (regressionFit = 4.850,908030, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 48,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.802,768768 (regressionFit = 4.802,768767, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 10).  [covers 42,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.842,470610 (regressionFit = 4.842,470609, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 32,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.859,682883 (regressionFit = 4.859,682882, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 28,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.790,944528 (regressionFit = 4.790,944527, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 37,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.858,444989 (regressionFit = 4.858,444988, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 40,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.858,958372 (regressionFit = 4.858,958370, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 42,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.857,025347 (regressionFit = 4.857,025346, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 33,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.809,978543 (regressionFit = 4.809,978542, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 48,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.780,623201 (regressionFit = 4.780,623200, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 33,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.852,539427 (regressionFit = 4.852,539426, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 32,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.855,135811 (regressionFit = 4.855,135810, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 27,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.852,967163 (regressionFit = 4.852,967162, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 39,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.860,607817 (regressionFit = 4.860,607816, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 32,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.859,604321 (regressionFit = 4.859,604320, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 46,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.840,641552 (regressionFit = 4.840,641551, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 76,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.855,508273 (regressionFit = 4.855,508272, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 66,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.859,344721 (regressionFit = 4.859,344720, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 16,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.838,984034 (regressionFit = 4.838,984033, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 78,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.858,000323 (regressionFit = 4.858,000322, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 29,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.859,625199 (regressionFit = 4.859,625198, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 277).  [covers 11,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.860,002231 (regressionFit = 4.860,002230, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 330).  [covers 9,0/353,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 411).  [covers 2,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.838,984034 (regressionFit = 4.838,984033, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 78,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.856,046895 (regressionFit = 4.856,046894, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 40,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.859,156862 (regressionFit = 4.859,156861, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 51,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.859,497776 (regressionFit = 4.859,497775, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 34,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.839,162187 (regressionFit = 4.839,162186, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 85,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.743,603343 (regressionFit = 4.743,603342, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 33,0/353,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.743,603343): medv(A) :- b(A, 7).  [covers 33,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.823,317394 (regressionFit = 4.823,317393, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 86,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.845,565503 (regressionFit = 4.845,565502, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 39,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.846,465973 (regressionFit = 4.846,465972, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 37,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.841,817397 (regressionFit = 4.841,817396, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 33,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.850,070306 (regressionFit = 4.850,070305, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 30,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.819,735858 (regressionFit = 4.819,735857, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 34,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.856,608769 (regressionFit = 4.856,608768, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 28,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.860,612130 (regressionFit = 4.860,612129, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 37,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.824,486550 (regressionFit = 4.824,486549, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 39,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.857,825211 (regressionFit = 4.857,825209, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 48,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.849,086854 (regressionFit = 4.849,086853, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 38,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.856,840976 (regressionFit = 4.856,840975, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 36,0/353,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- b(A, 7).  [covers 33,0/353,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- b(A, 7).  [covers 33,0/353,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -13,770.
% Will extend: medv(A) :- b(A, 7).  [covers 33,0/353,0 pos, 0,0/0,0 neg]
Comparing variance: 19.92535290526009 to score=0.0025 #egs=33.0
Comparing variance: 12.768958426115534 to score=0.0025 #egs=320.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 33,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-19,925353)
%         ILP node to extend: medv(A) :- b(A, 7).  [covers 33,0/353,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -19,925353) into position #1 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 320,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-12,768958)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -12,768958) into position #2 in the search queue (new size=4).

% Time for loop #6: 111 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      medv(A) :- b(A, 7).  [covers 33,0/353,0 pos, 0,0/0,0 neg]
% This clause covers 33 positive examples, of which 33 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- b(A, 7).  [covers 33,0/33,0 pos, 0,0/0,0 neg]'
%     Score = -4.743,603343 (regressionFit = 4.743,603342, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 33,0/33,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 6 11 15 17 24 25 26 27
% Gleaner: New best node found (score = -4.743,603343): medv(A) :- b(A, 7).  [covers 33,0/33,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), crim(A, 5).  [covers 1,0/33,0 pos, 0,0/0,0 neg]
%     Score = -656,444925 (regressionFit = 656,444922, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), crim(A, 10).  [covers 19,0/33,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -656,444925): medv(A) :- b(A, 7), crim(A, 10).  [covers 19,0/33,0 pos, 0,0/0,0 neg]
%     Score = -644,679115 (regressionFit = 644,679113, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), crim(A, 9).  [covers 6,0/33,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -644,679115): medv(A) :- b(A, 7), crim(A, 9).  [covers 6,0/33,0 pos, 0,0/0,0 neg]
%     Score = -652,366580 (regressionFit = 652,366578, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), crim(A, 8).  [covers 7,0/33,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), zn(A, 0).  [covers 33,0/33,0 pos, 0,0/0,0 neg]
%     Score = -646,913850 (regressionFit = 646,913848, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), indus(A, 9).  [covers 7,0/33,0 pos, 0,0/0,0 neg]
%     Score = -646,913850 (regressionFit = 646,913848, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), indus(A, 10).  [covers 26,0/33,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), chas(A, 0).  [covers 32,0/33,0 pos, 0,0/0,0 neg]
%     Score = -643,391727 (regressionFit = 643,391725, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 7), nox(A, 7).  [covers 11,0/33,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -643,391727): medv(A) :- b(A, 7), nox(A, 7).  [covers 11,0/33,0 pos, 0,0/0,0 neg]
%     Score = -499,094897 (regressionFit = 499,094895, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), nox(A, 10).  [covers 11,0/33,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -499,094897): medv(A) :- b(A, 7), nox(A, 10).  [covers 11,0/33,0 pos, 0,0/0,0 neg]
%     Score = -654,066870 (regressionFit = 654,066868, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), rm(A, 8).  [covers 4,0/33,0 pos, 0,0/0,0 neg]
%     Score = -657,510958 (regressionFit = 657,510956, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), rm(A, 9).  [covers 7,0/33,0 pos, 0,0/0,0 neg]
%     Score = -647,813462 (regressionFit = 647,813460, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), rm(A, 4).  [covers 4,0/33,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), rm(A, 5).  [covers 1,0/33,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), rm(A, 10).  [covers 1,0/33,0 pos, 0,0/0,0 neg]
%     Score = -657,470189 (regressionFit = 657,470187, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), rm(A, 2).  [covers 4,0/33,0 pos, 0,0/0,0 neg]
%     Score = -637,171107 (regressionFit = 637,171105, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), rm(A, 6).  [covers 6,0/33,0 pos, 0,0/0,0 neg]
%     Score = -634,471165 (regressionFit = 634,471163, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), age(A, 2).  [covers 4,0/33,0 pos, 0,0/0,0 neg]
%     Score = -650,247404 (regressionFit = 650,247402, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), age(A, 6).  [covers 10,0/33,0 pos, 0,0/0,0 neg]
%     Score = -633,815836 (regressionFit = 633,815834, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), age(A, 9).  [covers 6,0/33,0 pos, 0,0/0,0 neg]
%     Score = -653,505379 (regressionFit = 653,505377, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 7), age(A, 7).  [covers 8,0/33,0 pos, 0,0/0,0 neg]
%     Score = -598,007008 (regressionFit = 598,007006, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 7), dis(A, 7).  [covers 3,0/33,0 pos, 0,0/0,0 neg]
%     Score = -636,781481 (regressionFit = 636,781479, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), dis(A, 10).  [covers 9,0/33,0 pos, 0,0/0,0 neg]
%     Score = -657,412496 (regressionFit = 657,412494, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), dis(A, 9).  [covers 13,0/33,0 pos, 0,0/0,0 neg]
%     Score = -567,124849 (regressionFit = 567,124847, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), dis(A, 8).  [covers 8,0/33,0 pos, 0,0/0,0 neg]
%     Score = -646,913850 (regressionFit = 646,913848, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), rad(A, 5).  [covers 7,0/33,0 pos, 0,0/0,0 neg]
%     Score = -646,913850 (regressionFit = 646,913848, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), rad(A, 24).  [covers 26,0/33,0 pos, 0,0/0,0 neg]
%     Score = -646,913850 (regressionFit = 646,913848, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), tax(A, 403).  [covers 7,0/33,0 pos, 0,0/0,0 neg]
%     Score = -646,913850 (regressionFit = 646,913848, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), tax(A, 666).  [covers 26,0/33,0 pos, 0,0/0,0 neg]
%     Score = -646,913850 (regressionFit = 646,913848, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), ptratio(A, 9).  [covers 7,0/33,0 pos, 0,0/0,0 neg]
%     Score = -646,913850 (regressionFit = 646,913848, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), ptratio(A, 10).  [covers 26,0/33,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), lstat(A, 4).  [covers 1,0/33,0 pos, 0,0/0,0 neg]
%     Score = -609,336692 (regressionFit = 609,336690, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), lstat(A, 6).  [covers 12,0/33,0 pos, 0,0/0,0 neg]
%     Score = -617,724099 (regressionFit = 617,724097, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), lstat(A, 5).  [covers 7,0/33,0 pos, 0,0/0,0 neg]
%     Score = -635,155237 (regressionFit = 635,155235, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 7), lstat(A, 7).  [covers 7,0/33,0 pos, 0,0/0,0 neg]
%     Score = -656,528466 (regressionFit = 656,528464, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), lstat(A, 10).  [covers 4,0/33,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- b(A, 7), nox(A, 10).  [covers 11,0/33,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- b(A, 7), nox(A, 10).  [covers 11,0/33,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -19,925.
% Will extend: medv(A) :- b(A, 7), nox(A, 10).  [covers 11,0/33,0 pos, 0,0/0,0 neg]
Comparing variance: 2.22280783107413 to score=0.0025 #egs=11.0
Comparing variance: 21.57472765490833 to score=0.0025 #egs=22.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 11,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-2,222808)
%         ILP node to extend: medv(A) :- b(A, 7), nox(A, 10).  [covers 11,0/33,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -2,222808) into the LAST position (#4) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 22,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-21,574728)
%         ILP node to extend: medv(A) :- b(A, 7).  [covers 33,0/33,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -21,574728) into position #1 in the search queue (new size=5).

% Time for loop #7: 27 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      medv(A) :- b(A, 7), nox(A, 10).  [covers 11,0/33,0 pos, 0,0/0,0 neg]
% This clause covers 11 positive examples, of which 11 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- b(A, 7).  [covers 33,0/22,0 pos, 0,0/0,0 neg]'
%     Score = -4.743,603343 (regressionFit = 4.743,603342, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 22,0/22,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 0 1 3 4 7 8 10 13
% Gleaner: New best node found (score = -4.743,603343): medv(A) :- b(A, 7).  [covers 22,0/22,0 pos, 0,0/0,0 neg]
%     Score = -444,970228 (regressionFit = 444,970226, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), crim(A, 8).  [covers 6,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -444,970228): medv(A) :- b(A, 7), crim(A, 8).  [covers 6,0/22,0 pos, 0,0/0,0 neg]
%     Score = -463,845895 (regressionFit = 463,845893, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), crim(A, 10).  [covers 11,0/22,0 pos, 0,0/0,0 neg]
%     Score = -439,046984 (regressionFit = 439,046982, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), crim(A, 9).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -439,046984): medv(A) :- b(A, 7), crim(A, 9).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), zn(A, 0).  [covers 22,0/22,0 pos, 0,0/0,0 neg]
%     Score = -402,934844 (regressionFit = 402,934842, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), indus(A, 9).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -402,934844): medv(A) :- b(A, 7), indus(A, 9).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -402,934844 (regressionFit = 402,934842, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), indus(A, 10).  [covers 15,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), chas(A, 0).  [covers 21,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), chas(A, 1).  [covers 1,0/22,0 pos, 0,0/0,0 neg]
%     Score = -466,091191 (regressionFit = 466,091189, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), nox(A, 9).  [covers 11,0/22,0 pos, 0,0/0,0 neg]
%     Score = -466,091191 (regressionFit = 466,091189, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 7), nox(A, 7).  [covers 11,0/22,0 pos, 0,0/0,0 neg]
%     Score = -462,531855 (regressionFit = 462,531853, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), rm(A, 6).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -466,854850 (regressionFit = 466,854847, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 7), rm(A, 7).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -470,434989 (regressionFit = 470,434987, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), rm(A, 9).  [covers 4,0/22,0 pos, 0,0/0,0 neg]
%     Score = -453,340546 (regressionFit = 453,340544, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), rm(A, 4).  [covers 3,0/22,0 pos, 0,0/0,0 neg]
%     Score = -433,544370 (regressionFit = 433,544368, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), age(A, 6).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), age(A, 2).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -473,692256 (regressionFit = 473,692254, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 7), age(A, 7).  [covers 6,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), age(A, 4).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -393,553474 (regressionFit = 393,553472, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), dis(A, 10).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -393,553474): medv(A) :- b(A, 7), dis(A, 10).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
%     Score = -401,384237 (regressionFit = 401,384235, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), dis(A, 9).  [covers 5,0/22,0 pos, 0,0/0,0 neg]
%     Score = -420,484464 (regressionFit = 420,484462, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), dis(A, 8).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -402,934844 (regressionFit = 402,934842, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), rad(A, 5).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -402,934844 (regressionFit = 402,934842, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), rad(A, 24).  [covers 15,0/22,0 pos, 0,0/0,0 neg]
%     Score = -402,934844 (regressionFit = 402,934842, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), tax(A, 403).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -402,934844 (regressionFit = 402,934842, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), tax(A, 666).  [covers 15,0/22,0 pos, 0,0/0,0 neg]
%     Score = -402,934844 (regressionFit = 402,934842, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), ptratio(A, 9).  [covers 7,0/22,0 pos, 0,0/0,0 neg]
%     Score = -402,934844 (regressionFit = 402,934842, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), ptratio(A, 10).  [covers 15,0/22,0 pos, 0,0/0,0 neg]
%     Score = -462,391520 (regressionFit = 462,391518, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), lstat(A, 6).  [covers 6,0/22,0 pos, 0,0/0,0 neg]
%     Score = -468,751297 (regressionFit = 468,751295, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 7), lstat(A, 7).  [covers 6,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), lstat(A, 10).  [covers 2,0/22,0 pos, 0,0/0,0 neg]
%     Score = -446,103055 (regressionFit = 446,103053, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), lstat(A, 5).  [covers 5,0/22,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 7), lstat(A, 8).  [covers 2,0/22,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- b(A, 7), dis(A, 10).  [covers 8,0/22,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- b(A, 7), dis(A, 10).  [covers 8,0/22,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -21,575.
% Will extend: medv(A) :- b(A, 7), dis(A, 10).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #8: 20 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      medv(A) :- b(A, 7), dis(A, 10).  [covers 8,0/22,0 pos, 0,0/0,0 neg]
% This clause covers 8 positive examples, of which 8 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (medv(A) :- b(A, 7))
Created a leaf under (medv(A) :- age(A, 6))
Created a leaf under (medv(A) :- indus(A, 3))
Created a leaf under (medv(A) :- nox(A, 10))

%%%%%  WILL-Produced Tree #5 @ 14:10:15 10/20/22.  %%%%%


% FOR medv(A):
%   if ( nox(A, 8) )
%   then if ( age(A, 9) )
%   | then return 2.224627837023844;  // std dev = 14,575, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( age(A, 6) )
%   | | then if ( indus(A, 10) )
%   | | | then return 2.22612102022873;  // std dev = 14,791, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -5.061625149125154;  // std dev = 6,377, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -4.128834655012771;  // std dev = 3,005, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( indus(A, 3) )
%   | then return -1.4025363823006436;  // std dev = 2,809, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | else if ( b(A, 7) )
%   | | then if ( nox(A, 10) )
%   | | | then return 1.6921416865326413;  // std dev = 1,491, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else if ( dis(A, 10) )
%   | | | | then return -0.41629026134939795;  // std dev = 10,096, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | | else return -4.407342531381089;  // std dev = 17,077, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.571985325995354;  // std dev = 3,573, 320,000 (wgt'ed) examples reached here.  /* #pos=320 */


% Clauses:

medv(A, 2.224627837023844) :- 
     nox(A, 8), 
     age(A, 9), 
     !. // Clause #1.

medv(A, 2.22612102022873) :- 
     nox(A, 8), 
     age(A, 6), 
     indus(A, 10), 
     !. // Clause #2.

medv(A, -5.061625149125154) :- 
     nox(A, 8), 
     age(A, 6), 
     !. // Clause #3.

medv(A, -4.128834655012771) :- 
     nox(A, 8), 
     !. // Clause #4.

medv(A, -1.4025363823006436) :- 
     indus(A, 3), 
     !. // Clause #5.

medv(A, 1.6921416865326413) :- 
     b(A, 7), 
     nox(A, 10), 
     !. // Clause #6.

medv(A, -0.41629026134939795) :- 
     b(A, 7), 
     dis(A, 10), 
     !. // Clause #7.

medv(A, -4.407342531381089) :- 
     b(A, 7), 
     !. // Clause #8.

medv(A, 0.571985325995354) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_medv(a, 2.224627837023844) :-  /* #pos=6 */ 
   nox(a, 8),
   age(a, 9),
   !. // Flattened version of clause #1.

flattened_medv(a, 2.22612102022873) :-  /* #pos=7 */ 
   nox(a, 8),
   age(a, 6),
   indus(a, 10),
   !. // Flattened version of clause #2.

flattened_medv(a, -5.061625149125154) :-  /* #pos=5 */ 
   nox(a, 8),
   age(a, 6),
   !. // Flattened version of clause #3.

flattened_medv(a, -4.128834655012771) :-  /* #pos=18 */ 
   nox(a, 8),
   !. // Flattened version of clause #4.

flattened_medv(a, -1.4025363823006436) :-  /* #pos=47 */ 
   indus(a, 3),
   !. // Flattened version of clause #5.

flattened_medv(a, 1.6921416865326413) :-  /* #pos=11 */ 
   b(a, 7),
   nox(a, 10),
   !. // Flattened version of clause #6.

flattened_medv(a, -0.41629026134939795) :-  /* #pos=8 */ 
   b(a, 7),
   dis(a, 10),
   !. // Flattened version of clause #7.

flattened_medv(a, -4.407342531381089) :-  /* #pos=14 */ 
   b(a, 7),
   !. // Flattened version of clause #8.

flattened_medv(underscore, 0.571985325995354) :-  /* #pos=320 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   nox(a, 10)
%   nox(a, 8)
%   indus(a, 10)
%   dis(a, 10)
%   b(a, 7)
%   age(a, 6)
%   age(a, 9)
%   indus(a, 3)

% Saving model in: data/boston_housing/train/models/bRDNs/medv.model.ckpt
% Time taken to learn 5 trees is 3,957 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:21.57472765490833
Set score:0.0025
% Kept 436 of the 436 positive examples.
% Kept 0 of the 0 negative examples.
% Dataset size: 436
Computing probabilities
prob time:85 milliseconds
No hidden examples for : medv
Time to build dataset: 89 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:12.636184008219336
Set score:0.0025

% Have these 8 positive seeds: 19 187 192 210 257 273 278 281

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -5.505,327088 (regressionFit = 5.505,327087, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5.505,327088): medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.496,063669 (regressionFit = 5.496,063668, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5.496,063669): medv(A) :- crim(A, 5).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.462,893487 (regressionFit = 5.462,893486, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5.462,893487): medv(A) :- crim(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.507,733231 (regressionFit = 5.507,733230, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.494,630668 (regressionFit = 5.494,630667, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.426,533710 (regressionFit = 5.426,533709, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5.426,533710): medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.504,279334 (regressionFit = 5.504,279333, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 40).  [covers 7,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.508,675325 (regressionFit = 5.508,675324, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 80).  [covers 14,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.476,754672 (regressionFit = 5.476,754671, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 90).  [covers 4,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.509,351416 (regressionFit = 5.509,351415, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.509,376229 (regressionFit = 5.509,376228, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.452,260896 (regressionFit = 5.452,260895, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.448,158495 (regressionFit = 5.448,158494, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.454,447815 (regressionFit = 5.454,447814, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.507,910230 (regressionFit = 5.507,910229, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.509,185669 (regressionFit = 5.509,185668, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 401,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.509,185669 (regressionFit = 5.509,185668, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 35,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.497,670224 (regressionFit = 5.497,670223, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.509,287880 (regressionFit = 5.509,287879, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.506,389623 (regressionFit = 5.506,389622, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.502,396572 (regressionFit = 5.502,396571, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.489,870018 (regressionFit = 5.489,870017, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.416,082001 (regressionFit = 5.416,082000, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -5.416,082001): medv(A) :- rm(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.506,058775 (regressionFit = 5.506,058774, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.504,573426 (regressionFit = 5.504,573425, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.477,125932 (regressionFit = 5.477,125931, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.507,830338 (regressionFit = 5.507,830337, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.457,195725 (regressionFit = 5.457,195724, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.451,095741 (regressionFit = 5.451,095740, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 37,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.508,608929 (regressionFit = 5.508,608928, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.508,814241 (regressionFit = 5.508,814240, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.482,053939 (regressionFit = 5.482,053938, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.509,265689 (regressionFit = 5.509,265688, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.448,662642 (regressionFit = 5.448,662641, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.479,652731 (regressionFit = 5.479,652730, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.505,770391 (regressionFit = 5.505,770390, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.503,766843 (regressionFit = 5.503,766842, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.452,526098 (regressionFit = 5.452,526097, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.467,419366 (regressionFit = 5.467,419365, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 18,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.509,041780 (regressionFit = 5.509,041779, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 101,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.493,605347 (regressionFit = 5.493,605346, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 23,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.496,541807 (regressionFit = 5.496,541806, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 15,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.485,342177 (regressionFit = 5.485,342176, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.507,910230 (regressionFit = 5.507,910229, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.504,467199 (regressionFit = 5.504,467198, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 432).  [covers 9,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.468,506967 (regressionFit = 5.468,506966, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.495,990490 (regressionFit = 5.495,990489, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 254).  [covers 5,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.508,725598 (regressionFit = 5.508,725597, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 245).  [covers 3,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 242).  [covers 2,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 335).  [covers 2,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 187).  [covers 1,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.507,910230 (regressionFit = 5.507,910229, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.489,105305 (regressionFit = 5.489,105304, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.508,825898 (regressionFit = 5.508,825897, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.508,781912 (regressionFit = 5.508,781911, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.453,822923 (regressionFit = 5.453,822922, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 8).  [covers 8,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.486,766381 (regressionFit = 5.486,766380, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.507,310015 (regressionFit = 5.507,310014, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 97,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.509,351287 (regressionFit = 5.509,351286, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.507,660658 (regressionFit = 5.507,660657, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.492,562631 (regressionFit = 5.492,562630, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 102,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.500,767049 (regressionFit = 5.500,767048, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.508,238277 (regressionFit = 5.508,238276, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.505,539126 (regressionFit = 5.505,539125, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.508,957704 (regressionFit = 5.508,957703, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 38,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.509,284580 (regressionFit = 5.509,284579, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -5.438,374094 (regressionFit = 5.438,374093, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: medv(A) :- rm(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
Comparing variance: 9.243786657108048 to score=0.0025 #egs=43.0
Comparing variance: 12.769972452823025 to score=0.0025 #egs=393.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 43,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-9,243787)
%         ILP node to extend: medv(A) :- rm(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -9,243787) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 393,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-12,769972)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -12,769972) into position #1 in the search queue (new size=2).

% Time for loop #1: 150 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      medv(A) :- rm(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
% This clause covers 43 positive examples, of which 43 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 35 57 120 147 157 183 209 257

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 393,0/393,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 393,0/393,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -4.997,888969 (regressionFit = 4.997,888968, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 44,0/393,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.997,888969): medv(A) :- crim(A, 5).  [covers 44,0/393,0 pos, 0,0/0,0 neg]
%     Score = -4.992,772685 (regressionFit = 4.992,772684, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 42,0/393,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.992,772685): medv(A) :- crim(A, 7).  [covers 42,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.018,184283 (regressionFit = 5.018,184282, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 39,0/393,0 pos, 0,0/0,0 neg]
%     Score = -4.985,859919 (regressionFit = 4.985,859918, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 27,0/393,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.985,859919): medv(A) :- crim(A, 8).  [covers 27,0/393,0 pos, 0,0/0,0 neg]
%     Score = -4.970,345233 (regressionFit = 4.970,345232, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 272,0/393,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.970,345233): medv(A) :- zn(A, 0).  [covers 272,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.018,597791 (regressionFit = 5.018,597790, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 22).  [covers 8,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.016,174405 (regressionFit = 5.016,174404, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 20).  [covers 21,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.018,589575 (regressionFit = 5.018,589574, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 52.5).  [covers 3,0/393,0 pos, 0,0/0,0 neg]
%     Score = -4.997,610459 (regressionFit = 4.997,610458, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 19,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.018,500009 (regressionFit = 5.018,500008, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 24,0/393,0 pos, 0,0/0,0 neg]
%     Score = -4.960,766534 (regressionFit = 4.960,766533, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 49,0/393,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.960,766534): medv(A) :- indus(A, 2).  [covers 49,0/393,0 pos, 0,0/0,0 neg]
%     Score = -4.978,395694 (regressionFit = 4.978,395693, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 42,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.014,507975 (regressionFit = 5.014,507974, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 47,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.018,410676 (regressionFit = 5.018,410675, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 31,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.016,521723 (regressionFit = 5.016,521722, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 82,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.018,209359 (regressionFit = 5.018,209358, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 362,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.018,209359 (regressionFit = 5.018,209358, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 31,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.018,168947 (regressionFit = 5.018,168946, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 33,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.018,124253 (regressionFit = 5.018,124252, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 31,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.018,013993 (regressionFit = 5.018,013992, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 45,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.016,989219 (regressionFit = 5.016,989218, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 45,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.007,375205 (regressionFit = 5.007,375204, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 45,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.013,791139 (regressionFit = 5.013,791138, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 41,0/393,0 pos, 0,0/0,0 neg]
%     Score = -4.987,441030 (regressionFit = 4.987,441029, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 36,0/393,0 pos, 0,0/0,0 neg]
%     Score = -4.934,121273 (regressionFit = 4.934,121272, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 40,0/393,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.934,121273): medv(A) :- rm(A, 10).  [covers 40,0/393,0 pos, 0,0/0,0 neg]
%     Score = -4.997,564760 (regressionFit = 4.997,564759, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 48,0/393,0 pos, 0,0/0,0 neg]
%     Score = -4.994,711916 (regressionFit = 4.994,711915, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 39,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.007,181069 (regressionFit = 5.007,181068, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 35,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.015,929872 (regressionFit = 5.015,929871, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 38,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.016,392461 (regressionFit = 5.016,392460, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 32,0/393,0 pos, 0,0/0,0 neg]
%     Score = -4.983,456341 (regressionFit = 4.983,456340, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 47,0/393,0 pos, 0,0/0,0 neg]
%     Score = -4.979,903503 (regressionFit = 4.979,903501, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 45,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.018,110836 (regressionFit = 5.018,110835, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 37,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.017,410227 (regressionFit = 5.017,410226, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 39,0/393,0 pos, 0,0/0,0 neg]
%     Score = -4.965,569413 (regressionFit = 4.965,569412, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 27,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.015,375674 (regressionFit = 5.015,375673, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 43,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.008,874947 (regressionFit = 5.008,874946, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 22,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.011,720116 (regressionFit = 5.011,720115, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 90,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.001,782633 (regressionFit = 5.001,782632, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 101,0/393,0 pos, 0,0/0,0 neg]
%     Score = -4.947,574109 (regressionFit = 4.947,574108, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 22,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.014,990846 (regressionFit = 5.014,990845, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 15,0/393,0 pos, 0,0/0,0 neg]
%     Score = -4.992,427890 (regressionFit = 4.992,427889, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 15,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.016,521723 (regressionFit = 5.016,521722, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 82,0/393,0 pos, 0,0/0,0 neg]
%     Score = -4.987,286305 (regressionFit = 4.987,286304, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 437).  [covers 12,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.018,500009 (regressionFit = 5.018,500008, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 24,0/393,0 pos, 0,0/0,0 neg]
%     Score = -4.992,320290 (regressionFit = 4.992,320289, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 36,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.018,597791 (regressionFit = 5.018,597790, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 330).  [covers 8,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.010,938859 (regressionFit = 5.010,938858, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 264).  [covers 12,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.018,589575 (regressionFit = 5.018,589574, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 293).  [covers 3,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.005,769927 (regressionFit = 5.005,769926, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 12,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.016,521723 (regressionFit = 5.016,521722, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 82,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.003,613896 (regressionFit = 5.003,613895, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 7).  [covers 14,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.016,789665 (regressionFit = 5.016,789664, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 44,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.011,634502 (regressionFit = 5.011,634501, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 44,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.018,554143 (regressionFit = 5.018,554142, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 40,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.018,591380 (regressionFit = 5.018,591379, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 46,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.016,222911 (regressionFit = 5.016,222910, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 89,0/393,0 pos, 0,0/0,0 neg]
%     Score = -4.994,980181 (regressionFit = 4.994,980179, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 39,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.009,793735 (regressionFit = 5.009,793734, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 42,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.018,593377 (regressionFit = 5.018,593376, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 41,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.011,114673 (regressionFit = 5.011,114672, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 94,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.018,580161 (regressionFit = 5.018,580160, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 35,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.014,978359 (regressionFit = 5.014,978358, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 26,0/393,0 pos, 0,0/0,0 neg]
%     Score = -4.983,654950 (regressionFit = 4.983,654949, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 40,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.018,247775 (regressionFit = 5.018,247774, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 37,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.017,848515 (regressionFit = 5.017,848514, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 51,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.018,543855 (regressionFit = 5.018,543854, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 40,0/393,0 pos, 0,0/0,0 neg]
%     Score = -4.960,607911 (regressionFit = 4.960,607910, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 42,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.004,366510 (regressionFit = 5.004,366509, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 34,0/393,0 pos, 0,0/0,0 neg]
%     Score = -5.017,826468 (regressionFit = 5.017,826467, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 30,0/393,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 10).  [covers 40,0/393,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 10).  [covers 40,0/393,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -12,770.
% Will extend: medv(A) :- rm(A, 10).  [covers 40,0/393,0 pos, 0,0/0,0 neg]
Comparing variance: 5.27187224490242 to score=0.0025 #egs=40.0
Comparing variance: 13.380301366790562 to score=0.0025 #egs=353.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 40,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-5,271872)
%         ILP node to extend: medv(A) :- rm(A, 10).  [covers 40,0/393,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -5,271872) into the LAST position (#2) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 353,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-13,380301)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -13,380301) into position #1 in the search queue (new size=3).

% Time for loop #2: 141 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      medv(A) :- rm(A, 10).  [covers 40,0/393,0 pos, 0,0/0,0 neg]
% This clause covers 40 positive examples, of which 40 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 43 44 71 113 205 229 234 279

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 353,0/353,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 353,0/353,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -4.709,030909 (regressionFit = 4.709,030908, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 40,0/353,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.709,030909): medv(A) :- crim(A, 5).  [covers 40,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.694,021474 (regressionFit = 4.694,021473, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 25,0/353,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.694,021474): medv(A) :- crim(A, 8).  [covers 25,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.721,422264 (regressionFit = 4.721,422263, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 34,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.698,685519 (regressionFit = 4.698,685518, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 39,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.723,002962 (regressionFit = 4.723,002961, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 33,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.720,649008 (regressionFit = 4.720,649007, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 42,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.713,780449 (regressionFit = 4.713,780448, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 41,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.696,137642 (regressionFit = 4.696,137641, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 241,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.683,057773 (regressionFit = 4.683,057772, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 90).  [covers 4,0/353,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.683,057773): medv(A) :- zn(A, 90).  [covers 4,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.722,837264 (regressionFit = 4.722,837263, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 22,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.668,892059 (regressionFit = 4.668,892058, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 42,0/353,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.668,892059): medv(A) :- indus(A, 1).  [covers 42,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.667,397936 (regressionFit = 4.667,397935, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 47,0/353,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.667,397936): medv(A) :- indus(A, 2).  [covers 47,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.723,193874 (regressionFit = 4.723,193872, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 38,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.722,215478 (regressionFit = 4.722,215477, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 73,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.719,372545 (regressionFit = 4.719,372544, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 28,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.719,372545 (regressionFit = 4.719,372544, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 325,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.702,017252 (regressionFit = 4.702,017251, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 31,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.722,576846 (regressionFit = 4.722,576845, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 42,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.704,392053 (regressionFit = 4.704,392052, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 38,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.722,451459 (regressionFit = 4.722,451458, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 29,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.705,939016 (regressionFit = 4.705,939015, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 44,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.706,947168 (regressionFit = 4.706,947167, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 44,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.711,277154 (regressionFit = 4.711,277153, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 48,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.722,430738 (regressionFit = 4.722,430737, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 43,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.708,154364 (regressionFit = 4.708,154363, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 39,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.723,245763 (regressionFit = 4.723,245762, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 34,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.713,074256 (regressionFit = 4.713,074255, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 28,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.723,245646 (regressionFit = 4.723,245645, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 34,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.697,867209 (regressionFit = 4.697,867208, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 40,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.722,935510 (regressionFit = 4.722,935509, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 37,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.676,783022 (regressionFit = 4.676,783021, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 39,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.722,156643 (regressionFit = 4.722,156642, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 43,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.715,907617 (regressionFit = 4.715,907616, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 45,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.656,715313 (regressionFit = 4.656,715312, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 27,0/353,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.656,715313): medv(A) :- dis(A, 6).  [covers 27,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.720,360171 (regressionFit = 4.720,360170, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 37,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.680,888107 (regressionFit = 4.680,888106, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 43,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.722,629296 (regressionFit = 4.722,629295, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 38,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.714,338451 (regressionFit = 4.714,338450, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 31,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.716,095770 (regressionFit = 4.716,095769, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 88,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.649,049116 (regressionFit = 4.649,049115, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 31,0/353,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.649,049116): medv(A) :- rad(A, 3).  [covers 31,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.663,954405 (regressionFit = 4.663,954404, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 22,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.722,215478 (regressionFit = 4.722,215477, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 73,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.722,837264 (regressionFit = 4.722,837263, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 22,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.544,854255 (regressionFit = 4.544,854254, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 193).  [covers 6,0/353,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.544,854255): medv(A) :- tax(A, 193).  [covers 6,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.705,876861 (regressionFit = 4.705,876860, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 36,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.712,210916 (regressionFit = 4.712,210915, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 287).  [covers 7,0/353,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 187).  [covers 1,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.722,215478 (regressionFit = 4.722,215477, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 73,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.721,872521 (regressionFit = 4.721,872520, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 42,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.715,593915 (regressionFit = 4.715,593914, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 37,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.713,211504 (regressionFit = 4.713,211503, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 39,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.723,096311 (regressionFit = 4.723,096310, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 37,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.721,285032 (regressionFit = 4.721,285031, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 78,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.685,855141 (regressionFit = 4.685,855140, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 35,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.722,273886 (regressionFit = 4.722,273885, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 31,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.722,956969 (regressionFit = 4.722,956968, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 34,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.722,115970 (regressionFit = 4.722,115969, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 37,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.708,786136 (regressionFit = 4.708,786135, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 86,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.713,348757 (regressionFit = 4.713,348756, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 30,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.718,005432 (regressionFit = 4.718,005431, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 31,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.718,218769 (regressionFit = 4.718,218768, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 50,0/353,0 pos, 0,0/0,0 neg]
%     Score = -4.723,224363 (regressionFit = 4.723,224362, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 34,0/353,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- tax(A, 193).  [covers 6,0/353,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- tax(A, 193).  [covers 6,0/353,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -13,380.
% Will extend: medv(A) :- tax(A, 193).  [covers 6,0/353,0 pos, 0,0/0,0 neg]
Comparing variance: 6.9425445797265395 to score=0.0025 #egs=6.0
Comparing variance: 12.977518691707623 to score=0.0025 #egs=347.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 6,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 347,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-12,977519)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -12,977519) into position #1 in the search queue (new size=3).

% Time for loop #3: 127 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      medv(A) :- tax(A, 193).  [covers 6,0/353,0 pos, 0,0/0,0 neg]
% This clause covers 6 positive examples, of which 6 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 6 positive seeds: 52 120 250 290 316 326

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 347,0/347,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 347,0/347,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -4.478,949512 (regressionFit = 4.478,949511, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 25,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.478,949512): medv(A) :- crim(A, 8).  [covers 25,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.503,126166 (regressionFit = 4.503,126165, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 33,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.497,231792 (regressionFit = 4.497,231791, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 41,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.498,092750 (regressionFit = 4.498,092749, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 42,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.494,932933 (regressionFit = 4.494,932932, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 32,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.486,994156 (regressionFit = 4.486,994155, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 235,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.458,522222 (regressionFit = 4.458,522221, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 30).  [covers 4,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.458,522222): medv(A) :- zn(A, 30).  [covers 4,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.500,226219 (regressionFit = 4.500,226218, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 75).  [covers 3,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.459,564503 (regressionFit = 4.459,564502, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 12.5).  [covers 9,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.503,164040 (regressionFit = 4.503,164039, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 22,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.467,402890 (regressionFit = 4.467,402889, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 36,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.503,184866 (regressionFit = 4.503,184865, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 73,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.494,753310 (regressionFit = 4.494,753309, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 44,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.457,041978 (regressionFit = 4.457,041977, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 47,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.457,041978): medv(A) :- indus(A, 2).  [covers 47,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.501,085507 (regressionFit = 4.501,085506, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 319,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.502,746900 (regressionFit = 4.502,746899, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 28,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.502,619244 (regressionFit = 4.502,619243, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 40,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.474,469289 (regressionFit = 4.474,469287, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 10).  [covers 35,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.503,064719 (regressionFit = 4.503,064718, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 29,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.478,623788 (regressionFit = 4.478,623787, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 38,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.497,747357 (regressionFit = 4.497,747356, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 45,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.399,414405 (regressionFit = 4.399,414404, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 44,0/347,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.399,414405): medv(A) :- rm(A, 2).  [covers 44,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.490,936509 (regressionFit = 4.490,936508, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 44,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.487,659168 (regressionFit = 4.487,659167, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 43,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.503,107046 (regressionFit = 4.503,107045, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 33,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.471,028585 (regressionFit = 4.471,028584, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 40,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.501,854061 (regressionFit = 4.501,854060, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 37,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.495,656532 (regressionFit = 4.495,656531, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 18,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.503,168108 (regressionFit = 4.503,168107, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 38,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.499,036267 (regressionFit = 4.499,036266, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 45,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.490,720423 (regressionFit = 4.490,720422, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 31,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.432,408713 (regressionFit = 4.432,408712, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 40,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.489,532826 (regressionFit = 4.489,532825, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 88,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.478,288340 (regressionFit = 4.478,288339, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 11,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.503,184866 (regressionFit = 4.503,184865, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 73,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.492,566835 (regressionFit = 4.492,566834, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 25,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.493,556604 (regressionFit = 4.493,556603, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 79,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.503,164040 (regressionFit = 4.503,164039, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 22,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.467,721297 (regressionFit = 4.467,721296, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 300).  [covers 5,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.503,184866 (regressionFit = 4.503,184865, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 73,0/347,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 469).  [covers 1,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.491,270148 (regressionFit = 4.491,270147, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 345).  [covers 3,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.499,887803 (regressionFit = 4.499,887802, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 42,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.496,688508 (regressionFit = 4.496,688507, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 39,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.502,981584 (regressionFit = 4.502,981583, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 78,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.490,392845 (regressionFit = 4.490,392844, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 7).  [covers 11,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.502,220138 (regressionFit = 4.502,220137, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 37,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.487,226690 (regressionFit = 4.487,226689, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 32,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.498,972267 (regressionFit = 4.498,972266, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 37,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.500,850821 (regressionFit = 4.500,850820, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 31,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.472,535699 (regressionFit = 4.472,535698, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 35,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.496,356792 (regressionFit = 4.496,356791, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 84,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.502,651849 (regressionFit = 4.502,651848, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 22,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.496,371759 (regressionFit = 4.496,371758, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 30,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.477,364272 (regressionFit = 4.477,364271, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 38,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.503,197689 (regressionFit = 4.503,197688, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 41,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.502,452666 (regressionFit = 4.502,452665, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 27,0/347,0 pos, 0,0/0,0 neg]
%     Score = -4.461,544128 (regressionFit = 4.461,544127, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 34,0/347,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 2).  [covers 44,0/347,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 2).  [covers 44,0/347,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -12,978.
% Will extend: medv(A) :- rm(A, 2).  [covers 44,0/347,0 pos, 0,0/0,0 neg]
Comparing variance: 7.556369891898237 to score=0.0025 #egs=44.0
Comparing variance: 13.422224848388554 to score=0.0025 #egs=303.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 44,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-7,556370)
%         ILP node to extend: medv(A) :- rm(A, 2).  [covers 44,0/347,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -7,556370) into position #2 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 303,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-13,422225)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 4 and with score = -13,422225) into position #1 in the search queue (new size=4).

% Time for loop #4: 111 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      medv(A) :- rm(A, 2).  [covers 44,0/347,0 pos, 0,0/0,0 neg]
% This clause covers 44 positive examples, of which 44 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 17 45 54 67 71 106 143 221

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 303,0/303,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 303,0/303,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -4.066,795592 (regressionFit = 4.066,795591, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 29,0/303,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.066,795592): medv(A) :- crim(A, 3).  [covers 29,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.033,410440 (regressionFit = 4.033,410439, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 39,0/303,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.033,410440): medv(A) :- crim(A, 5).  [covers 39,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.057,883457 (regressionFit = 4.057,883456, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 35,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.064,949447 (regressionFit = 4.064,949446, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 38,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.043,152757 (regressionFit = 4.043,152756, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 34,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.066,081234 (regressionFit = 4.066,081233, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 9).  [covers 16,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.057,233682 (regressionFit = 4.057,233681, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 204,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.061,522840 (regressionFit = 4.061,522839, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 80).  [covers 11,0/303,0 pos, 0,0/0,0 neg]
%     Score = -3.958,384929 (regressionFit = 3.958,384928, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 95).  [covers 4,0/303,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.958,384929): medv(A) :- zn(A, 95).  [covers 4,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.066,791844 (regressionFit = 4.066,791843, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 20).  [covers 20,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.036,719737 (regressionFit = 4.036,719736, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 13,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.066,159656 (regressionFit = 4.066,159655, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 21,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.050,462838 (regressionFit = 4.050,462837, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 42,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.063,616976 (regressionFit = 4.063,616975, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 32,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.018,445753 (regressionFit = 4.018,445752, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 44,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.066,926083 (regressionFit = 4.066,926082, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 60,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.066,225151 (regressionFit = 4.066,225150, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 276,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.066,225151 (regressionFit = 4.066,225150, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 27,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.063,340693 (regressionFit = 4.063,340692, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 27,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.065,528516 (regressionFit = 4.065,528515, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 29,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.039,955877 (regressionFit = 4.039,955876, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 35,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.060,192440 (regressionFit = 4.060,192439, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 33,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.048,940538 (regressionFit = 4.048,940536, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 10).  [covers 29,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.066,219243 (regressionFit = 4.066,219242, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 45,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.060,841900 (regressionFit = 4.060,841899, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 46,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.064,411728 (regressionFit = 4.064,411727, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 42,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.066,867280 (regressionFit = 4.066,867279, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 44,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.062,755867 (regressionFit = 4.062,755866, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 44,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.049,248979 (regressionFit = 4.049,248978, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 23,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.062,897047 (regressionFit = 4.062,897046, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 29,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.006,669426 (regressionFit = 4.006,669425, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 36,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.046,334601 (regressionFit = 4.046,334600, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 33,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.006,683631 (regressionFit = 4.006,683630, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 29,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.062,919842 (regressionFit = 4.062,919841, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 36,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.065,650101 (regressionFit = 4.065,650100, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 29,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.047,818213 (regressionFit = 4.047,818212, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 26,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.059,939681 (regressionFit = 4.059,939680, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 18,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.009,526382 (regressionFit = 4.009,526381, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 37,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.064,250056 (regressionFit = 4.064,250055, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 30,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.062,211438 (regressionFit = 4.062,211437, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 34,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.033,946571 (regressionFit = 4.033,946570, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 37,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.064,312209 (regressionFit = 4.064,312208, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 44,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.061,049970 (regressionFit = 4.061,049969, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 18,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.043,489274 (regressionFit = 4.043,489273, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 79,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.054,483736 (regressionFit = 4.054,483735, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 71,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.064,282003 (regressionFit = 4.064,282002, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 23,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.024,470147 (regressionFit = 4.024,470146, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 21,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.066,926083 (regressionFit = 4.066,926082, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 60,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.065,038466 (regressionFit = 4.065,038465, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 188).  [covers 7,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.066,159656 (regressionFit = 4.066,159655, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 21,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.058,381179 (regressionFit = 4.058,381178, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 296).  [covers 6,0/303,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 255).  [covers 1,0/303,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 402).  [covers 2,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.060,953145 (regressionFit = 4.060,953144, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 35,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.033,813078 (regressionFit = 4.033,813077, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 216).  [covers 4,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.066,926083 (regressionFit = 4.066,926082, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 60,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.062,144457 (regressionFit = 4.062,144456, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 29,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.055,692620 (regressionFit = 4.055,692619, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 41,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.059,286997 (regressionFit = 4.059,286996, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 35,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.035,972495 (regressionFit = 4.035,972494, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 36,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.066,830183 (regressionFit = 4.066,830181, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 65,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.064,192010 (regressionFit = 4.064,192009, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 32,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.065,097757 (regressionFit = 4.065,097756, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 35,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.064,478272 (regressionFit = 4.064,478271, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 22,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.066,648776 (regressionFit = 4.066,648775, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 72,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.059,325055 (regressionFit = 4.059,325054, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 31,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.066,913161 (regressionFit = 4.066,913160, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 38,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.052,222480 (regressionFit = 4.052,222479, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 48,0/303,0 pos, 0,0/0,0 neg]
%     Score = -4.061,329091 (regressionFit = 4.061,329090, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 31,0/303,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 95).  [covers 4,0/303,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- zn(A, 95).  [covers 4,0/303,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -13,422.
% Will extend: medv(A) :- zn(A, 95).  [covers 4,0/303,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #5: 117 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #5, the best clause found is:
%      medv(A) :- zn(A, 95).  [covers 4,0/303,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 6).  [covers 43,0/43,0 pos, 0,0/0,0 neg]'
%     Score = -5.416,082001 (regressionFit = 5.416,082000, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 43,0/43,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 4 15 16 18 20 21 24 26
% Gleaner: New best node found (score = -5.416,082001): medv(A) :- rm(A, 6).  [covers 43,0/43,0 pos, 0,0/0,0 neg]
%     Score = -393,268160 (regressionFit = 393,268158, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), crim(A, 4).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -393,268160): medv(A) :- rm(A, 6), crim(A, 4).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -390,744207 (regressionFit = 390,744205, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 6), crim(A, 6).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -390,744207): medv(A) :- rm(A, 6), crim(A, 6).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), crim(A, 1).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -396,619837 (regressionFit = 396,619835, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), crim(A, 7).  [covers 5,0/43,0 pos, 0,0/0,0 neg]
%     Score = -392,601625 (regressionFit = 392,601623, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), crim(A, 5).  [covers 5,0/43,0 pos, 0,0/0,0 neg]
%     Score = -358,904196 (regressionFit = 358,904194, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), zn(A, 0).  [covers 35,0/43,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -358,904196): medv(A) :- rm(A, 6), zn(A, 0).  [covers 35,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), zn(A, 82.5).  [covers 1,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), zn(A, 22).  [covers 1,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), zn(A, 80).  [covers 1,0/43,0 pos, 0,0/0,0 neg]
%     Score = -394,445124 (regressionFit = 394,445122, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 6), indus(A, 6).  [covers 5,0/43,0 pos, 0,0/0,0 neg]
%     Score = -350,559772 (regressionFit = 350,559769, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), indus(A, 1).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -350,559772): medv(A) :- rm(A, 6), indus(A, 1).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), indus(A, 2).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -358,058731 (regressionFit = 358,058729, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), indus(A, 5).  [covers 6,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), indus(A, 4).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -397,002458 (regressionFit = 397,002456, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), indus(A, 3).  [covers 7,0/43,0 pos, 0,0/0,0 neg]
%     Score = -397,482805 (regressionFit = 397,482803, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), chas(A, 0).  [covers 39,0/43,0 pos, 0,0/0,0 neg]
%     Score = -397,482805 (regressionFit = 397,482803, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), chas(A, 1).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -374,109009 (regressionFit = 374,109007, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), nox(A, 1).  [covers 6,0/43,0 pos, 0,0/0,0 neg]
%     Score = -316,023000 (regressionFit = 316,022998, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), nox(A, 4).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -316,023000): medv(A) :- rm(A, 6), nox(A, 4).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -379,096568 (regressionFit = 379,096566, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 6), nox(A, 6).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -390,559031 (regressionFit = 390,559029, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), nox(A, 3).  [covers 6,0/43,0 pos, 0,0/0,0 neg]
%     Score = -376,300405 (regressionFit = 376,300403, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), nox(A, 5).  [covers 5,0/43,0 pos, 0,0/0,0 neg]
%     Score = -393,718449 (regressionFit = 393,718447, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), age(A, 7).  [covers 5,0/43,0 pos, 0,0/0,0 neg]
%     Score = -392,449823 (regressionFit = 392,449821, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), age(A, 4).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -386,273151 (regressionFit = 386,273149, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), age(A, 3).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -397,463553 (regressionFit = 397,463551, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), age(A, 9).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -394,099668 (regressionFit = 394,099666, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), age(A, 8).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -396,942012 (regressionFit = 396,942010, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), age(A, 1).  [covers 7,0/43,0 pos, 0,0/0,0 neg]
%     Score = -397,437904 (regressionFit = 397,437902, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), age(A, 5).  [covers 6,0/43,0 pos, 0,0/0,0 neg]
%     Score = -338,475502 (regressionFit = 338,475500, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), dis(A, 7).  [covers 7,0/43,0 pos, 0,0/0,0 neg]
%     Score = -396,955280 (regressionFit = 396,955278, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), dis(A, 4).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -381,800524 (regressionFit = 381,800522, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), dis(A, 3).  [covers 6,0/43,0 pos, 0,0/0,0 neg]
%     Score = -395,374666 (regressionFit = 395,374664, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 6), dis(A, 6).  [covers 5,0/43,0 pos, 0,0/0,0 neg]
%     Score = -396,450053 (regressionFit = 396,450051, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), dis(A, 5).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -394,862149 (regressionFit = 394,862147, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), dis(A, 1).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -365,977318 (regressionFit = 365,977316, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 6), rad(A, 6).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -291,518020 (regressionFit = 291,518018, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), rad(A, 3).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -291,518020): medv(A) :- rm(A, 6), rad(A, 3).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), rad(A, 2).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), rad(A, 8).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), rad(A, 7).  [covers 1,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), rad(A, 1).  [covers 1,0/43,0 pos, 0,0/0,0 neg]
%     Score = -356,280180 (regressionFit = 356,280178, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), rad(A, 4).  [covers 11,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), tax(A, 432).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), tax(A, 193).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), tax(A, 348).  [covers 1,0/43,0 pos, 0,0/0,0 neg]
%     Score = -377,497851 (regressionFit = 377,497849, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), tax(A, 307).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), tax(A, 330).  [covers 1,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), tax(A, 315).  [covers 1,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), tax(A, 304).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -350,974987 (regressionFit = 350,974985, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), ptratio(A, 2).  [covers 6,0/43,0 pos, 0,0/0,0 neg]
%     Score = -396,605681 (regressionFit = 396,605679, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), ptratio(A, 9).  [covers 6,0/43,0 pos, 0,0/0,0 neg]
%     Score = -347,678149 (regressionFit = 347,678147, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 6), ptratio(A, 6).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), ptratio(A, 5).  [covers 2,0/43,0 pos, 0,0/0,0 neg]
%     Score = -393,410932 (regressionFit = 393,410930, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), ptratio(A, 1).  [covers 3,0/43,0 pos, 0,0/0,0 neg]
%     Score = -397,410925 (regressionFit = 397,410922, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), ptratio(A, 3).  [covers 5,0/43,0 pos, 0,0/0,0 neg]
%     Score = -393,407241 (regressionFit = 393,407239, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), ptratio(A, 4).  [covers 6,0/43,0 pos, 0,0/0,0 neg]
%     Score = -356,652135 (regressionFit = 356,652133, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), b(A, 1).  [covers 8,0/43,0 pos, 0,0/0,0 neg]
%     Score = -387,668134 (regressionFit = 387,668132, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), b(A, 5).  [covers 5,0/43,0 pos, 0,0/0,0 neg]
%     Score = -375,171105 (regressionFit = 375,171103, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), b(A, 3).  [covers 8,0/43,0 pos, 0,0/0,0 neg]
%     Score = -397,044410 (regressionFit = 397,044408, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 6), b(A, 6).  [covers 5,0/43,0 pos, 0,0/0,0 neg]
%     Score = -397,480843 (regressionFit = 397,480841, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), b(A, 2).  [covers 5,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), b(A, 4).  [covers 1,0/43,0 pos, 0,0/0,0 neg]
%     Score = -383,471073 (regressionFit = 383,471071, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), b(A, 7).  [covers 8,0/43,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), lstat(A, 7).  [covers 1,0/43,0 pos, 0,0/0,0 neg]
%     Score = -396,126566 (regressionFit = 396,126563, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), lstat(A, 4).  [covers 8,0/43,0 pos, 0,0/0,0 neg]
%     Score = -381,579819 (regressionFit = 381,579817, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), lstat(A, 9).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
%     Score = -393,571972 (regressionFit = 393,571970, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), lstat(A, 5).  [covers 6,0/43,0 pos, 0,0/0,0 neg]
%     Score = -389,815375 (regressionFit = 389,815373, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), lstat(A, 2).  [covers 7,0/43,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 6), rad(A, 3).  [covers 4,0/43,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 6), rad(A, 3).  [covers 4,0/43,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -9,244.
% Will extend: medv(A) :- rm(A, 6), rad(A, 3).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
Comparing variance: 14.249660298210621 to score=0.0025 #egs=4.0
Comparing variance: 6.013317353519197 to score=0.0025 #egs=39.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 4,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 39,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-6,013317)
%         ILP node to extend: medv(A) :- rm(A, 6).  [covers 43,0/43,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -6,013317) into position #2 in the search queue (new size=3).

% Time for loop #6: 49 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      medv(A) :- rm(A, 6), rad(A, 3).  [covers 4,0/43,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 2).  [covers 44,0/44,0 pos, 0,0/0,0 neg]'
%     Score = -4.399,414405 (regressionFit = 4.399,414404, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 44,0/44,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 4 7 11 13 14 30 33 35
% Gleaner: New best node found (score = -4.399,414405): medv(A) :- rm(A, 2).  [covers 44,0/44,0 pos, 0,0/0,0 neg]
%     Score = -332,177542 (regressionFit = 332,177540, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), crim(A, 7).  [covers 5,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -332,177542): medv(A) :- rm(A, 2), crim(A, 7).  [covers 5,0/44,0 pos, 0,0/0,0 neg]
%     Score = -321,035017 (regressionFit = 321,035015, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 2), crim(A, 2).  [covers 5,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -321,035017): medv(A) :- rm(A, 2), crim(A, 2).  [covers 5,0/44,0 pos, 0,0/0,0 neg]
%     Score = -329,589533 (regressionFit = 329,589531, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), crim(A, 4).  [covers 7,0/44,0 pos, 0,0/0,0 neg]
%     Score = -331,508753 (regressionFit = 331,508751, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), crim(A, 10).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
%     Score = -331,174515 (regressionFit = 331,174513, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), crim(A, 9).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -326,080263 (regressionFit = 326,080261, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), zn(A, 0).  [covers 31,0/44,0 pos, 0,0/0,0 neg]
%     Score = -327,844485 (regressionFit = 327,844483, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), zn(A, 22).  [covers 3,0/44,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), zn(A, 40).  [covers 2,0/44,0 pos, 0,0/0,0 neg]
%     Score = -329,672950 (regressionFit = 329,672948, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), indus(A, 8).  [covers 3,0/44,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), indus(A, 4).  [covers 2,0/44,0 pos, 0,0/0,0 neg]
%     Score = -330,599618 (regressionFit = 330,599616, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), indus(A, 5).  [covers 7,0/44,0 pos, 0,0/0,0 neg]
%     Score = -325,984485 (regressionFit = 325,984483, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 2), indus(A, 2).  [covers 3,0/44,0 pos, 0,0/0,0 neg]
%     Score = -327,962521 (regressionFit = 327,962519, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), indus(A, 10).  [covers 13,0/44,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), chas(A, 0).  [covers 43,0/44,0 pos, 0,0/0,0 neg]
%     Score = -329,672950 (regressionFit = 329,672948, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), nox(A, 8).  [covers 3,0/44,0 pos, 0,0/0,0 neg]
%     Score = -320,517980 (regressionFit = 320,517978, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), nox(A, 3).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -320,517980): medv(A) :- rm(A, 2), nox(A, 3).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
%     Score = -331,822568 (regressionFit = 331,822566, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), nox(A, 5).  [covers 7,0/44,0 pos, 0,0/0,0 neg]
%     Score = -314,266712 (regressionFit = 314,266710, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 2), nox(A, 2).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -314,266712): medv(A) :- rm(A, 2), nox(A, 2).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -326,035815 (regressionFit = 326,035813, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), nox(A, 10).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -307,147554 (regressionFit = 307,147552, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), nox(A, 9).  [covers 7,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -307,147554): medv(A) :- rm(A, 2), nox(A, 9).  [covers 7,0/44,0 pos, 0,0/0,0 neg]
%     Score = -330,523673 (regressionFit = 330,523671, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), age(A, 6).  [covers 7,0/44,0 pos, 0,0/0,0 neg]
%     Score = -330,969622 (regressionFit = 330,969620, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 2), age(A, 2).  [covers 3,0/44,0 pos, 0,0/0,0 neg]
%     Score = -323,451060 (regressionFit = 323,451058, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), age(A, 3).  [covers 5,0/44,0 pos, 0,0/0,0 neg]
%     Score = -326,444269 (regressionFit = 326,444267, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), age(A, 10).  [covers 7,0/44,0 pos, 0,0/0,0 neg]
%     Score = -328,661813 (regressionFit = 328,661811, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), age(A, 8).  [covers 3,0/44,0 pos, 0,0/0,0 neg]
%     Score = -293,943164 (regressionFit = 293,943162, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), age(A, 7).  [covers 5,0/44,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -293,943164): medv(A) :- rm(A, 2), age(A, 7).  [covers 5,0/44,0 pos, 0,0/0,0 neg]
%     Score = -328,300313 (regressionFit = 328,300311, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), dis(A, 8).  [covers 5,0/44,0 pos, 0,0/0,0 neg]
%     Score = -331,982050 (regressionFit = 331,982048, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), dis(A, 6).  [covers 3,0/44,0 pos, 0,0/0,0 neg]
%     Score = -331,695558 (regressionFit = 331,695556, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), dis(A, 5).  [covers 8,0/44,0 pos, 0,0/0,0 neg]
%     Score = -329,045146 (regressionFit = 329,045144, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), dis(A, 1).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
%     Score = -331,267015 (regressionFit = 331,267013, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), dis(A, 9).  [covers 7,0/44,0 pos, 0,0/0,0 neg]
%     Score = -332,110976 (regressionFit = 332,110974, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), rad(A, 4).  [covers 8,0/44,0 pos, 0,0/0,0 neg]
%     Score = -330,773948 (regressionFit = 330,773946, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), rad(A, 5).  [covers 9,0/44,0 pos, 0,0/0,0 neg]
%     Score = -327,628226 (regressionFit = 327,628224, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), rad(A, 7).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
%     Score = -327,962521 (regressionFit = 327,962519, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), rad(A, 24).  [covers 13,0/44,0 pos, 0,0/0,0 neg]
%     Score = -329,672950 (regressionFit = 329,672948, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), tax(A, 437).  [covers 3,0/44,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), tax(A, 296).  [covers 1,0/44,0 pos, 0,0/0,0 neg]
%     Score = -327,844485 (regressionFit = 327,844483, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), tax(A, 330).  [covers 3,0/44,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), tax(A, 254).  [covers 1,0/44,0 pos, 0,0/0,0 neg]
%     Score = -327,962521 (regressionFit = 327,962519, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), tax(A, 666).  [covers 13,0/44,0 pos, 0,0/0,0 neg]
%     Score = -329,672950 (regressionFit = 329,672948, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), ptratio(A, 7).  [covers 3,0/44,0 pos, 0,0/0,0 neg]
%     Score = -331,458777 (regressionFit = 331,458775, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), ptratio(A, 6).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
%     Score = -312,422142 (regressionFit = 312,422140, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), ptratio(A, 5).  [covers 8,0/44,0 pos, 0,0/0,0 neg]
%     Score = -331,251667 (regressionFit = 331,251665, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 2), ptratio(A, 2).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
%     Score = -327,962521 (regressionFit = 327,962519, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), ptratio(A, 10).  [covers 13,0/44,0 pos, 0,0/0,0 neg]
%     Score = -329,627611 (regressionFit = 329,627609, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), b(A, 3).  [covers 10,0/44,0 pos, 0,0/0,0 neg]
%     Score = -329,766644 (regressionFit = 329,766642, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), b(A, 8).  [covers 5,0/44,0 pos, 0,0/0,0 neg]
%     Score = -307,730137 (regressionFit = 307,730135, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), b(A, 1).  [covers 12,0/44,0 pos, 0,0/0,0 neg]
%     Score = -325,715986 (regressionFit = 325,715984, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), b(A, 7).  [covers 5,0/44,0 pos, 0,0/0,0 neg]
%     Score = -331,171065 (regressionFit = 331,171063, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), b(A, 5).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -332,124022 (regressionFit = 332,124020, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), lstat(A, 4).  [covers 4,0/44,0 pos, 0,0/0,0 neg]
%     Score = -317,328957 (regressionFit = 317,328955, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 2), lstat(A, 2).  [covers 8,0/44,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), lstat(A, 3).  [covers 1,0/44,0 pos, 0,0/0,0 neg]
%     Score = -329,246265 (regressionFit = 329,246263, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), lstat(A, 9).  [covers 6,0/44,0 pos, 0,0/0,0 neg]
%     Score = -326,073198 (regressionFit = 326,073196, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), lstat(A, 6).  [covers 3,0/44,0 pos, 0,0/0,0 neg]
%     Score = -330,682918 (regressionFit = 330,682916, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), lstat(A, 7).  [covers 3,0/44,0 pos, 0,0/0,0 neg]
%     Score = -310,730430 (regressionFit = 310,730428, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 2), lstat(A, 5).  [covers 5,0/44,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 2), age(A, 7).  [covers 5,0/44,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 2), age(A, 7).  [covers 5,0/44,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -7,556.
% Will extend: medv(A) :- rm(A, 2), age(A, 7).  [covers 5,0/44,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #7: 44 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      medv(A) :- rm(A, 2), age(A, 7).  [covers 5,0/44,0 pos, 0,0/0,0 neg]
% This clause covers 5 positive examples, of which 5 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 6).  [covers 43,0/39,0 pos, 0,0/0,0 neg]'
%     Score = -5.416,082001 (regressionFit = 5.416,082000, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 39,0/39,0 pos, 0,0/0,0 neg]

% Have these 7 positive seeds: 6 16 17 25 29 34 37
% Gleaner: New best node found (score = -5.416,082001): medv(A) :- rm(A, 6).  [covers 39,0/39,0 pos, 0,0/0,0 neg]
%     Score = -234,447189 (regressionFit = 234,447187, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), crim(A, 7).  [covers 5,0/39,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -234,447189): medv(A) :- rm(A, 6), crim(A, 7).  [covers 5,0/39,0 pos, 0,0/0,0 neg]
%     Score = -232,891041 (regressionFit = 232,891039, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), crim(A, 3).  [covers 7,0/39,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -232,891041): medv(A) :- rm(A, 6), crim(A, 3).  [covers 7,0/39,0 pos, 0,0/0,0 neg]
%     Score = -221,838400 (regressionFit = 221,838398, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), crim(A, 8).  [covers 5,0/39,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -221,838400): medv(A) :- rm(A, 6), crim(A, 8).  [covers 5,0/39,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), crim(A, 10).  [covers 2,0/39,0 pos, 0,0/0,0 neg]
%     Score = -233,514442 (regressionFit = 233,514440, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), crim(A, 4).  [covers 4,0/39,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), crim(A, 1).  [covers 2,0/39,0 pos, 0,0/0,0 neg]
%     Score = -212,519960 (regressionFit = 212,519958, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), zn(A, 0).  [covers 31,0/39,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -212,519960): medv(A) :- rm(A, 6), zn(A, 0).  [covers 31,0/39,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), zn(A, 30).  [covers 1,0/39,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), zn(A, 25).  [covers 2,0/39,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), indus(A, 8).  [covers 2,0/39,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), indus(A, 2).  [covers 1,0/39,0 pos, 0,0/0,0 neg]
%     Score = -199,544341 (regressionFit = 199,544339, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), indus(A, 5).  [covers 5,0/39,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -199,544341): medv(A) :- rm(A, 6), indus(A, 5).  [covers 5,0/39,0 pos, 0,0/0,0 neg]
%     Score = -227,334440 (regressionFit = 227,334438, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), indus(A, 10).  [covers 8,0/39,0 pos, 0,0/0,0 neg]
%     Score = -233,382574 (regressionFit = 233,382572, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), chas(A, 0).  [covers 35,0/39,0 pos, 0,0/0,0 neg]
%     Score = -233,382574 (regressionFit = 233,382572, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), chas(A, 1).  [covers 4,0/39,0 pos, 0,0/0,0 neg]
%     Score = -233,960495 (regressionFit = 233,960493, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), nox(A, 8).  [covers 3,0/39,0 pos, 0,0/0,0 neg]
%     Score = -218,581664 (regressionFit = 218,581662, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), nox(A, 3).  [covers 6,0/39,0 pos, 0,0/0,0 neg]
%     Score = -222,755699 (regressionFit = 222,755697, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), nox(A, 5).  [covers 5,0/39,0 pos, 0,0/0,0 neg]
%     Score = -229,894144 (regressionFit = 229,894142, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), nox(A, 9).  [covers 6,0/39,0 pos, 0,0/0,0 neg]
%     Score = -232,665187 (regressionFit = 232,665185, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), nox(A, 10).  [covers 5,0/39,0 pos, 0,0/0,0 neg]
%     Score = -234,203181 (regressionFit = 234,203179, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), nox(A, 2).  [covers 3,0/39,0 pos, 0,0/0,0 neg]
%     Score = -222,971760 (regressionFit = 222,971758, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 6), nox(A, 6).  [covers 3,0/39,0 pos, 0,0/0,0 neg]
%     Score = -233,253757 (regressionFit = 233,253755, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), age(A, 5).  [covers 6,0/39,0 pos, 0,0/0,0 neg]
%     Score = -233,425883 (regressionFit = 233,425881, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), age(A, 9).  [covers 3,0/39,0 pos, 0,0/0,0 neg]
%     Score = -222,429454 (regressionFit = 222,429452, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), age(A, 1).  [covers 5,0/39,0 pos, 0,0/0,0 neg]
%     Score = -234,005048 (regressionFit = 234,005046, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), age(A, 2).  [covers 8,0/39,0 pos, 0,0/0,0 neg]
%     Score = -233,898901 (regressionFit = 233,898899, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), age(A, 8).  [covers 4,0/39,0 pos, 0,0/0,0 neg]
%     Score = -229,208882 (regressionFit = 229,208880, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), age(A, 3).  [covers 4,0/39,0 pos, 0,0/0,0 neg]
%     Score = -233,615190 (regressionFit = 233,615188, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), dis(A, 9).  [covers 6,0/39,0 pos, 0,0/0,0 neg]
%     Score = -227,412694 (regressionFit = 227,412692, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 6), dis(A, 6).  [covers 5,0/39,0 pos, 0,0/0,0 neg]
%     Score = -210,751349 (regressionFit = 210,751347, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), dis(A, 3).  [covers 5,0/39,0 pos, 0,0/0,0 neg]
%     Score = -234,506415 (regressionFit = 234,506413, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), dis(A, 5).  [covers 3,0/39,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), dis(A, 2).  [covers 2,0/39,0 pos, 0,0/0,0 neg]
%     Score = -213,659085 (regressionFit = 213,659083, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), rad(A, 4).  [covers 11,0/39,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), rad(A, 8).  [covers 2,0/39,0 pos, 0,0/0,0 neg]
%     Score = -212,161977 (regressionFit = 212,161975, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 6), rad(A, 6).  [covers 3,0/39,0 pos, 0,0/0,0 neg]
%     Score = -227,334440 (regressionFit = 227,334438, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), rad(A, 24).  [covers 8,0/39,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), tax(A, 437).  [covers 2,0/39,0 pos, 0,0/0,0 neg]
%     Score = -221,692804 (regressionFit = 221,692802, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), tax(A, 307).  [covers 3,0/39,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), tax(A, 300).  [covers 1,0/39,0 pos, 0,0/0,0 neg]
%     Score = -227,334440 (regressionFit = 227,334438, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), tax(A, 666).  [covers 8,0/39,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), tax(A, 284).  [covers 1,0/39,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), tax(A, 281).  [covers 1,0/39,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), ptratio(A, 7).  [covers 2,0/39,0 pos, 0,0/0,0 neg]
%     Score = -198,118991 (regressionFit = 198,118989, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 6), ptratio(A, 6).  [covers 4,0/39,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -198,118991): medv(A) :- rm(A, 6), ptratio(A, 6).  [covers 4,0/39,0 pos, 0,0/0,0 neg]
%     Score = -227,334440 (regressionFit = 227,334438, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), ptratio(A, 10).  [covers 8,0/39,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), ptratio(A, 8).  [covers 1,0/39,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), ptratio(A, 5).  [covers 2,0/39,0 pos, 0,0/0,0 neg]
%     Score = -220,834490 (regressionFit = 220,834488, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), b(A, 1).  [covers 7,0/39,0 pos, 0,0/0,0 neg]
%     Score = -220,010929 (regressionFit = 220,010927, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), b(A, 3).  [covers 7,0/39,0 pos, 0,0/0,0 neg]
%     Score = -229,710285 (regressionFit = 229,710283, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), b(A, 7).  [covers 8,0/39,0 pos, 0,0/0,0 neg]
%     Score = -234,230642 (regressionFit = 234,230640, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 6), b(A, 6).  [covers 5,0/39,0 pos, 0,0/0,0 neg]
%     Score = -234,089692 (regressionFit = 234,089690, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), lstat(A, 5).  [covers 6,0/39,0 pos, 0,0/0,0 neg]
%     Score = -233,728126 (regressionFit = 233,728124, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), lstat(A, 4).  [covers 7,0/39,0 pos, 0,0/0,0 neg]
%     Score = -229,115199 (regressionFit = 229,115197, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), lstat(A, 10).  [covers 8,0/39,0 pos, 0,0/0,0 neg]
%     Score = -225,830941 (regressionFit = 225,830939, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 6), lstat(A, 9).  [covers 4,0/39,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 6), ptratio(A, 6).  [covers 4,0/39,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 6), ptratio(A, 6).  [covers 4,0/39,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -6,013.
% Will extend: medv(A) :- rm(A, 6), ptratio(A, 6).  [covers 4,0/39,0 pos, 0,0/0,0 neg]
Comparing variance: 6.745226199748387 to score=0.0025 #egs=4.0
Comparing variance: 4.889659551053232 to score=0.0025 #egs=35.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 4,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 35,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-4,889660)
%         ILP node to extend: medv(A) :- rm(A, 6).  [covers 39,0/39,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -4,889660) into the LAST position (#2) in the search queue.

% Time for loop #8: 37 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      medv(A) :- rm(A, 6), ptratio(A, 6).  [covers 4,0/39,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (medv(A) :- rm(A, 10))
Created a leaf under (medv(A) :- ptratio(A, 6))

%%%%%  WILL-Produced Tree #6 @ 14:10:16 10/20/22.  %%%%%


% FOR medv(A):
%   if ( rm(A, 6) )
%   then if ( rad(A, 3) )
%   | then return 6.300172186099612;  // std dev = 7,550, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ptratio(A, 6) )
%   | | then return -1.9620466674214097;  // std dev = 5,194, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 1.2223069565548326;  // std dev = 2,211, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( rm(A, 10) )
%   | then return 1.224302178675209;  // std dev = 2,296, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( tax(A, 193) )
%   | | then return 5.097088561732318;  // std dev = 6,454, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( rm(A, 2) )
%   | | | then if ( age(A, 7) )
%   | | | | then return -1.5811397651208043;  // std dev = 7,827, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else return 1.3676826669112851;  // std dev = 15,254, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else if ( zn(A, 95) )
%   | | | | then return 4.563885021351497;  // std dev = 1,769, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return -0.6801917369260074;  // std dev = 62,891, 299,000 (wgt'ed) examples reached here.  /* #pos=299 */


% Clauses:

medv(A, 6.300172186099612) :- 
     rm(A, 6), 
     rad(A, 3), 
     !. // Clause #1.

medv(A, -1.9620466674214097) :- 
     rm(A, 6), 
     ptratio(A, 6), 
     !. // Clause #2.

medv(A, 1.2223069565548326) :- 
     rm(A, 6), 
     !. // Clause #3.

medv(A, 1.224302178675209) :- 
     rm(A, 10), 
     !. // Clause #4.

medv(A, 5.097088561732318) :- 
     tax(A, 193), 
     !. // Clause #5.

medv(A, -1.5811397651208043) :- 
     rm(A, 2), 
     age(A, 7), 
     !. // Clause #6.

medv(A, 1.3676826669112851) :- 
     rm(A, 2), 
     !. // Clause #7.

medv(A, 4.563885021351497) :- 
     zn(A, 95), 
     !. // Clause #8.

medv(A, -0.6801917369260074) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_medv(a, 6.300172186099612) :-  /* #pos=4 */ 
   rm(a, 6),
   rad(a, 3),
   !. // Flattened version of clause #1.

flattened_medv(a, -1.9620466674214097) :-  /* #pos=4 */ 
   rm(a, 6),
   ptratio(a, 6),
   !. // Flattened version of clause #2.

flattened_medv(a, 1.2223069565548326) :-  /* #pos=35 */ 
   rm(a, 6),
   !. // Flattened version of clause #3.

flattened_medv(a, 1.224302178675209) :-  /* #pos=40 */ 
   rm(a, 10),
   !. // Flattened version of clause #4.

flattened_medv(a, 5.097088561732318) :-  /* #pos=6 */ 
   tax(a, 193),
   !. // Flattened version of clause #5.

flattened_medv(a, -1.5811397651208043) :-  /* #pos=5 */ 
   rm(a, 2),
   age(a, 7),
   !. // Flattened version of clause #6.

flattened_medv(a, 1.3676826669112851) :-  /* #pos=39 */ 
   rm(a, 2),
   !. // Flattened version of clause #7.

flattened_medv(a, 4.563885021351497) :-  /* #pos=4 */ 
   zn(a, 95),
   !. // Flattened version of clause #8.

flattened_medv(underscore, -0.6801917369260074) :-  /* #pos=299 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   rm(a, 6)
%   zn(a, 95)
%   ptratio(a, 6)
%   rm(a, 10)
%   tax(a, 193)
%   rad(a, 3)
%   rm(a, 2)
%   age(a, 7)

% Saving model in: data/boston_housing/train/models/bRDNs/medv.model.ckpt
% Time taken to learn 6 trees is 4,838 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:6.013317353519197
Set score:0.0025
% Kept 436 of the 436 positive examples.
% Kept 0 of the 0 negative examples.
% Dataset size: 436
Computing probabilities
prob time:90 milliseconds
No hidden examples for : medv
Time to build dataset: 94 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:10.917375866395671
Set score:0.0025

% Have these 8 positive seeds: 215 248 269 292 329 342 354 357

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -4.753,797170 (regressionFit = 4.753,797169, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.753,797170): medv(A) :- crim(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.747,552642 (regressionFit = 4.747,552641, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.747,552642): medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.752,838266 (regressionFit = 4.752,838264, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.757,247965 (regressionFit = 4.757,247964, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.758,350691 (regressionFit = 4.758,350690, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 9).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.706,580164 (regressionFit = 4.706,580163, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.706,580164): medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.755,113075 (regressionFit = 4.755,113074, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 75).  [covers 3,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.719,620125 (regressionFit = 4.719,620124, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 7).  [covers 17,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.759,523137 (regressionFit = 4.759,523136, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.690,762473 (regressionFit = 4.690,762472, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.690,762473): medv(A) :- indus(A, 5).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.759,914108 (regressionFit = 4.759,914107, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.742,107034 (regressionFit = 4.742,107033, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.757,379009 (regressionFit = 4.757,379008, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 401,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.757,452368 (regressionFit = 4.757,452367, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.753,513659 (regressionFit = 4.753,513658, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.759,213533 (regressionFit = 4.759,213532, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.737,547169 (regressionFit = 4.737,547168, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.745,238140 (regressionFit = 4.745,238139, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.753,591759 (regressionFit = 4.753,591758, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.759,975879 (regressionFit = 4.759,975878, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.757,985082 (regressionFit = 4.757,985081, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.757,699430 (regressionFit = 4.757,699429, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.759,413216 (regressionFit = 4.759,413215, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.759,975879 (regressionFit = 4.759,975878, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.727,926512 (regressionFit = 4.727,926511, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.759,956552 (regressionFit = 4.759,956551, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.731,297674 (regressionFit = 4.731,297673, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.756,686640 (regressionFit = 4.756,686639, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.744,409875 (regressionFit = 4.744,409874, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.758,336139 (regressionFit = 4.758,336138, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.758,603404 (regressionFit = 4.758,603403, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.714,649142 (regressionFit = 4.714,649141, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.733,584007 (regressionFit = 4.733,584006, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.743,540994 (regressionFit = 4.743,540993, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.759,342635 (regressionFit = 4.759,342634, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.758,678689 (regressionFit = 4.758,678688, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.757,317403 (regressionFit = 4.757,317402, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 101,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.712,760312 (regressionFit = 4.712,760311, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.756,695328 (regressionFit = 4.756,695327, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 37,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.759,914108 (regressionFit = 4.759,914107, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.706,722774 (regressionFit = 4.706,722773, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 289).  [covers 5,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.758,817884 (regressionFit = 4.758,817883, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 287).  [covers 8,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 352).  [covers 2,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.759,914108 (regressionFit = 4.759,914107, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 252).  [covers 2,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.740,405480 (regressionFit = 4.740,405478, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.759,861579 (regressionFit = 4.759,861578, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.759,842293 (regressionFit = 4.759,842292, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.759,822705 (regressionFit = 4.759,822704, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 97,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.759,399930 (regressionFit = 4.759,399929, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.749,420646 (regressionFit = 4.749,420645, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 102,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.759,636454 (regressionFit = 4.759,636453, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.759,828781 (regressionFit = 4.759,828780, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.756,695800 (regressionFit = 4.756,695799, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 27,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.742,668521 (regressionFit = 4.742,668520, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.728,629962 (regressionFit = 4.728,629961, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.757,643795 (regressionFit = 4.757,643794, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.755,192518 (regressionFit = 4.755,192517, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.711,703355 (regressionFit = 4.711,703353, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.759,891250 (regressionFit = 4.759,891249, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.759,413244 (regressionFit = 4.759,413243, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.759,927729 (regressionFit = 4.759,927728, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 38,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- indus(A, 5).  [covers 48,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- indus(A, 5).  [covers 48,0/436,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: medv(A) :- indus(A, 5).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
Comparing variance: 7.122398779953252 to score=0.0025 #egs=48.0
Comparing variance: 11.208472501489775 to score=0.0025 #egs=388.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 48,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-7,122399)
%         ILP node to extend: medv(A) :- indus(A, 5).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -7,122399) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 388,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-11,208473)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -11,208473) into position #1 in the search queue (new size=2).

% Time for loop #1: 139 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      medv(A) :- indus(A, 5).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
% This clause covers 48 positive examples, of which 48 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 7 positive seeds: 43 47 85 113 243 345 357

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 388,0/388,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 388,0/388,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -4.324,511889 (regressionFit = 4.324,511887, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 45,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.324,511889): medv(A) :- crim(A, 7).  [covers 45,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.321,413881 (regressionFit = 4.321,413880, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 49,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.321,413881): medv(A) :- crim(A, 5).  [covers 49,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.340,411364 (regressionFit = 4.340,411363, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 28,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.341,842730 (regressionFit = 4.341,842729, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.341,793806 (regressionFit = 4.341,793805, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 45,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.340,048435 (regressionFit = 4.340,048434, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 294,0/388,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 82.5).  [covers 2,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.344,309349 (regressionFit = 4.344,309348, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 40).  [covers 7,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.345,036114 (regressionFit = 4.345,036113, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 75).  [covers 3,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.340,325671 (regressionFit = 4.340,325670, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 21,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.338,575625 (regressionFit = 4.338,575624, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 49,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.345,987025 (regressionFit = 4.345,987024, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 48,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.345,755722 (regressionFit = 4.345,755721, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 90,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.348,323251 (regressionFit = 4.348,323250, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 353,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.348,887309 (regressionFit = 4.348,887308, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 36,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.343,938106 (regressionFit = 4.343,938105, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 36,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.348,886475 (regressionFit = 4.348,886474, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 38,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.338,538604 (regressionFit = 4.338,538603, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 29,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.318,200328 (regressionFit = 4.318,200327, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 42,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.318,200328): medv(A) :- nox(A, 9).  [covers 42,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.347,751216 (regressionFit = 4.347,751215, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 37,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.345,451372 (regressionFit = 4.345,451371, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 43,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.348,874325 (regressionFit = 4.348,874324, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 34,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.320,303371 (regressionFit = 4.320,303370, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 47,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.348,757028 (regressionFit = 4.348,757027, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.348,242717 (regressionFit = 4.348,242716, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.325,362793 (regressionFit = 4.325,362792, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.348,262462 (regressionFit = 4.348,262461, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 48,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.320,829146 (regressionFit = 4.320,829145, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 32,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.333,274481 (regressionFit = 4.333,274480, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 38,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.330,411470 (regressionFit = 4.330,411469, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.346,716499 (regressionFit = 4.346,716498, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 31,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.344,210028 (regressionFit = 4.344,210027, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 43,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.348,813630 (regressionFit = 4.348,813629, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 51,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.346,847227 (regressionFit = 4.346,847226, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.344,188089 (regressionFit = 4.344,188088, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 39,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.339,618847 (regressionFit = 4.339,618846, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 25,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.344,650372 (regressionFit = 4.344,650371, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 90,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.317,188298 (regressionFit = 4.317,188297, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 105,0/388,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.317,188298): medv(A) :- rad(A, 5).  [covers 105,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.336,961103 (regressionFit = 4.336,961102, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 23,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.336,367903 (regressionFit = 4.336,367902, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 15,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.345,755722 (regressionFit = 4.345,755721, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 90,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.348,803528 (regressionFit = 4.348,803527, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 31,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.341,570486 (regressionFit = 4.341,570485, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 437).  [covers 14,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.331,772025 (regressionFit = 4.331,772024, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 296).  [covers 8,0/388,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 348).  [covers 2,0/388,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 335).  [covers 2,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.345,755722 (regressionFit = 4.345,755721, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 90,0/388,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 469).  [covers 1,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.346,657452 (regressionFit = 4.346,657451, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 7).  [covers 16,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.347,469711 (regressionFit = 4.347,469710, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 35,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.344,135678 (regressionFit = 4.344,135677, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 50,0/388,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 8).  [covers 2,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.345,755722 (regressionFit = 4.345,755721, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 90,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.344,663508 (regressionFit = 4.344,663507, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 41,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.342,236512 (regressionFit = 4.342,236511, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 86,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.339,546391 (regressionFit = 4.339,546390, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 21,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.346,158401 (regressionFit = 4.346,158400, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.348,584928 (regressionFit = 4.348,584927, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 40,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.347,734543 (regressionFit = 4.347,734542, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 36,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.348,833563 (regressionFit = 4.348,833562, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 44,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.321,143198 (regressionFit = 4.321,143197, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 43,0/388,0 pos, 0,0/0,0 neg]
%     Score = -4.345,733392 (regressionFit = 4.345,733391, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 46,0/388,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rad(A, 5).  [covers 105,0/388,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rad(A, 5).  [covers 105,0/388,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -11,208.
% Will extend: medv(A) :- rad(A, 5).  [covers 105,0/388,0 pos, 0,0/0,0 neg]
Comparing variance: 11.918195853717064 to score=0.0025 #egs=105.0
Comparing variance: 10.83313686182391 to score=0.0025 #egs=283.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 105,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-11,918196)
%         ILP node to extend: medv(A) :- rad(A, 5).  [covers 105,0/388,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -11,918196) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 283,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-10,833137)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -10,833137) into position #2 in the search queue (new size=3).

% Time for loop #2: 125 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      medv(A) :- rad(A, 5).  [covers 105,0/388,0 pos, 0,0/0,0 neg]
% This clause covers 105 positive examples, of which 105 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rad(A, 5).  [covers 105,0/105,0 pos, 0,0/0,0 neg]'
%     Score = -4.317,188298 (regressionFit = 4.317,188297, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 105,0/105,0 pos, 0,0/0,0 neg]

% Have these 4 positive seeds: 28 32 64 101
% Gleaner: New best node found (score = -4.317,188298): medv(A) :- rad(A, 5).  [covers 105,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.213,297116 (regressionFit = 1.213,297114, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), crim(A, 8).  [covers 18,0/105,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.213,297116): medv(A) :- rad(A, 5), crim(A, 8).  [covers 18,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.217,022513 (regressionFit = 1.217,022511, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rad(A, 5), crim(A, 5).  [covers 18,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.231,313024 (regressionFit = 1.231,313022, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), crim(A, 7).  [covers 10,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.249,667495 (regressionFit = 1.249,667493, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), crim(A, 6).  [covers 7,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.241,904954 (regressionFit = 1.241,904952, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), zn(A, 0).  [covers 69,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.251,312477 (regressionFit = 1.251,312475, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), zn(A, 20).  [covers 16,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.251,322566 (regressionFit = 1.251,322564, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), indus(A, 9).  [covers 29,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.246,891253 (regressionFit = 1.246,891251, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), indus(A, 4).  [covers 31,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.245,052153 (regressionFit = 1.245,052151, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), indus(A, 7).  [covers 10,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.238,660937 (regressionFit = 1.238,660935, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), chas(A, 1).  [covers 11,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.238,660937 (regressionFit = 1.238,660935, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), chas(A, 0).  [covers 94,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.235,053950 (regressionFit = 1.235,053948, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), nox(A, 9).  [covers 16,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.224,606916 (regressionFit = 1.224,606914, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), nox(A, 7).  [covers 15,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.225,007727 (regressionFit = 1.225,007725, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), nox(A, 8).  [covers 10,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.251,236175 (regressionFit = 1.251,236173, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rad(A, 5), nox(A, 5).  [covers 12,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.249,348394 (regressionFit = 1.249,348392, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), rm(A, 6).  [covers 11,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.250,569102 (regressionFit = 1.250,569099, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), rm(A, 10).  [covers 11,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.244,991218 (regressionFit = 1.244,991216, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), rm(A, 3).  [covers 17,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.240,013580 (regressionFit = 1.240,013577, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), age(A, 2).  [covers 11,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.251,028639 (regressionFit = 1.251,028637, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), age(A, 7).  [covers 13,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.247,258469 (regressionFit = 1.247,258467, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), age(A, 1).  [covers 9,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.237,906055 (regressionFit = 1.237,906053, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 9).  [covers 9,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.244,805230 (regressionFit = 1.244,805228, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 8).  [covers 14,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.246,358883 (regressionFit = 1.246,358881, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 2).  [covers 14,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.251,322566 (regressionFit = 1.251,322564, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), tax(A, 403).  [covers 29,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.241,181935 (regressionFit = 1.241,181933, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), tax(A, 264).  [covers 12,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.251,236175 (regressionFit = 1.251,236173, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), tax(A, 398).  [covers 12,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.245,852256 (regressionFit = 1.245,852254, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), ptratio(A, 9).  [covers 41,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.250,270852 (regressionFit = 1.250,270850, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), ptratio(A, 3).  [covers 6,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.238,244777 (regressionFit = 1.238,244775, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), b(A, 7).  [covers 8,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.241,697137 (regressionFit = 1.241,697134, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), b(A, 9).  [covers 12,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.249,318585 (regressionFit = 1.249,318583, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), b(A, 2).  [covers 15,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.242,055611 (regressionFit = 1.242,055609, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rad(A, 5), b(A, 5).  [covers 15,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.250,078109 (regressionFit = 1.250,078107, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), lstat(A, 10).  [covers 10,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.210,049576 (regressionFit = 1.210,049574, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), lstat(A, 1).  [covers 15,0/105,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.210,049576): medv(A) :- rad(A, 5), lstat(A, 1).  [covers 15,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.249,369373 (regressionFit = 1.249,369371, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), lstat(A, 8).  [covers 14,0/105,0 pos, 0,0/0,0 neg]
%     Score = -1.241,903135 (regressionFit = 1.241,903133, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), lstat(A, 4).  [covers 15,0/105,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rad(A, 5), lstat(A, 1).  [covers 15,0/105,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rad(A, 5), lstat(A, 1).  [covers 15,0/105,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -11,918.
% Will extend: medv(A) :- rad(A, 5), lstat(A, 1).  [covers 15,0/105,0 pos, 0,0/0,0 neg]
Comparing variance: 7.086223612975446 to score=0.0025 #egs=15.0
Comparing variance: 12.263957997971504 to score=0.0025 #egs=90.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 15,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-7,086224)
%         ILP node to extend: medv(A) :- rad(A, 5), lstat(A, 1).  [covers 15,0/105,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -7,086224) into the LAST position (#3) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 90,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-12,263958)
%         ILP node to extend: medv(A) :- rad(A, 5).  [covers 105,0/105,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -12,263958) into position #1 in the search queue (new size=4).

% Time for loop #3: 53 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      medv(A) :- rad(A, 5), lstat(A, 1).  [covers 15,0/105,0 pos, 0,0/0,0 neg]
% This clause covers 15 positive examples, of which 15 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rad(A, 5).  [covers 105,0/90,0 pos, 0,0/0,0 neg]'
%     Score = -4.317,188298 (regressionFit = 4.317,188297, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 90,0/90,0 pos, 0,0/0,0 neg]

% Have these 6 positive seeds: 37 44 70 78 86 88
% Gleaner: New best node found (score = -4.317,188298): medv(A) :- rad(A, 5).  [covers 90,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.078,076737 (regressionFit = 1.078,076735, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), crim(A, 8).  [covers 18,0/90,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.078,076737): medv(A) :- rad(A, 5), crim(A, 8).  [covers 18,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.101,844679 (regressionFit = 1.101,844677, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), crim(A, 2).  [covers 15,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.080,393078 (regressionFit = 1.080,393076, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), crim(A, 7).  [covers 7,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.103,753570 (regressionFit = 1.103,753568, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), crim(A, 6).  [covers 4,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.084,666417 (regressionFit = 1.084,666415, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), crim(A, 3).  [covers 14,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.088,332306 (regressionFit = 1.088,332304, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), zn(A, 0).  [covers 63,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.086,930741 (regressionFit = 1.086,930739, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), zn(A, 12.5).  [covers 7,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.103,718216 (regressionFit = 1.103,718214, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), indus(A, 9).  [covers 28,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.100,436822 (regressionFit = 1.100,436820, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), indus(A, 4).  [covers 23,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.103,725762 (regressionFit = 1.103,725760, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), indus(A, 3).  [covers 23,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.080,335386 (regressionFit = 1.080,335384, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), indus(A, 2).  [covers 4,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.092,172980 (regressionFit = 1.092,172978, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), indus(A, 7).  [covers 10,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.095,027809 (regressionFit = 1.095,027807, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), chas(A, 0).  [covers 80,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.078,755354 (regressionFit = 1.078,755351, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), nox(A, 7).  [covers 14,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.100,978142 (regressionFit = 1.100,978139, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), nox(A, 3).  [covers 23,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.077,261355 (regressionFit = 1.077,261353, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), nox(A, 4).  [covers 11,0/90,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.077,261355): medv(A) :- rad(A, 5), nox(A, 4).  [covers 11,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.097,761553 (regressionFit = 1.097,761551, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rad(A, 5), nox(A, 5).  [covers 9,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.093,626077 (regressionFit = 1.093,626075, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), rm(A, 3).  [covers 14,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.097,774124 (regressionFit = 1.097,774122, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), rm(A, 2).  [covers 7,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.102,649306 (regressionFit = 1.102,649304, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rad(A, 5), rm(A, 5).  [covers 7,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.103,646555 (regressionFit = 1.103,646553, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), rm(A, 8).  [covers 13,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.103,721047 (regressionFit = 1.103,721045, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), rm(A, 10).  [covers 7,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.098,199431 (regressionFit = 1.098,199429, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), rm(A, 6).  [covers 11,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.092,918425 (regressionFit = 1.092,918423, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rad(A, 5), age(A, 5).  [covers 13,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.085,124920 (regressionFit = 1.085,124918, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), age(A, 2).  [covers 11,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.102,726920 (regressionFit = 1.102,726917, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), age(A, 3).  [covers 11,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.102,209889 (regressionFit = 1.102,209887, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), age(A, 1).  [covers 9,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.090,455839 (regressionFit = 1.090,455837, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 8).  [covers 14,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.094,454461 (regressionFit = 1.094,454459, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 6).  [covers 11,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.100,115863 (regressionFit = 1.100,115861, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 2).  [covers 10,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.102,342610 (regressionFit = 1.102,342608, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 1).  [covers 8,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.032,700154 (regressionFit = 1.032,700152, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3).  [covers 8,0/90,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1.032,700154): medv(A) :- rad(A, 5), dis(A, 3).  [covers 8,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.103,718216 (regressionFit = 1.103,718214, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), tax(A, 403).  [covers 28,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.096,553241 (regressionFit = 1.096,553239, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), tax(A, 296).  [covers 5,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.103,080062 (regressionFit = 1.103,080060, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), tax(A, 287).  [covers 5,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.080,335386 (regressionFit = 1.080,335384, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), tax(A, 279).  [covers 4,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.097,761553 (regressionFit = 1.097,761551, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), tax(A, 398).  [covers 9,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.086,930741 (regressionFit = 1.086,930739, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), tax(A, 311).  [covers 7,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.100,480084 (regressionFit = 1.100,480082, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), ptratio(A, 9).  [covers 38,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.085,901455 (regressionFit = 1.085,901453, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), ptratio(A, 6).  [covers 6,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.088,135744 (regressionFit = 1.088,135742, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rad(A, 5), ptratio(A, 5).  [covers 9,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.103,576994 (regressionFit = 1.103,576992, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), ptratio(A, 3).  [covers 6,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.102,649897 (regressionFit = 1.102,649895, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), ptratio(A, 1).  [covers 18,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.101,905454 (regressionFit = 1.101,905452, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), b(A, 8).  [covers 6,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.085,124688 (regressionFit = 1.085,124686, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), b(A, 3).  [covers 9,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.094,670277 (regressionFit = 1.094,670275, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), b(A, 1).  [covers 14,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.098,977390 (regressionFit = 1.098,977388, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rad(A, 5), b(A, 5).  [covers 14,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.095,697560 (regressionFit = 1.095,697558, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), lstat(A, 3).  [covers 14,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.080,820000 (regressionFit = 1.080,819998, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), lstat(A, 2).  [covers 7,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.095,238008 (regressionFit = 1.095,238006, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), lstat(A, 9).  [covers 12,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.099,594332 (regressionFit = 1.099,594330, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), lstat(A, 4).  [covers 15,0/90,0 pos, 0,0/0,0 neg]
%     Score = -1.103,431969 (regressionFit = 1.103,431967, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rad(A, 5), lstat(A, 5).  [covers 4,0/90,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rad(A, 5), dis(A, 3).  [covers 8,0/90,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rad(A, 5), dis(A, 3).  [covers 8,0/90,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -12,264.
% Will extend: medv(A) :- rad(A, 5), dis(A, 3).  [covers 8,0/90,0 pos, 0,0/0,0 neg]
Comparing variance: 11.843622858510212 to score=0.0025 #egs=8.0
Comparing variance: 11.438428887037807 to score=0.0025 #egs=82.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 8,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-11,843623)
%         ILP node to extend: medv(A) :- rad(A, 5), dis(A, 3).  [covers 8,0/90,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -11,843623) into position #1 in the search queue (new size=4).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 82,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-11,438429)
%         ILP node to extend: medv(A) :- rad(A, 5).  [covers 90,0/90,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -11,438429) into position #2 in the search queue (new size=5).

% Time for loop #4: 64 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      medv(A) :- rad(A, 5), dis(A, 3).  [covers 8,0/90,0 pos, 0,0/0,0 neg]
% This clause covers 8 positive examples, of which 8 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rad(A, 5), dis(A, 3).  [covers 8,0/8,0 pos, 0,0/0,0 neg]'
%     Score = -1.032,700154 (regressionFit = 1.032,700152, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3).  [covers 8,0/8,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 0 1 2 3 4 5 6 7
% Gleaner: New best node found (score = -1.032,700154): medv(A) :- rad(A, 5), dis(A, 3).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -94,469310 (regressionFit = 94,469307, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), crim(A, 4).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -94,469310): medv(A) :- rad(A, 5), dis(A, 3), crim(A, 4).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), crim(A, 3).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), crim(A, 2).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), crim(A, 1).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -85,642092 (regressionFit = 85,642089, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), zn(A, 12.5).  [covers 5,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -85,642092): medv(A) :- rad(A, 5), dis(A, 3), zn(A, 12.5).  [covers 5,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), zn(A, 45).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), zn(A, 55).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -85,642092 (regressionFit = 85,642089, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), indus(A, 3).  [covers 5,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -85,642092): medv(A) :- rad(A, 5), dis(A, 3), indus(A, 3).  [covers 5,0/8,0 pos, 0,0/0,0 neg]
%     Score = -85,642092 (regressionFit = 85,642089, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), indus(A, 4).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), chas(A, 0).  [covers 8,0/8,0 pos, 0,0/0,0 neg]
%     Score = -85,642092 (regressionFit = 85,642089, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), nox(A, 3).  [covers 5,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), nox(A, 5).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), nox(A, 4).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), rm(A, 5).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), rm(A, 2).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), rm(A, 3).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), rm(A, 1).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), rm(A, 4).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), rm(A, 6).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), rm(A, 7).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), age(A, 2).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), age(A, 7).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), age(A, 10).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), age(A, 1).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), age(A, 8).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), age(A, 5).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), age(A, 6).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -85,642092 (regressionFit = 85,642089, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), tax(A, 311).  [covers 5,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), tax(A, 398).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), tax(A, 370).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), ptratio(A, 1).  [covers 6,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), ptratio(A, 2).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -78,263816 (regressionFit = 78,263813, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), b(A, 5).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -78,263816): medv(A) :- rad(A, 5), dis(A, 3), b(A, 5).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), b(A, 2).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -89,165537 (regressionFit = 89,165534, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), b(A, 1).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), b(A, 6).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), lstat(A, 7).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), lstat(A, 5).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), lstat(A, 4).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), lstat(A, 3).  [covers 2,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), lstat(A, 9).  [covers 1,0/8,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 3), lstat(A, 6).  [covers 1,0/8,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rad(A, 5), dis(A, 3), b(A, 5).  [covers 3,0/8,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rad(A, 5), dis(A, 3), b(A, 5).  [covers 3,0/8,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -11,844.
% Will extend: medv(A) :- rad(A, 5), dis(A, 3), b(A, 5).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #5: 18 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #5, the best clause found is:
%      medv(A) :- rad(A, 5), dis(A, 3), b(A, 5).  [covers 3,0/8,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rad(A, 5).  [covers 90,0/82,0 pos, 0,0/0,0 neg]'
%     Score = -4.317,188298 (regressionFit = 4.317,188297, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 82,0/82,0 pos, 0,0/0,0 neg]

% Have these 6 positive seeds: 6 24 29 42 57 75
% Gleaner: New best node found (score = -4.317,188298): medv(A) :- rad(A, 5).  [covers 82,0/82,0 pos, 0,0/0,0 neg]
%     Score = -937,658357 (regressionFit = 937,658355, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), crim(A, 4).  [covers 7,0/82,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -937,658357): medv(A) :- rad(A, 5), crim(A, 4).  [covers 7,0/82,0 pos, 0,0/0,0 neg]
%     Score = -918,046843 (regressionFit = 918,046841, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rad(A, 5), crim(A, 5).  [covers 16,0/82,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -918,046843): medv(A) :- rad(A, 5), crim(A, 5).  [covers 16,0/82,0 pos, 0,0/0,0 neg]
%     Score = -937,888453 (regressionFit = 937,888451, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), crim(A, 2).  [covers 14,0/82,0 pos, 0,0/0,0 neg]
%     Score = -937,939601 (regressionFit = 937,939599, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), zn(A, 0).  [covers 63,0/82,0 pos, 0,0/0,0 neg]
%     Score = -934,361336 (regressionFit = 934,361334, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), zn(A, 20).  [covers 13,0/82,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), zn(A, 12.5).  [covers 2,0/82,0 pos, 0,0/0,0 neg]
%     Score = -936,589592 (regressionFit = 936,589590, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), indus(A, 3).  [covers 18,0/82,0 pos, 0,0/0,0 neg]
%     Score = -935,358081 (regressionFit = 935,358079, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), indus(A, 9).  [covers 28,0/82,0 pos, 0,0/0,0 neg]
%     Score = -937,939328 (regressionFit = 937,939326, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), indus(A, 4).  [covers 20,0/82,0 pos, 0,0/0,0 neg]
%     Score = -933,806032 (regressionFit = 933,806030, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), chas(A, 0).  [covers 72,0/82,0 pos, 0,0/0,0 neg]
%     Score = -933,806032 (regressionFit = 933,806030, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), chas(A, 1).  [covers 10,0/82,0 pos, 0,0/0,0 neg]
%     Score = -927,713697 (regressionFit = 927,713694, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), nox(A, 3).  [covers 18,0/82,0 pos, 0,0/0,0 neg]
%     Score = -919,928380 (regressionFit = 919,928378, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), nox(A, 9).  [covers 16,0/82,0 pos, 0,0/0,0 neg]
%     Score = -922,699857 (regressionFit = 922,699855, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), nox(A, 7).  [covers 14,0/82,0 pos, 0,0/0,0 neg]
%     Score = -897,452179 (regressionFit = 897,452177, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), nox(A, 8).  [covers 8,0/82,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -897,452179): medv(A) :- rad(A, 5), nox(A, 8).  [covers 8,0/82,0 pos, 0,0/0,0 neg]
%     Score = -933,240476 (regressionFit = 933,240474, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), rm(A, 7).  [covers 5,0/82,0 pos, 0,0/0,0 neg]
%     Score = -937,575035 (regressionFit = 937,575033, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), rm(A, 6).  [covers 10,0/82,0 pos, 0,0/0,0 neg]
%     Score = -933,931445 (regressionFit = 933,931443, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), rm(A, 3).  [covers 13,0/82,0 pos, 0,0/0,0 neg]
%     Score = -937,378206 (regressionFit = 937,378204, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), rm(A, 8).  [covers 13,0/82,0 pos, 0,0/0,0 neg]
%     Score = -898,145587 (regressionFit = 898,145585, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), rm(A, 9).  [covers 10,0/82,0 pos, 0,0/0,0 neg]
%     Score = -935,944123 (regressionFit = 935,944121, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rad(A, 5), rm(A, 5).  [covers 5,0/82,0 pos, 0,0/0,0 neg]
%     Score = -936,503787 (regressionFit = 936,503785, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), age(A, 7).  [covers 11,0/82,0 pos, 0,0/0,0 neg]
%     Score = -909,600623 (regressionFit = 909,600621, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rad(A, 5), age(A, 5).  [covers 12,0/82,0 pos, 0,0/0,0 neg]
%     Score = -930,210558 (regressionFit = 930,210556, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), age(A, 9).  [covers 9,0/82,0 pos, 0,0/0,0 neg]
%     Score = -934,537876 (regressionFit = 934,537874, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), age(A, 4).  [covers 8,0/82,0 pos, 0,0/0,0 neg]
%     Score = -937,719295 (regressionFit = 937,719293, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), age(A, 1).  [covers 8,0/82,0 pos, 0,0/0,0 neg]
%     Score = -931,500333 (regressionFit = 931,500331, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 8).  [covers 14,0/82,0 pos, 0,0/0,0 neg]
%     Score = -892,885675 (regressionFit = 892,885673, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 9).  [covers 7,0/82,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -892,885675): medv(A) :- rad(A, 5), dis(A, 9).  [covers 7,0/82,0 pos, 0,0/0,0 neg]
%     Score = -933,618150 (regressionFit = 933,618148, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 6).  [covers 11,0/82,0 pos, 0,0/0,0 neg]
%     Score = -936,984674 (regressionFit = 936,984672, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), dis(A, 2).  [covers 10,0/82,0 pos, 0,0/0,0 neg]
%     Score = -930,483042 (regressionFit = 930,483040, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), tax(A, 384).  [covers 11,0/82,0 pos, 0,0/0,0 neg]
%     Score = -935,358081 (regressionFit = 935,358079, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), tax(A, 403).  [covers 28,0/82,0 pos, 0,0/0,0 neg]
%     Score = -933,743944 (regressionFit = 933,743942, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), tax(A, 296).  [covers 5,0/82,0 pos, 0,0/0,0 neg]
%     Score = -921,241750 (regressionFit = 921,241748, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), tax(A, 264).  [covers 10,0/82,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), tax(A, 311).  [covers 2,0/82,0 pos, 0,0/0,0 neg]
%     Score = -930,483042 (regressionFit = 930,483040, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), ptratio(A, 4).  [covers 11,0/82,0 pos, 0,0/0,0 neg]
%     Score = -920,195444 (regressionFit = 920,195442, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), ptratio(A, 9).  [covers 38,0/82,0 pos, 0,0/0,0 neg]
%     Score = -925,460978 (regressionFit = 925,460976, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), ptratio(A, 6).  [covers 6,0/82,0 pos, 0,0/0,0 neg]
%     Score = -903,914279 (regressionFit = 903,914277, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), ptratio(A, 1).  [covers 12,0/82,0 pos, 0,0/0,0 neg]
%     Score = -934,510160 (regressionFit = 934,510158, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), b(A, 4).  [covers 4,0/82,0 pos, 0,0/0,0 neg]
%     Score = -913,198975 (regressionFit = 913,198973, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), b(A, 9).  [covers 11,0/82,0 pos, 0,0/0,0 neg]
%     Score = -933,660729 (regressionFit = 933,660727, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), b(A, 8).  [covers 6,0/82,0 pos, 0,0/0,0 neg]
%     Score = -926,143124 (regressionFit = 926,143122, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), b(A, 2).  [covers 14,0/82,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rad(A, 5), lstat(A, 5).  [covers 2,0/82,0 pos, 0,0/0,0 neg]
%     Score = -936,741520 (regressionFit = 936,741518, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), lstat(A, 10).  [covers 10,0/82,0 pos, 0,0/0,0 neg]
%     Score = -917,053732 (regressionFit = 917,053730, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), lstat(A, 3).  [covers 12,0/82,0 pos, 0,0/0,0 neg]
%     Score = -936,066000 (regressionFit = 936,065998, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), lstat(A, 8).  [covers 14,0/82,0 pos, 0,0/0,0 neg]
%     Score = -933,063454 (regressionFit = 933,063452, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rad(A, 5), lstat(A, 4).  [covers 14,0/82,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rad(A, 5), dis(A, 9).  [covers 7,0/82,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rad(A, 5), dis(A, 9).  [covers 7,0/82,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -11,438.
% Will extend: medv(A) :- rad(A, 5), dis(A, 9).  [covers 7,0/82,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #6: 79 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      medv(A) :- rad(A, 5), dis(A, 9).  [covers 7,0/82,0 pos, 0,0/0,0 neg]
% This clause covers 7 positive examples, of which 7 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 3 positive seeds: 24 53 94

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 283,0/283,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 283,0/283,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -3.057,164179 (regressionFit = 3.057,164178, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 35,0/283,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.057,164179): medv(A) :- crim(A, 7).  [covers 35,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.054,670265 (regressionFit = 3.054,670264, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 34,0/283,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.054,670265): medv(A) :- crim(A, 1).  [covers 34,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.059,591127 (regressionFit = 3.059,591126, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 225,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.065,773052 (regressionFit = 3.065,773051, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 95).  [covers 4,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.065,264302 (regressionFit = 3.065,264301, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 80).  [covers 11,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.051,437892 (regressionFit = 3.051,437891, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 21,0/283,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.051,437892): medv(A) :- indus(A, 8).  [covers 21,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.064,906735 (regressionFit = 3.064,906734, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 43,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.065,770934 (regressionFit = 3.065,770933, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 18,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.062,900132 (regressionFit = 3.062,900131, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 259,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.055,911499 (regressionFit = 3.055,911498, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 26,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.065,358284 (regressionFit = 3.065,358283, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 33,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.029,295675 (regressionFit = 3.029,295674, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 36,0/283,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.029,295675): medv(A) :- rm(A, 7).  [covers 36,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.063,693339 (regressionFit = 3.063,693338, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 28,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.065,187004 (regressionFit = 3.065,187003, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 28,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.065,272909 (regressionFit = 3.065,272908, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 29,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.038,231251 (regressionFit = 3.038,231250, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 32,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.064,900012 (regressionFit = 3.064,900011, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 17,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.056,233864 (regressionFit = 3.056,233863, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 20,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.048,267896 (regressionFit = 3.048,267895, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 90,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.064,031286 (regressionFit = 3.064,031285, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 31,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.057,528999 (regressionFit = 3.057,528998, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 15,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.054,271234 (regressionFit = 3.054,271233, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 437).  [covers 14,0/283,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 402).  [covers 2,0/283,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 315).  [covers 2,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.060,839045 (regressionFit = 3.060,839044, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 7).  [covers 16,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.062,683481 (regressionFit = 3.062,683480, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 27,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.063,401965 (regressionFit = 3.063,401964, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 20,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.062,832907 (regressionFit = 3.062,832906, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 27,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.064,817771 (regressionFit = 3.064,817770, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 27,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.065,566295 (regressionFit = 3.065,566294, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 31,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.065,513448 (regressionFit = 3.065,513447, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 26,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.053,744726 (regressionFit = 3.053,744725, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 32,0/283,0 pos, 0,0/0,0 neg]
%     Score = -3.064,043650 (regressionFit = 3.064,043649, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 28,0/283,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 7).  [covers 36,0/283,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 7).  [covers 36,0/283,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -10,833.
% Will extend: medv(A) :- rm(A, 7).  [covers 36,0/283,0 pos, 0,0/0,0 neg]
Comparing variance: 6.648712078737454 to score=0.0025 #egs=36.0
Comparing variance: 11.295311900187817 to score=0.0025 #egs=247.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 36,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-6,648712)
%         ILP node to extend: medv(A) :- rm(A, 7).  [covers 36,0/283,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -6,648712) into the LAST position (#3) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 247,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-11,295312)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -11,295312) into position #1 in the search queue (new size=4).

% Time for loop #7: 61 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      medv(A) :- rm(A, 7).  [covers 36,0/283,0 pos, 0,0/0,0 neg]
% This clause covers 36 positive examples, of which 36 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 2 11 55 108 123 165 167 168

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 247,0/247,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 247,0/247,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -2.788,070946 (regressionFit = 2.788,070945, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 21,0/247,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.788,070946): medv(A) :- crim(A, 3).  [covers 21,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.765,272673 (regressionFit = 2.765,272672, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 24,0/247,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.765,272673): medv(A) :- crim(A, 2).  [covers 24,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.787,558171 (regressionFit = 2.787,558170, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 22,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.783,588007 (regressionFit = 2.783,588006, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 19,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.788,035414 (regressionFit = 2.788,035413, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 9).  [covers 28,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.789,878513 (regressionFit = 2.789,878512, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 39,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.786,793016 (regressionFit = 2.786,793015, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 192,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.789,564736 (regressionFit = 2.789,564735, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 33).  [covers 4,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.789,762898 (regressionFit = 2.789,762897, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 31,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.786,393508 (regressionFit = 2.786,393507, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 16,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.788,843179 (regressionFit = 2.788,843178, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 14,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.789,931237 (regressionFit = 2.789,931236, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 42,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.789,939707 (regressionFit = 2.789,939706, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 17,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.789,212190 (regressionFit = 2.789,212189, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 79,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.785,963734 (regressionFit = 2.785,963733, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 225,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.778,278371 (regressionFit = 2.778,278370, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 33,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.789,097442 (regressionFit = 2.789,097441, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 13,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.789,255335 (regressionFit = 2.789,255334, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 31,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.789,398185 (regressionFit = 2.789,398184, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 31,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.763,799314 (regressionFit = 2.763,799313, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 10).  [covers 39,0/247,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.763,799314): medv(A) :- nox(A, 10).  [covers 39,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.789,942020 (regressionFit = 2.789,942019, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 28,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.788,302483 (regressionFit = 2.788,302482, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 24,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.784,392175 (regressionFit = 2.784,392174, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 33,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.769,095729 (regressionFit = 2.769,095728, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 30,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.783,490498 (regressionFit = 2.783,490497, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 22,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.762,351367 (regressionFit = 2.762,351366, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 24,0/247,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.762,351367): medv(A) :- age(A, 5).  [covers 24,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.787,583721 (regressionFit = 2.787,583720, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 17,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.752,377066 (regressionFit = 2.752,377065, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 32,0/247,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.752,377066): medv(A) :- age(A, 10).  [covers 32,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.785,097201 (regressionFit = 2.785,097200, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 34,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.789,447142 (regressionFit = 2.789,447141, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 15,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.787,775740 (regressionFit = 2.787,775739, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 25,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.788,115897 (regressionFit = 2.788,115896, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 33,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.786,310510 (regressionFit = 2.786,310509, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 30,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.768,418751 (regressionFit = 2.768,418750, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 20,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.773,986264 (regressionFit = 2.773,986263, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 35,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.784,342986 (regressionFit = 2.784,342985, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 8,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.787,309271 (regressionFit = 2.787,309270, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 22,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.782,093212 (regressionFit = 2.782,093211, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 72,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.786,991634 (regressionFit = 2.786,991633, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 7,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.789,212190 (regressionFit = 2.789,212189, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 79,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.784,342986 (regressionFit = 2.784,342985, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 432).  [covers 8,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.781,749932 (regressionFit = 2.781,749931, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 188).  [covers 6,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.787,734387 (regressionFit = 2.787,734386, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 32,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.789,775902 (regressionFit = 2.789,775901, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 222).  [covers 7,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.786,886334 (regressionFit = 2.786,886333, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 430).  [covers 3,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.789,212190 (regressionFit = 2.789,212189, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 79,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.785,255612 (regressionFit = 2.785,255611, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 40,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.775,775841 (regressionFit = 2.775,775840, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 12,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.788,843179 (regressionFit = 2.788,843178, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 14,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.788,819705 (regressionFit = 2.788,819704, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 35,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.788,861634 (regressionFit = 2.788,861633, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 26,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.789,212190 (regressionFit = 2.789,212189, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 79,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.789,938696 (regressionFit = 2.789,938695, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 28,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.785,344724 (regressionFit = 2.785,344723, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 28,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.785,215325 (regressionFit = 2.785,215324, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 26,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.775,776548 (regressionFit = 2.775,776547, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 59,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.775,756855 (regressionFit = 2.775,756854, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 22,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.766,731122 (regressionFit = 2.766,731121, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 26,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.736,659513 (regressionFit = 2.736,659512, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 22,0/247,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.736,659513): medv(A) :- lstat(A, 9).  [covers 22,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.789,337611 (regressionFit = 2.789,337610, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 19,0/247,0 pos, 0,0/0,0 neg]
%     Score = -2.764,177705 (regressionFit = 2.764,177704, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 35,0/247,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 9).  [covers 22,0/247,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 9).  [covers 22,0/247,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -11,295.
% Will extend: medv(A) :- lstat(A, 9).  [covers 22,0/247,0 pos, 0,0/0,0 neg]
Comparing variance: 9.702917713597303 to score=0.0025 #egs=22.0
Comparing variance: 11.214201432239125 to score=0.0025 #egs=225.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 22,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-9,702918)
%         ILP node to extend: medv(A) :- lstat(A, 9).  [covers 22,0/247,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -9,702918) into position #1 in the search queue (new size=4).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 225,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-11,214201)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 4 and with score = -11,214201) into position #1 in the search queue (new size=5).

% Time for loop #8: 87 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      medv(A) :- lstat(A, 9).  [covers 22,0/247,0 pos, 0,0/0,0 neg]
% This clause covers 22 positive examples, of which 22 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (medv(A) :- lstat(A, 9))
Created a leaf under (medv(A) :- lstat(A, 9))
Created a leaf under (medv(A) :- indus(A, 5))
Created a leaf under (medv(A) :- lstat(A, 1))
Created a leaf under (medv(A) :- rm(A, 7))

%%%%%  WILL-Produced Tree #7 @ 14:10:17 10/20/22.  %%%%%


% FOR medv(A):
%   if ( indus(A, 5) )
%   then return -1.1327840082475804;  // std dev = 2,669, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   else if ( rad(A, 5) )
%   | then if ( lstat(A, 1) )
%   | | then return 2.1467528420147493;  // std dev = 2,662, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( dis(A, 3) )
%   | | | then if ( b(A, 5) )
%   | | | | then return -0.6383525754802335;  // std dev = 3,256, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return -3.603498503782827;  // std dev = 8,226, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( dis(A, 9) )
%   | | | | then return -1.795894615914698;  // std dev = 13,721, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | | else return 0.8571792936120659;  // std dev = 26,545, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else if ( rm(A, 7) )
%   | | then return 0.906501533213016;  // std dev = 2,579, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( lstat(A, 9) )
%   | | | then return 1.3142952162167405;  // std dev = 3,115, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.3162704206707616;  // std dev = 3,349, 225,000 (wgt'ed) examples reached here.  /* #pos=225 */


% Clauses:

medv(A, -1.1327840082475804) :- 
     indus(A, 5), 
     !. // Clause #1.

medv(A, 2.1467528420147493) :- 
     rad(A, 5), 
     lstat(A, 1), 
     !. // Clause #2.

medv(A, -0.6383525754802335) :- 
     rad(A, 5), 
     dis(A, 3), 
     b(A, 5), 
     !. // Clause #3.

medv(A, -3.603498503782827) :- 
     rad(A, 5), 
     dis(A, 3), 
     !. // Clause #4.

medv(A, -1.795894615914698) :- 
     rad(A, 5), 
     dis(A, 9), 
     !. // Clause #5.

medv(A, 0.8571792936120659) :- 
     rad(A, 5), 
     !. // Clause #6.

medv(A, 0.906501533213016) :- 
     rm(A, 7), 
     !. // Clause #7.

medv(A, 1.3142952162167405) :- 
     lstat(A, 9), 
     !. // Clause #8.

medv(A, -0.3162704206707616) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_medv(a, -1.1327840082475804) :-  /* #pos=48 */ 
   indus(a, 5),
   !. // Flattened version of clause #1.

flattened_medv(a, 2.1467528420147493) :-  /* #pos=15 */ 
   rad(a, 5),
   lstat(a, 1),
   !. // Flattened version of clause #2.

flattened_medv(a, -0.6383525754802335) :-  /* #pos=3 */ 
   rad(a, 5),
   dis(a, 3),
   b(a, 5),
   !. // Flattened version of clause #3.

flattened_medv(a, -3.603498503782827) :-  /* #pos=5 */ 
   rad(a, 5),
   dis(a, 3),
   !. // Flattened version of clause #4.

flattened_medv(a, -1.795894615914698) :-  /* #pos=7 */ 
   rad(a, 5),
   dis(a, 9),
   !. // Flattened version of clause #5.

flattened_medv(a, 0.8571792936120659) :-  /* #pos=75 */ 
   rad(a, 5),
   !. // Flattened version of clause #6.

flattened_medv(a, 0.906501533213016) :-  /* #pos=36 */ 
   rm(a, 7),
   !. // Flattened version of clause #7.

flattened_medv(a, 1.3142952162167405) :-  /* #pos=22 */ 
   lstat(a, 9),
   !. // Flattened version of clause #8.

flattened_medv(underscore, -0.3162704206707616) :-  /* #pos=225 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   lstat(a, 1)
%   dis(a, 9)
%   rm(a, 7)
%   indus(a, 5)
%   lstat(a, 9)
%   b(a, 5)
%   rad(a, 5)
%   dis(a, 3)

% Saving model in: data/boston_housing/train/models/bRDNs/medv.model.ckpt
% Time taken to learn 7 trees is 5,579 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:11.295311900187817
Set score:0.0025
% Kept 436 of the 436 positive examples.
% Kept 0 of the 0 negative examples.
% Dataset size: 436
Computing probabilities
prob time:99 milliseconds
No hidden examples for : medv
Time to build dataset: 103 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:10.081034700178561
Set score:0.0025

% Have these 8 positive seeds: 43 72 76 86 95 168 241 266

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -4.382,325891 (regressionFit = 4.382,325890, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.382,325891): medv(A) :- crim(A, 7).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.372,080629 (regressionFit = 4.372,080628, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.372,080629): medv(A) :- crim(A, 8).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.391,172673 (regressionFit = 4.391,172672, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.392,389087 (regressionFit = 4.392,389086, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.395,135108 (regressionFit = 4.395,135107, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.395,318213 (regressionFit = 4.395,318212, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.374,379580 (regressionFit = 4.374,379579, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.385,901786 (regressionFit = 4.385,901785, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 22).  [covers 9,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.381,691713 (regressionFit = 4.381,691712, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 21,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.394,896336 (regressionFit = 4.394,896335, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.394,421441 (regressionFit = 4.394,421440, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.392,229633 (regressionFit = 4.392,229632, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.395,331130 (regressionFit = 4.395,331129, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.393,410904 (regressionFit = 4.393,410903, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.393,700532 (regressionFit = 4.393,700531, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 401,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.395,331023 (regressionFit = 4.395,331022, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.392,028571 (regressionFit = 4.392,028570, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.386,402649 (regressionFit = 4.386,402648, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.377,503840 (regressionFit = 4.377,503839, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.395,100511 (regressionFit = 4.395,100510, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.393,835942 (regressionFit = 4.393,835941, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.391,555914 (regressionFit = 4.391,555913, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.394,927417 (regressionFit = 4.394,927416, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.367,715033 (regressionFit = 4.367,715032, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.367,715033): medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.381,852829 (regressionFit = 4.381,852828, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.383,417633 (regressionFit = 4.383,417632, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.395,305991 (regressionFit = 4.395,305990, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.340,751640 (regressionFit = 4.340,751639, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 37,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.340,751640): medv(A) :- age(A, 4).  [covers 37,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.394,946725 (regressionFit = 4.394,946724, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.367,794318 (regressionFit = 4.367,794317, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.395,173661 (regressionFit = 4.395,173660, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.395,079240 (regressionFit = 4.395,079239, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.384,646693 (regressionFit = 4.384,646692, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.394,656550 (regressionFit = 4.394,656549, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.393,389984 (regressionFit = 4.393,389983, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.388,226575 (regressionFit = 4.388,226574, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.387,576635 (regressionFit = 4.387,576634, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.389,170881 (regressionFit = 4.389,170879, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 101,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.394,802821 (regressionFit = 4.394,802820, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.389,462441 (regressionFit = 4.389,462440, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 37,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.395,293473 (regressionFit = 4.395,293472, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 16,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.389,174111 (regressionFit = 4.389,174110, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 15,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.385,680623 (regressionFit = 4.385,680622, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 437).  [covers 14,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.394,896336 (regressionFit = 4.394,896335, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 29,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.392,823019 (regressionFit = 4.392,823018, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 296).  [covers 8,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.391,898959 (regressionFit = 4.391,898958, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 193).  [covers 8,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.385,901786 (regressionFit = 4.385,901785, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 330).  [covers 9,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.387,760683 (regressionFit = 4.387,760682, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 287).  [covers 8,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 422).  [covers 1,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.390,904342 (regressionFit = 4.390,904341, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 7).  [covers 16,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.395,324616 (regressionFit = 4.395,324615, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.390,880383 (regressionFit = 4.390,880382, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.392,016193 (regressionFit = 4.392,016192, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.395,321392 (regressionFit = 4.395,321391, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.386,292248 (regressionFit = 4.386,292247, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.395,229724 (regressionFit = 4.395,229723, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.393,899150 (regressionFit = 4.393,899149, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.365,040033 (regressionFit = 4.365,040032, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.382,189607 (regressionFit = 4.382,189606, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.394,560861 (regressionFit = 4.394,560860, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.372,770284 (regressionFit = 4.372,770283, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 102,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.394,903469 (regressionFit = 4.394,903468, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 38,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.393,746664 (regressionFit = 4.393,746663, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.393,699966 (regressionFit = 4.393,699965, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.390,761387 (regressionFit = 4.390,761386, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.392,313955 (regressionFit = 4.392,313954, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- age(A, 4).  [covers 37,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- age(A, 4).  [covers 37,0/436,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: medv(A) :- age(A, 4).  [covers 37,0/436,0 pos, 0,0/0,0 neg]
Comparing variance: 10.567875419779401 to score=0.0025 #egs=37.0
Comparing variance: 9.899098367955279 to score=0.0025 #egs=399.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 37,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-10,567875)
%         ILP node to extend: medv(A) :- age(A, 4).  [covers 37,0/436,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -10,567875) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 399,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-9,899098)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -9,899098) into the LAST position (#2) in the search queue.

% Time for loop #1: 173 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      medv(A) :- age(A, 4).  [covers 37,0/436,0 pos, 0,0/0,0 neg]
% This clause covers 37 positive examples, of which 37 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- age(A, 4).  [covers 37,0/37,0 pos, 0,0/0,0 neg]'
%     Score = -4.340,751640 (regressionFit = 4.340,751639, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 37,0/37,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 6 8 10 16 18 19 20 29
% Gleaner: New best node found (score = -4.340,751640): medv(A) :- age(A, 4).  [covers 37,0/37,0 pos, 0,0/0,0 neg]
%     Score = -389,203338 (regressionFit = 389,203336, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), crim(A, 2).  [covers 5,0/37,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -389,203338): medv(A) :- age(A, 4), crim(A, 2).  [covers 5,0/37,0 pos, 0,0/0,0 neg]
%     Score = -360,663458 (regressionFit = 360,663456, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), crim(A, 5).  [covers 3,0/37,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -360,663458): medv(A) :- age(A, 4), crim(A, 5).  [covers 3,0/37,0 pos, 0,0/0,0 neg]
%     Score = -390,460169 (regressionFit = 390,460166, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), crim(A, 7).  [covers 9,0/37,0 pos, 0,0/0,0 neg]
%     Score = -390,355984 (regressionFit = 390,355982, penalties=2.0300000000000005E-6) for clause:  medv(A) :- age(A, 4), crim(A, 4).  [covers 4,0/37,0 pos, 0,0/0,0 neg]
%     Score = -390,785408 (regressionFit = 390,785406, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), crim(A, 3).  [covers 8,0/37,0 pos, 0,0/0,0 neg]
%     Score = -390,981129 (regressionFit = 390,981127, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), zn(A, 0).  [covers 28,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), zn(A, 22).  [covers 2,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), zn(A, 20).  [covers 1,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), zn(A, 33).  [covers 2,0/37,0 pos, 0,0/0,0 neg]
%     Score = -389,982519 (regressionFit = 389,982517, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), zn(A, 25).  [covers 3,0/37,0 pos, 0,0/0,0 neg]
%     Score = -381,516169 (regressionFit = 381,516167, penalties=2.0300000000000005E-6) for clause:  medv(A) :- age(A, 4), indus(A, 4).  [covers 5,0/37,0 pos, 0,0/0,0 neg]
%     Score = -385,175009 (regressionFit = 385,175007, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), indus(A, 3).  [covers 4,0/37,0 pos, 0,0/0,0 neg]
%     Score = -381,571981 (regressionFit = 381,571979, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), indus(A, 2).  [covers 8,0/37,0 pos, 0,0/0,0 neg]
%     Score = -386,730223 (regressionFit = 386,730221, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), indus(A, 5).  [covers 5,0/37,0 pos, 0,0/0,0 neg]
%     Score = -383,580656 (regressionFit = 383,580654, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), indus(A, 1).  [covers 5,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), chas(A, 0).  [covers 35,0/37,0 pos, 0,0/0,0 neg]
%     Score = -390,484183 (regressionFit = 390,484181, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), nox(A, 3).  [covers 10,0/37,0 pos, 0,0/0,0 neg]
%     Score = -350,269192 (regressionFit = 350,269190, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), nox(A, 1).  [covers 6,0/37,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -350,269192): medv(A) :- age(A, 4), nox(A, 1).  [covers 6,0/37,0 pos, 0,0/0,0 neg]
%     Score = -384,962430 (regressionFit = 384,962428, penalties=2.0300000000000005E-6) for clause:  medv(A) :- age(A, 4), nox(A, 4).  [covers 9,0/37,0 pos, 0,0/0,0 neg]
%     Score = -385,922760 (regressionFit = 385,922758, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), nox(A, 5).  [covers 3,0/37,0 pos, 0,0/0,0 neg]
%     Score = -357,571845 (regressionFit = 357,571843, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), nox(A, 7).  [covers 3,0/37,0 pos, 0,0/0,0 neg]
%     Score = -389,646212 (regressionFit = 389,646210, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), nox(A, 2).  [covers 4,0/37,0 pos, 0,0/0,0 neg]
%     Score = -333,218106 (regressionFit = 333,218104, penalties=2.0300000000000005E-6) for clause:  medv(A) :- age(A, 4), rm(A, 4).  [covers 4,0/37,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -333,218106): medv(A) :- age(A, 4), rm(A, 4).  [covers 4,0/37,0 pos, 0,0/0,0 neg]
%     Score = -385,683743 (regressionFit = 385,683741, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), rm(A, 7).  [covers 6,0/37,0 pos, 0,0/0,0 neg]
%     Score = -378,127958 (regressionFit = 378,127956, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), rm(A, 5).  [covers 3,0/37,0 pos, 0,0/0,0 neg]
%     Score = -379,742821 (regressionFit = 379,742819, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), rm(A, 3).  [covers 7,0/37,0 pos, 0,0/0,0 neg]
%     Score = -389,904003 (regressionFit = 389,904001, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), dis(A, 6).  [covers 8,0/37,0 pos, 0,0/0,0 neg]
%     Score = -388,021458 (regressionFit = 388,021456, penalties=2.0300000000000005E-6) for clause:  medv(A) :- age(A, 4), dis(A, 4).  [covers 12,0/37,0 pos, 0,0/0,0 neg]
%     Score = -389,068642 (regressionFit = 389,068640, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), dis(A, 1).  [covers 5,0/37,0 pos, 0,0/0,0 neg]
%     Score = -389,280508 (regressionFit = 389,280506, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), dis(A, 5).  [covers 4,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), dis(A, 7).  [covers 2,0/37,0 pos, 0,0/0,0 neg]
%     Score = -387,764500 (regressionFit = 387,764498, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), rad(A, 5).  [covers 9,0/37,0 pos, 0,0/0,0 neg]
%     Score = -369,079351 (regressionFit = 369,079349, penalties=2.0300000000000005E-6) for clause:  medv(A) :- age(A, 4), rad(A, 4).  [covers 6,0/37,0 pos, 0,0/0,0 neg]
%     Score = -389,106153 (regressionFit = 389,106151, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), rad(A, 8).  [covers 9,0/37,0 pos, 0,0/0,0 neg]
%     Score = -377,734818 (regressionFit = 377,734816, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), rad(A, 7).  [covers 4,0/37,0 pos, 0,0/0,0 neg]
%     Score = -390,556385 (regressionFit = 390,556383, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), tax(A, 296).  [covers 3,0/37,0 pos, 0,0/0,0 neg]
%     Score = -390,904181 (regressionFit = 390,904179, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), tax(A, 307).  [covers 8,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), tax(A, 330).  [covers 2,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), tax(A, 264).  [covers 1,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), tax(A, 222).  [covers 2,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), tax(A, 284).  [covers 2,0/37,0 pos, 0,0/0,0 neg]
%     Score = -390,073687 (regressionFit = 390,073685, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), ptratio(A, 6).  [covers 10,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- age(A, 4), ptratio(A, 4).  [covers 2,0/37,0 pos, 0,0/0,0 neg]
%     Score = -386,404052 (regressionFit = 386,404050, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), ptratio(A, 5).  [covers 6,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), ptratio(A, 9).  [covers 1,0/37,0 pos, 0,0/0,0 neg]
%     Score = -388,176268 (regressionFit = 388,176266, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), ptratio(A, 3).  [covers 7,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), ptratio(A, 8).  [covers 2,0/37,0 pos, 0,0/0,0 neg]
%     Score = -389,462533 (regressionFit = 389,462531, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), b(A, 6).  [covers 8,0/37,0 pos, 0,0/0,0 neg]
%     Score = -386,760548 (regressionFit = 386,760546, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), b(A, 8).  [covers 5,0/37,0 pos, 0,0/0,0 neg]
%     Score = -372,382169 (regressionFit = 372,382167, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), b(A, 5).  [covers 3,0/37,0 pos, 0,0/0,0 neg]
%     Score = -376,037759 (regressionFit = 376,037757, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), b(A, 1).  [covers 6,0/37,0 pos, 0,0/0,0 neg]
%     Score = -390,875535 (regressionFit = 390,875533, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), b(A, 3).  [covers 3,0/37,0 pos, 0,0/0,0 neg]
%     Score = -390,449709 (regressionFit = 390,449707, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), lstat(A, 9).  [covers 7,0/37,0 pos, 0,0/0,0 neg]
%     Score = -390,856440 (regressionFit = 390,856438, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), lstat(A, 8).  [covers 7,0/37,0 pos, 0,0/0,0 neg]
%     Score = -390,387840 (regressionFit = 390,387838, penalties=2.0300000000000005E-6) for clause:  medv(A) :- age(A, 4), lstat(A, 4).  [covers 8,0/37,0 pos, 0,0/0,0 neg]
%     Score = -387,498206 (regressionFit = 387,498203, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), lstat(A, 1).  [covers 3,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 4), lstat(A, 5).  [covers 2,0/37,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- age(A, 4), rm(A, 4).  [covers 4,0/37,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- age(A, 4), rm(A, 4).  [covers 4,0/37,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -10,568.
% Will extend: medv(A) :- age(A, 4), rm(A, 4).  [covers 4,0/37,0 pos, 0,0/0,0 neg]
Comparing variance: 9.693762303684075 to score=0.0025 #egs=4.0
Comparing variance: 8.922516822176217 to score=0.0025 #egs=33.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 4,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 33,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-8,922517)
%         ILP node to extend: medv(A) :- age(A, 4).  [covers 37,0/37,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -8,922517) into the LAST position (#2) in the search queue.

% Time for loop #2: 39 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      medv(A) :- age(A, 4), rm(A, 4).  [covers 4,0/37,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 7 positive seeds: 18 41 148 295 303 357 362

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 399,0/399,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 399,0/399,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -3.949,361337 (regressionFit = 3.949,361336, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 37,0/399,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.949,361337): medv(A) :- crim(A, 4).  [covers 37,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.939,319876 (regressionFit = 3.939,319875, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 38,0/399,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.939,319876): medv(A) :- crim(A, 7).  [covers 38,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.946,352502 (regressionFit = 3.946,352501, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 46,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.949,731447 (regressionFit = 3.949,731446, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 44,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.948,894609 (regressionFit = 3.948,894608, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 49,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.924,913040 (regressionFit = 3.924,913039, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 279,0/399,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.924,913040): medv(A) :- zn(A, 0).  [covers 279,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.924,000885 (regressionFit = 3.924,000884, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 22).  [covers 7,0/399,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.924,000885): medv(A) :- zn(A, 22).  [covers 7,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.943,143405 (regressionFit = 3.943,143404, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 75).  [covers 3,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.939,748121 (regressionFit = 3.939,748120, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 21).  [covers 4,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.948,842606 (regressionFit = 3.948,842605, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 30,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.942,696821 (regressionFit = 3.942,696820, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 20,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.948,957764 (regressionFit = 3.948,957763, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 43,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.947,177867 (regressionFit = 3.947,177866, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 88,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.949,717151 (regressionFit = 3.949,717150, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 44,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.938,658447 (regressionFit = 3.938,658446, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 366,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.934,203763 (regressionFit = 3.934,203762, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 41,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.949,294868 (regressionFit = 3.949,294867, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 36,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.949,046788 (regressionFit = 3.949,046787, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 47,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.918,494644 (regressionFit = 3.918,494643, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 10).  [covers 42,0/399,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.918,494644): medv(A) :- nox(A, 10).  [covers 42,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.949,700284 (regressionFit = 3.949,700283, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 47,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.949,635985 (regressionFit = 3.949,635984, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 36,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.948,118567 (regressionFit = 3.948,118566, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 40,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.946,858942 (regressionFit = 3.946,858941, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 42,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.948,409069 (regressionFit = 3.948,409068, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 41,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.913,425352 (regressionFit = 3.913,425351, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 40,0/399,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.913,425352): medv(A) :- rm(A, 1).  [covers 40,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.946,370203 (regressionFit = 3.946,370202, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 40,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.949,393798 (regressionFit = 3.949,393797, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 43,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.929,729185 (regressionFit = 3.929,729184, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 49,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.948,357486 (regressionFit = 3.948,357485, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 46,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.941,277086 (regressionFit = 3.941,277085, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 24,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.949,258753 (regressionFit = 3.949,258752, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 51,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.948,674043 (regressionFit = 3.948,674042, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 42,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.948,233897 (regressionFit = 3.948,233896, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 42,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.928,065954 (regressionFit = 3.928,065953, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 47,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.936,663587 (regressionFit = 3.936,663586, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 50,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.923,480389 (regressionFit = 3.923,480388, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 16,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.948,833788 (regressionFit = 3.948,833787, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 95,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.939,346819 (regressionFit = 3.939,346818, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 12,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.947,177867 (regressionFit = 3.947,177866, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 88,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.946,409720 (regressionFit = 3.946,409719, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 36,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.943,459611 (regressionFit = 3.943,459610, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 432).  [covers 7,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.942,445295 (regressionFit = 3.942,445294, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 437).  [covers 14,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.924,000885 (regressionFit = 3.924,000884, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 330).  [covers 7,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.947,177867 (regressionFit = 3.947,177866, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 88,0/399,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 252).  [covers 2,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.939,748121 (regressionFit = 3.939,748120, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 243).  [covers 4,0/399,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 469).  [covers 1,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.947,183005 (regressionFit = 3.947,183004, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 41,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.946,958556 (regressionFit = 3.946,958555, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 7).  [covers 16,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.947,527482 (regressionFit = 3.947,527481, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 36,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.944,682038 (regressionFit = 3.944,682037, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 95,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.949,379497 (regressionFit = 3.949,379496, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 44,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.949,353194 (regressionFit = 3.949,353193, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 38,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.949,739278 (regressionFit = 3.949,739277, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 44,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.943,117658 (regressionFit = 3.943,117657, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 39,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.948,146829 (regressionFit = 3.948,146828, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 43,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.919,063976 (regressionFit = 3.919,063975, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 96,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.944,808312 (regressionFit = 3.944,808311, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 22,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.946,052707 (regressionFit = 3.946,052706, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 37,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.949,169023 (regressionFit = 3.949,169022, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 44,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.946,648055 (regressionFit = 3.946,648054, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 48,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.949,731472 (regressionFit = 3.949,731471, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 35,0/399,0 pos, 0,0/0,0 neg]
%     Score = -3.945,554408 (regressionFit = 3.945,554407, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 36,0/399,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 1).  [covers 40,0/399,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 1).  [covers 40,0/399,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -9,899.
% Will extend: medv(A) :- rm(A, 1).  [covers 40,0/399,0 pos, 0,0/0,0 neg]
Comparing variance: 12.9579915184276 to score=0.0025 #egs=40.0
Comparing variance: 9.457118913287003 to score=0.0025 #egs=359.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 40,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-12,957992)
%         ILP node to extend: medv(A) :- rm(A, 1).  [covers 40,0/399,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -12,957992) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 359,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-9,457119)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -9,457119) into position #2 in the search queue (new size=3).

% Time for loop #3: 131 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      medv(A) :- rm(A, 1).  [covers 40,0/399,0 pos, 0,0/0,0 neg]
% This clause covers 40 positive examples, of which 40 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 1).  [covers 40,0/40,0 pos, 0,0/0,0 neg]'
%     Score = -3.913,425352 (regressionFit = 3.913,425351, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 40,0/40,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 5 9 16 21 23 26 30 33
% Gleaner: New best node found (score = -3.913,425352): medv(A) :- rm(A, 1).  [covers 40,0/40,0 pos, 0,0/0,0 neg]
%     Score = -511,152509 (regressionFit = 511,152507, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), crim(A, 3).  [covers 7,0/40,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -511,152509): medv(A) :- rm(A, 1), crim(A, 3).  [covers 7,0/40,0 pos, 0,0/0,0 neg]
%     Score = -517,951362 (regressionFit = 517,951360, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), crim(A, 2).  [covers 5,0/40,0 pos, 0,0/0,0 neg]
%     Score = -453,674323 (regressionFit = 453,674321, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 1), crim(A, 1).  [covers 10,0/40,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -453,674323): medv(A) :- rm(A, 1), crim(A, 1).  [covers 10,0/40,0 pos, 0,0/0,0 neg]
%     Score = -518,180835 (regressionFit = 518,180833, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), crim(A, 6).  [covers 6,0/40,0 pos, 0,0/0,0 neg]
%     Score = -506,792518 (regressionFit = 506,792516, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), crim(A, 7).  [covers 3,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), crim(A, 9).  [covers 1,0/40,0 pos, 0,0/0,0 neg]
%     Score = -423,008620 (regressionFit = 423,008618, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0).  [covers 21,0/40,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -423,008620): medv(A) :- rm(A, 1), zn(A, 0).  [covers 21,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 80).  [covers 2,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 33).  [covers 1,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 85).  [covers 1,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 75).  [covers 1,0/40,0 pos, 0,0/0,0 neg]
%     Score = -506,313989 (regressionFit = 506,313987, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 1), indus(A, 1).  [covers 8,0/40,0 pos, 0,0/0,0 neg]
%     Score = -488,137767 (regressionFit = 488,137765, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), indus(A, 7).  [covers 3,0/40,0 pos, 0,0/0,0 neg]
%     Score = -515,531104 (regressionFit = 515,531102, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), indus(A, 5).  [covers 7,0/40,0 pos, 0,0/0,0 neg]
%     Score = -514,980100 (regressionFit = 514,980098, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), indus(A, 6).  [covers 3,0/40,0 pos, 0,0/0,0 neg]
%     Score = -517,756053 (regressionFit = 517,756051, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), indus(A, 4).  [covers 7,0/40,0 pos, 0,0/0,0 neg]
%     Score = -517,820012 (regressionFit = 517,820010, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), indus(A, 10).  [covers 5,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), chas(A, 0).  [covers 39,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 1), chas(A, 1).  [covers 1,0/40,0 pos, 0,0/0,0 neg]
%     Score = -500,101460 (regressionFit = 500,101458, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), nox(A, 4).  [covers 4,0/40,0 pos, 0,0/0,0 neg]
%     Score = -512,286587 (regressionFit = 512,286585, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 1), nox(A, 1).  [covers 6,0/40,0 pos, 0,0/0,0 neg]
%     Score = -518,298527 (regressionFit = 518,298525, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), nox(A, 6).  [covers 6,0/40,0 pos, 0,0/0,0 neg]
%     Score = -497,404820 (regressionFit = 497,404818, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), nox(A, 5).  [covers 11,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), nox(A, 8).  [covers 1,0/40,0 pos, 0,0/0,0 neg]
%     Score = -505,607097 (regressionFit = 505,607095, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), age(A, 7).  [covers 3,0/40,0 pos, 0,0/0,0 neg]
%     Score = -499,155111 (regressionFit = 499,155109, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), age(A, 2).  [covers 5,0/40,0 pos, 0,0/0,0 neg]
%     Score = -509,743687 (regressionFit = 509,743685, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), age(A, 10).  [covers 7,0/40,0 pos, 0,0/0,0 neg]
%     Score = -483,244954 (regressionFit = 483,244952, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 1), age(A, 1).  [covers 7,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), age(A, 9).  [covers 2,0/40,0 pos, 0,0/0,0 neg]
%     Score = -518,284654 (regressionFit = 518,284652, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), age(A, 8).  [covers 9,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), age(A, 5).  [covers 1,0/40,0 pos, 0,0/0,0 neg]
%     Score = -499,785234 (regressionFit = 499,785232, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), dis(A, 6).  [covers 4,0/40,0 pos, 0,0/0,0 neg]
%     Score = -475,804063 (regressionFit = 475,804061, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), dis(A, 4).  [covers 7,0/40,0 pos, 0,0/0,0 neg]
%     Score = -513,527781 (regressionFit = 513,527779, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), dis(A, 2).  [covers 5,0/40,0 pos, 0,0/0,0 neg]
%     Score = -511,212292 (regressionFit = 511,212290, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), dis(A, 5).  [covers 6,0/40,0 pos, 0,0/0,0 neg]
%     Score = -509,018953 (regressionFit = 509,018951, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), dis(A, 10).  [covers 4,0/40,0 pos, 0,0/0,0 neg]
%     Score = -517,211650 (regressionFit = 517,211648, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), rad(A, 3).  [covers 4,0/40,0 pos, 0,0/0,0 neg]
%     Score = -463,992159 (regressionFit = 463,992157, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), rad(A, 5).  [covers 8,0/40,0 pos, 0,0/0,0 neg]
%     Score = -508,991233 (regressionFit = 508,991231, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), rad(A, 4).  [covers 11,0/40,0 pos, 0,0/0,0 neg]
%     Score = -504,135983 (regressionFit = 504,135981, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), rad(A, 7).  [covers 3,0/40,0 pos, 0,0/0,0 neg]
%     Score = -517,820012 (regressionFit = 517,820010, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), rad(A, 24).  [covers 5,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), tax(A, 193).  [covers 1,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), tax(A, 276).  [covers 2,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), tax(A, 245).  [covers 1,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), tax(A, 222).  [covers 1,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), tax(A, 304).  [covers 2,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), tax(A, 351).  [covers 1,0/40,0 pos, 0,0/0,0 neg]
%     Score = -517,820012 (regressionFit = 517,820010, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), tax(A, 666).  [covers 5,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), tax(A, 252).  [covers 1,0/40,0 pos, 0,0/0,0 neg]
%     Score = -516,916129 (regressionFit = 516,916127, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), ptratio(A, 2).  [covers 5,0/40,0 pos, 0,0/0,0 neg]
%     Score = -503,194977 (regressionFit = 503,194975, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 1), ptratio(A, 1).  [covers 9,0/40,0 pos, 0,0/0,0 neg]
%     Score = -518,053577 (regressionFit = 518,053575, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), ptratio(A, 5).  [covers 3,0/40,0 pos, 0,0/0,0 neg]
%     Score = -514,402573 (regressionFit = 514,402570, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), ptratio(A, 3).  [covers 7,0/40,0 pos, 0,0/0,0 neg]
%     Score = -517,820012 (regressionFit = 517,820010, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), ptratio(A, 10).  [covers 5,0/40,0 pos, 0,0/0,0 neg]
%     Score = -516,883886 (regressionFit = 516,883884, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 1), b(A, 1).  [covers 10,0/40,0 pos, 0,0/0,0 neg]
%     Score = -516,456414 (regressionFit = 516,456412, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), b(A, 2).  [covers 5,0/40,0 pos, 0,0/0,0 neg]
%     Score = -507,254522 (regressionFit = 507,254520, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), b(A, 4).  [covers 4,0/40,0 pos, 0,0/0,0 neg]
%     Score = -513,954960 (regressionFit = 513,954958, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), b(A, 8).  [covers 4,0/40,0 pos, 0,0/0,0 neg]
%     Score = -517,622796 (regressionFit = 517,622794, penalties=2.0300000000000005E-6) for clause:  medv(A) :- rm(A, 1), lstat(A, 1).  [covers 10,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), lstat(A, 8).  [covers 2,0/40,0 pos, 0,0/0,0 neg]
%     Score = -492,312101 (regressionFit = 492,312099, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), lstat(A, 2).  [covers 6,0/40,0 pos, 0,0/0,0 neg]
%     Score = -516,809328 (regressionFit = 516,809326, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), lstat(A, 9).  [covers 10,0/40,0 pos, 0,0/0,0 neg]
%     Score = -502,572929 (regressionFit = 502,572927, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), lstat(A, 3).  [covers 7,0/40,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 1), zn(A, 0).  [covers 21,0/40,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 1), zn(A, 0).  [covers 21,0/40,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -12,958.
% Will extend: medv(A) :- rm(A, 1), zn(A, 0).  [covers 21,0/40,0 pos, 0,0/0,0 neg]
Comparing variance: 14.037995672477988 to score=0.0025 #egs=21.0
Comparing variance: 6.7479320548037895 to score=0.0025 #egs=19.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 21,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-14,037996)
%         ILP node to extend: medv(A) :- rm(A, 1), zn(A, 0).  [covers 21,0/40,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -14,037996) into position #1 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 19,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-6,747932)
%         ILP node to extend: medv(A) :- rm(A, 1).  [covers 40,0/40,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -6,747932) into the LAST position (#4) in the search queue.

% Time for loop #4: 45 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      medv(A) :- rm(A, 1), zn(A, 0).  [covers 21,0/40,0 pos, 0,0/0,0 neg]
% This clause covers 21 positive examples, of which 21 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 1), zn(A, 0).  [covers 21,0/21,0 pos, 0,0/0,0 neg]'
%     Score = -423,008620 (regressionFit = 423,008618, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0).  [covers 21,0/21,0 pos, 0,0/0,0 neg]

% Have these 7 positive seeds: 3 4 6 8 14 15 19
% Gleaner: New best node found (score = -423,008620): medv(A) :- rm(A, 1), zn(A, 0).  [covers 21,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), crim(A, 2).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -287,939573 (regressionFit = 287,939570, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), crim(A, 3).  [covers 5,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -287,939573): medv(A) :- rm(A, 1), zn(A, 0), crim(A, 3).  [covers 5,0/21,0 pos, 0,0/0,0 neg]
%     Score = -277,393822 (regressionFit = 277,393819, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), crim(A, 5).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -277,393822): medv(A) :- rm(A, 1), zn(A, 0), crim(A, 5).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), crim(A, 9).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -284,306096 (regressionFit = 284,306092, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), crim(A, 10).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), crim(A, 6).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), indus(A, 4).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -276,513458 (regressionFit = 276,513455, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), indus(A, 1).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -276,513458): medv(A) :- rm(A, 1), zn(A, 0), indus(A, 1).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), indus(A, 2).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -286,034967 (regressionFit = 286,034964, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), indus(A, 7).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -274,377865 (regressionFit = 274,377862, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), indus(A, 10).  [covers 5,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -274,377865): medv(A) :- rm(A, 1), zn(A, 0), indus(A, 10).  [covers 5,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), indus(A, 5).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), chas(A, 0).  [covers 20,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), chas(A, 1).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -293,223452 (regressionFit = 293,223449, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), nox(A, 3).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), nox(A, 4).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), nox(A, 5).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), nox(A, 8).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), nox(A, 10).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), nox(A, 2).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), age(A, 8).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -293,882036 (regressionFit = 293,882033, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), age(A, 7).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -293,932903 (regressionFit = 293,932900, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), age(A, 2).  [covers 5,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), age(A, 5).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -280,026373 (regressionFit = 280,026370, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), age(A, 1).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -293,170829 (regressionFit = 293,170826, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), dis(A, 6).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -282,811543 (regressionFit = 282,811540, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), dis(A, 4).  [covers 6,0/21,0 pos, 0,0/0,0 neg]
%     Score = -279,462582 (regressionFit = 279,462579, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), dis(A, 3).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -252,815012 (regressionFit = 252,815008, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), dis(A, 10).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -252,815012): medv(A) :- rm(A, 1), zn(A, 0), dis(A, 10).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), dis(A, 1).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -247,358492 (regressionFit = 247,358489, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), rad(A, 5).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -247,358492): medv(A) :- rm(A, 1), zn(A, 0), rad(A, 5).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), rad(A, 3).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), rad(A, 8).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -289,628192 (regressionFit = 289,628189, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), rad(A, 4).  [covers 5,0/21,0 pos, 0,0/0,0 neg]
%     Score = -274,377865 (regressionFit = 274,377862, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), rad(A, 24).  [covers 5,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), tax(A, 296).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), tax(A, 193).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -280,351565 (regressionFit = 280,351562, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), tax(A, 307).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), tax(A, 289).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -274,377865 (regressionFit = 274,377862, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), tax(A, 666).  [covers 5,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), tax(A, 247).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -255,461685 (regressionFit = 255,461682, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), ptratio(A, 6).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -294,677300 (regressionFit = 294,677297, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), ptratio(A, 2).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -288,901880 (regressionFit = 288,901877, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), ptratio(A, 1).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
%     Score = -274,377865 (regressionFit = 274,377862, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), ptratio(A, 10).  [covers 5,0/21,0 pos, 0,0/0,0 neg]
%     Score = -291,677731 (regressionFit = 291,677728, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), ptratio(A, 3).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), b(A, 6).  [covers 2,0/21,0 pos, 0,0/0,0 neg]
%     Score = -288,387759 (regressionFit = 288,387755, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), b(A, 1).  [covers 5,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), b(A, 8).  [covers 1,0/21,0 pos, 0,0/0,0 neg]
%     Score = -284,200215 (regressionFit = 284,200212, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), b(A, 9).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -289,859767 (regressionFit = 289,859764, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), b(A, 2).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -283,413198 (regressionFit = 283,413195, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), lstat(A, 1).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -256,123833 (regressionFit = 256,123830, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), lstat(A, 9).  [covers 5,0/21,0 pos, 0,0/0,0 neg]
%     Score = -294,795662 (regressionFit = 294,795659, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), lstat(A, 3).  [covers 3,0/21,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), lstat(A, 6).  [covers 2,0/21,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 1), zn(A, 0), rad(A, 5).  [covers 4,0/21,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 1), zn(A, 0), rad(A, 5).  [covers 4,0/21,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -14,038.
% Will extend: medv(A) :- rm(A, 1), zn(A, 0), rad(A, 5).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
Comparing variance: 4.042211628621374 to score=0.0025 #egs=4.0
Comparing variance: 13.599390710539064 to score=0.0025 #egs=17.0
%   Creating a TRUE-branch leaf because length = 4 > 3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 17,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-13,599391)
%         ILP node to extend: medv(A) :- rm(A, 1), zn(A, 0).  [covers 21,0/21,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -13,599391) into position #1 in the search queue (new size=4).

% Time for loop #5: 36 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #5, the best clause found is:
%      medv(A) :- rm(A, 1), zn(A, 0), rad(A, 5).  [covers 4,0/21,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- rm(A, 1), zn(A, 0).  [covers 21,0/17,0 pos, 0,0/0,0 neg]'
%     Score = -423,008620 (regressionFit = 423,008618, penalties=2.0500000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0).  [covers 17,0/17,0 pos, 0,0/0,0 neg]

% Have these 7 positive seeds: 0 1 4 6 8 10 12
% Gleaner: New best node found (score = -423,008620): medv(A) :- rm(A, 1), zn(A, 0).  [covers 17,0/17,0 pos, 0,0/0,0 neg]
%     Score = -221,856776 (regressionFit = 221,856773, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), crim(A, 3).  [covers 4,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -221,856776): medv(A) :- rm(A, 1), zn(A, 0), crim(A, 3).  [covers 4,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), crim(A, 5).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -226,405058 (regressionFit = 226,405055, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), crim(A, 7).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), crim(A, 9).  [covers 1,0/17,0 pos, 0,0/0,0 neg]
%     Score = -228,416614 (regressionFit = 228,416611, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), crim(A, 10).  [covers 4,0/17,0 pos, 0,0/0,0 neg]
%     Score = -219,982895 (regressionFit = 219,982891, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), indus(A, 6).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -219,982895): medv(A) :- rm(A, 1), zn(A, 0), indus(A, 6).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
%     Score = -222,363311 (regressionFit = 222,363307, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), indus(A, 1).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), indus(A, 7).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), indus(A, 3).  [covers 1,0/17,0 pos, 0,0/0,0 neg]
%     Score = -223,603028 (regressionFit = 223,603025, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), indus(A, 10).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), chas(A, 0).  [covers 16,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), chas(A, 1).  [covers 1,0/17,0 pos, 0,0/0,0 neg]
%     Score = -214,361143 (regressionFit = 214,361140, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), nox(A, 1).  [covers 4,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -214,361143): medv(A) :- rm(A, 1), zn(A, 0), nox(A, 1).  [covers 4,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), nox(A, 4).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), nox(A, 5).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), nox(A, 8).  [covers 1,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), nox(A, 10).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -231,047582 (regressionFit = 231,047579, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), age(A, 2).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
%     Score = -225,582881 (regressionFit = 225,582878, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), age(A, 7).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), age(A, 8).  [covers 1,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), age(A, 9).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), age(A, 5).  [covers 1,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), age(A, 6).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), dis(A, 6).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -224,410684 (regressionFit = 224,410681, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), dis(A, 3).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), dis(A, 1).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -208,734604 (regressionFit = 208,734601, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), dis(A, 4).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -208,734604): medv(A) :- rm(A, 1), zn(A, 0), dis(A, 4).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -206,198062 (regressionFit = 206,198059, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), dis(A, 10).  [covers 4,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -206,198062): medv(A) :- rm(A, 1), zn(A, 0), dis(A, 10).  [covers 4,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), rad(A, 6).  [covers 1,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), rad(A, 3).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -231,011699 (regressionFit = 231,011696, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), rad(A, 4).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -223,603028 (regressionFit = 223,603025, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), rad(A, 24).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), tax(A, 432).  [covers 1,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), tax(A, 193).  [covers 1,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), tax(A, 289).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -203,425826 (regressionFit = 203,425823, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), tax(A, 307).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -203,425826): medv(A) :- rm(A, 1), zn(A, 0), tax(A, 307).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), tax(A, 304).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -223,603028 (regressionFit = 223,603025, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), tax(A, 666).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -230,113857 (regressionFit = 230,113854, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), ptratio(A, 2).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
%     Score = -224,410684 (regressionFit = 224,410681, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), ptratio(A, 1).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), ptratio(A, 4).  [covers 1,0/17,0 pos, 0,0/0,0 neg]
%     Score = -231,021068 (regressionFit = 231,021065, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), ptratio(A, 3).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
%     Score = -223,603028 (regressionFit = 223,603025, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), ptratio(A, 10).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), b(A, 4).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -210,297900 (regressionFit = 210,297897, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), b(A, 1).  [covers 5,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), b(A, 5).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), b(A, 8).  [covers 1,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), lstat(A, 8).  [covers 1,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0500000000000004E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), lstat(A, 1).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), lstat(A, 4).  [covers 1,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), lstat(A, 2).  [covers 2,0/17,0 pos, 0,0/0,0 neg]
%     Score = -229,116310 (regressionFit = 229,116307, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), lstat(A, 3).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=3.0700000000000003E-6) for clause:  medv(A) :- rm(A, 1), zn(A, 0), lstat(A, 5).  [covers 2,0/17,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 1), zn(A, 0), tax(A, 307).  [covers 3,0/17,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- rm(A, 1), zn(A, 0), tax(A, 307).  [covers 3,0/17,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -13,599.
% Will extend: medv(A) :- rm(A, 1), zn(A, 0), tax(A, 307).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #6: 31 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      medv(A) :- rm(A, 1), zn(A, 0), tax(A, 307).  [covers 3,0/17,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 102 121 132 155 203 204 255 258

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 359,0/359,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 359,0/359,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -3.395,027975 (regressionFit = 3.395,027974, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 36,0/359,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.395,027975): medv(A) :- crim(A, 4).  [covers 36,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.377,217954 (regressionFit = 3.377,217953, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 35,0/359,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.377,217954): medv(A) :- crim(A, 7).  [covers 35,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.392,863854 (regressionFit = 3.392,863853, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 43,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.394,705095 (regressionFit = 3.394,705094, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 31,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.395,080006 (regressionFit = 3.395,080005, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 40,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.371,045747 (regressionFit = 3.371,045746, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 32,0/359,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.371,045747): medv(A) :- crim(A, 8).  [covers 32,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.388,552303 (regressionFit = 3.388,552302, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 258,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.383,535547 (regressionFit = 3.383,535546, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 20).  [covers 19,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.394,893031 (regressionFit = 3.394,893030, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 35).  [covers 3,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.394,955169 (regressionFit = 3.394,955168, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 27,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.378,357263 (regressionFit = 3.378,357262, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 39,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.389,569047 (regressionFit = 3.389,569046, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 41,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.389,698507 (regressionFit = 3.389,698506, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 83,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.378,262717 (regressionFit = 3.378,262716, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 32,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.378,262717 (regressionFit = 3.378,262716, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 327,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.378,196646 (regressionFit = 3.378,196645, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 35,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.382,113491 (regressionFit = 3.382,113490, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 35,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.395,104824 (regressionFit = 3.395,104823, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 41,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.390,688993 (regressionFit = 3.390,688992, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 36,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.360,351115 (regressionFit = 3.360,351114, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 10).  [covers 40,0/359,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.360,351115): medv(A) :- nox(A, 10).  [covers 40,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.394,180835 (regressionFit = 3.394,180834, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 36,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.362,334715 (regressionFit = 3.362,334714, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 41,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.394,879035 (regressionFit = 3.394,879034, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 41,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.394,819281 (regressionFit = 3.394,819280, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 38,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.395,103059 (regressionFit = 3.395,103058, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 42,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.393,182119 (regressionFit = 3.393,182118, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 40,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.384,110590 (regressionFit = 3.384,110589, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 42,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.394,662728 (regressionFit = 3.394,662727, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 43,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.380,925402 (regressionFit = 3.380,925401, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 35,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.384,480246 (regressionFit = 3.384,480245, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 40,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.392,963082 (regressionFit = 3.392,963081, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 45,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.394,527704 (regressionFit = 3.394,527703, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 39,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.368,846454 (regressionFit = 3.368,846453, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 26,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.388,408833 (regressionFit = 3.388,408832, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 42,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.394,978838 (regressionFit = 3.394,978837, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 47,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.394,187948 (regressionFit = 3.394,187947, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 39,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.391,495008 (regressionFit = 3.391,495007, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 84,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.374,266202 (regressionFit = 3.374,266201, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 13,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.392,880096 (regressionFit = 3.392,880095, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 32,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.395,074743 (regressionFit = 3.395,074742, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 12,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.389,698507 (regressionFit = 3.389,698506, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 83,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.393,718831 (regressionFit = 3.393,718830, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 277).  [covers 10,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.382,660896 (regressionFit = 3.382,660895, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 28,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.389,317259 (regressionFit = 3.389,317258, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 223).  [covers 4,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.374,202363 (regressionFit = 3.374,202362, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 304).  [covers 9,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.389,698507 (regressionFit = 3.389,698506, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 83,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.395,028313 (regressionFit = 3.395,028312, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 37,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.386,861193 (regressionFit = 3.386,861191, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 30,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.390,914311 (regressionFit = 3.390,914310, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 28,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.385,721129 (regressionFit = 3.385,721128, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 90,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.386,303820 (regressionFit = 3.386,303819, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 32,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.395,100599 (regressionFit = 3.395,100598, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 37,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.394,911435 (regressionFit = 3.394,911434, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 41,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.393,053495 (regressionFit = 3.393,053494, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 35,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.385,446670 (regressionFit = 3.385,446669, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 36,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.394,821690 (regressionFit = 3.394,821689, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 35,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.395,103092 (regressionFit = 3.395,103091, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 41,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.394,370887 (regressionFit = 3.394,370886, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 29,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.394,719206 (regressionFit = 3.394,719205, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 42,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.393,520183 (regressionFit = 3.393,520182, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 33,0/359,0 pos, 0,0/0,0 neg]
%     Score = -3.380,046258 (regressionFit = 3.380,046257, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 35,0/359,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 10).  [covers 40,0/359,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 10).  [covers 40,0/359,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -9,457.
% Will extend: medv(A) :- nox(A, 10).  [covers 40,0/359,0 pos, 0,0/0,0 neg]
Comparing variance: 8.375496686372559 to score=0.0025 #egs=40.0
Comparing variance: 9.483797010398472 to score=0.0025 #egs=319.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 40,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-8,375497)
%         ILP node to extend: medv(A) :- nox(A, 10).  [covers 40,0/359,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -8,375497) into position #2 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 319,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-9,483797)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -9,483797) into position #1 in the search queue (new size=4).

% Time for loop #7: 118 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      medv(A) :- nox(A, 10).  [covers 40,0/359,0 pos, 0,0/0,0 neg]
% This clause covers 40 positive examples, of which 40 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 5 positive seeds: 35 225 258 259 294

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 319,0/319,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 319,0/319,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -3.012,604117 (regressionFit = 3.012,604116, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 35,0/319,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.012,604117): medv(A) :- crim(A, 7).  [covers 35,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.007,715497 (regressionFit = 3.007,715496, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 30,0/319,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.007,715497): medv(A) :- crim(A, 8).  [covers 30,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.021,532197 (regressionFit = 3.021,532196, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 16,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.019,566875 (regressionFit = 3.019,566874, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 9).  [covers 16,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.025,331168 (regressionFit = 3.025,331167, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 31,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.023,678048 (regressionFit = 3.023,678047, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 218,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.023,873208 (regressionFit = 3.023,873207, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 80).  [covers 12,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.012,039411 (regressionFit = 3.012,039410, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 20,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.021,567085 (regressionFit = 3.021,567084, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 43,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.024,783949 (regressionFit = 3.024,783948, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 37,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.002,420474 (regressionFit = 3.002,420473, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 287,0/319,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.002,420474): medv(A) :- chas(A, 0).  [covers 287,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.002,420474 (regressionFit = 3.002,420473, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 32,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.024,770345 (regressionFit = 3.024,770344, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 35,0/319,0 pos, 0,0/0,0 neg]
%     Score = -2.999,864930 (regressionFit = 2.999,864929, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 39,0/319,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.999,864930): medv(A) :- nox(A, 9).  [covers 39,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.020,367504 (regressionFit = 3.020,367503, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 28,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.025,258914 (regressionFit = 3.025,258913, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 41,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.025,316928 (regressionFit = 3.025,316927, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 38,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.023,733298 (regressionFit = 3.023,733297, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 35,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.025,008532 (regressionFit = 3.025,008531, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 35,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.025,018751 (regressionFit = 3.025,018750, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 36,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.017,319787 (regressionFit = 3.017,319786, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 35,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.021,242723 (regressionFit = 3.021,242722, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 33,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.023,795052 (regressionFit = 3.023,795051, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 36,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.009,084662 (regressionFit = 3.009,084661, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 40,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.025,317133 (regressionFit = 3.025,317132, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 37,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.020,635914 (regressionFit = 3.020,635913, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 25,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.021,933340 (regressionFit = 3.021,933339, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 42,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.015,633277 (regressionFit = 3.015,633276, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 84,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.021,567085 (regressionFit = 3.021,567084, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 43,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.012,938993 (regressionFit = 3.012,938992, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 437).  [covers 14,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.021,567085 (regressionFit = 3.021,567084, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 43,0/319,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 337).  [covers 2,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.018,868718 (regressionFit = 3.018,868717, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 7).  [covers 16,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.024,855041 (regressionFit = 3.024,855040, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 50,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.006,930256 (regressionFit = 3.006,930255, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 35,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.025,324012 (regressionFit = 3.025,324011, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 34,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.024,766446 (regressionFit = 3.024,766445, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 35,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.009,061039 (regressionFit = 3.009,061038, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 25,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.015,304205 (regressionFit = 3.015,304204, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 67,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.021,806700 (regressionFit = 3.021,806699, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 30,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.024,972689 (regressionFit = 3.024,972688, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 33,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.024,624090 (regressionFit = 3.024,624089, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 32,0/319,0 pos, 0,0/0,0 neg]
%     Score = -3.018,425831 (regressionFit = 3.018,425830, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 35,0/319,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 9).  [covers 39,0/319,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 9).  [covers 39,0/319,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -9,484.
% Will extend: medv(A) :- nox(A, 9).  [covers 39,0/319,0 pos, 0,0/0,0 neg]
Comparing variance: 9.555741711138179 to score=0.0025 #egs=39.0
Comparing variance: 9.382825007742747 to score=0.0025 #egs=280.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 39,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-9,555742)
%         ILP node to extend: medv(A) :- nox(A, 9).  [covers 39,0/319,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -9,555742) into position #1 in the search queue (new size=4).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 280,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-9,382825)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 4 and with score = -9,382825) into position #2 in the search queue (new size=5).

% Time for loop #8: 90 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      medv(A) :- nox(A, 9).  [covers 39,0/319,0 pos, 0,0/0,0 neg]
% This clause covers 39 positive examples, of which 39 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (medv(A) :- nox(A, 9))
Created a leaf under (medv(A) :- nox(A, 9))
Created a leaf under (medv(A) :- rm(A, 4))
Created a leaf under (medv(A) :- nox(A, 10))
Created a leaf under (medv(A) :- zn(A, 0))

%%%%%  WILL-Produced Tree #8 @ 14:10:17 10/20/22.  %%%%%


% FOR medv(A):
%   if ( age(A, 4) )
%   then if ( rm(A, 4) )
%   | then return -4.751623750700851;  // std dev = 6,227, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.7267469514800278;  // std dev = 2,987, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else if ( rm(A, 1) )
%   | then if ( zn(A, 0) )
%   | | then if ( rad(A, 5) )
%   | | | then return 5.578345052909307;  // std dev = 4,021, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else if ( tax(A, 307) )
%   | | | | then return 4.511455407004291;  // std dev = 6,112, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 1.1591821044898274;  // std dev = 12,887, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.6112913525254072;  // std dev = 2,598, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( nox(A, 10) )
%   | | then return 0.8857066698804317;  // std dev = 2,894, 40,000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( nox(A, 9) )
%   | | | then return -0.8602047870643466;  // std dev = 3,091, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return 0.0023110860871838543;  // std dev = 3,063, 280,000 (wgt'ed) examples reached here.  /* #pos=280 */


% Clauses:

medv(A, -4.751623750700851) :- 
     age(A, 4), 
     rm(A, 4), 
     !. // Clause #1.

medv(A, -0.7267469514800278) :- 
     age(A, 4), 
     !. // Clause #2.

medv(A, 5.578345052909307) :- 
     rm(A, 1), 
     zn(A, 0), 
     rad(A, 5), 
     !. // Clause #3.

medv(A, 4.511455407004291) :- 
     rm(A, 1), 
     zn(A, 0), 
     tax(A, 307), 
     !. // Clause #4.

medv(A, 1.1591821044898274) :- 
     rm(A, 1), 
     zn(A, 0), 
     !. // Clause #5.

medv(A, -0.6112913525254072) :- 
     rm(A, 1), 
     !. // Clause #6.

medv(A, 0.8857066698804317) :- 
     nox(A, 10), 
     !. // Clause #7.

medv(A, -0.8602047870643466) :- 
     nox(A, 9), 
     !. // Clause #8.

medv(A, 0.0023110860871838543) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_medv(a, -4.751623750700851) :-  /* #pos=4 */ 
   age(a, 4),
   rm(a, 4),
   !. // Flattened version of clause #1.

flattened_medv(a, -0.7267469514800278) :-  /* #pos=33 */ 
   age(a, 4),
   !. // Flattened version of clause #2.

flattened_medv(a, 5.578345052909307) :-  /* #pos=4 */ 
   rm(a, 1),
   zn(a, 0),
   rad(a, 5),
   !. // Flattened version of clause #3.

flattened_medv(a, 4.511455407004291) :-  /* #pos=3 */ 
   rm(a, 1),
   zn(a, 0),
   tax(a, 307),
   !. // Flattened version of clause #4.

flattened_medv(a, 1.1591821044898274) :-  /* #pos=14 */ 
   rm(a, 1),
   zn(a, 0),
   !. // Flattened version of clause #5.

flattened_medv(a, -0.6112913525254072) :-  /* #pos=19 */ 
   rm(a, 1),
   !. // Flattened version of clause #6.

flattened_medv(a, 0.8857066698804317) :-  /* #pos=40 */ 
   nox(a, 10),
   !. // Flattened version of clause #7.

flattened_medv(a, -0.8602047870643466) :-  /* #pos=39 */ 
   nox(a, 9),
   !. // Flattened version of clause #8.

flattened_medv(underscore, 0.0023110860871838543) :-  /* #pos=280 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   nox(a, 10)
%   tax(a, 307)
%   rm(a, 4)
%   age(a, 4)
%   rm(a, 1)
%   nox(a, 9)
%   zn(a, 0)
%   rad(a, 5)

% Saving model in: data/boston_housing/train/models/bRDNs/medv.model.ckpt
% Time taken to learn 8 trees is 6,369 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:9.483797010398474
Set score:0.0025
% Kept 436 of the 436 positive examples.
% Kept 0 of the 0 negative examples.
% Dataset size: 436
Computing probabilities
prob time:134 milliseconds
No hidden examples for : medv
Time to build dataset: 139 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:9.210798805636653
Set score:0.0025

% Have these 4 positive seeds: 96 172 211 308

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -4.012,750127 (regressionFit = 4.012,750125, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.012,750127): medv(A) :- crim(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.006,494689 (regressionFit = 4.006,494688, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.006,494689): medv(A) :- crim(A, 5).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.015,626180 (regressionFit = 4.015,626179, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.005,532010 (regressionFit = 4.005,532009, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4.005,532010): medv(A) :- crim(A, 10).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.012,899937 (regressionFit = 4.012,899936, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 45).  [covers 6,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.008,619952 (regressionFit = 4.008,619951, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 20).  [covers 21,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.014,532520 (regressionFit = 4.014,532519, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 80).  [covers 14,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.010,734812 (regressionFit = 4.010,734811, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.012,623520 (regressionFit = 4.012,623519, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.015,048812 (regressionFit = 4.015,048811, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.015,699456 (regressionFit = 4.015,699455, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.008,704541 (regressionFit = 4.008,704540, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 401,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.014,285541 (regressionFit = 4.014,285540, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.015,866075 (regressionFit = 4.015,866074, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 36,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.015,300150 (regressionFit = 4.015,300149, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.015,879519 (regressionFit = 4.015,879518, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 10).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.012,300753 (regressionFit = 4.012,300752, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.995,708458 (regressionFit = 3.995,708457, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.995,708458): medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.009,769369 (regressionFit = 4.009,769368, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.015,746328 (regressionFit = 4.015,746327, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.014,053049 (regressionFit = 4.014,053048, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.989,848255 (regressionFit = 3.989,848254, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.989,848255): medv(A) :- age(A, 10).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.015,882823 (regressionFit = 4.015,882822, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.005,939267 (regressionFit = 4.005,939266, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.015,619113 (regressionFit = 4.015,619112, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.987,275987 (regressionFit = 3.987,275986, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.987,275987): medv(A) :- dis(A, 2).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.014,278628 (regressionFit = 4.014,278627, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.013,529228 (regressionFit = 4.013,529227, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.010,466258 (regressionFit = 4.010,466257, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 101,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.015,699456 (regressionFit = 4.015,699455, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.015,837559 (regressionFit = 4.015,837558, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 398).  [covers 12,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.007,387305 (regressionFit = 4.007,387303, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 264).  [covers 12,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.997,339815 (regressionFit = 3.997,339814, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 245).  [covers 3,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.015,699456 (regressionFit = 4.015,699455, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.011,226530 (regressionFit = 4.011,226529, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.014,271418 (regressionFit = 4.014,271417, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.014,716321 (regressionFit = 4.014,716320, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.015,807795 (regressionFit = 4.015,807794, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 97,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.015,878769 (regressionFit = 4.015,878768, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.009,968755 (regressionFit = 4.009,968754, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.003,809599 (regressionFit = 4.003,809598, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 102,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.009,964259 (regressionFit = 4.009,964258, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -4.006,970585 (regressionFit = 4.006,970584, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.975,460710 (regressionFit = 3.975,460709, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.975,460710): medv(A) :- lstat(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- lstat(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: medv(A) :- lstat(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
Comparing variance: 7.952221286205461 to score=0.0025 #egs=39.0
Comparing variance: 9.232554354989361 to score=0.0025 #egs=397.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 39,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-7,952221)
%         ILP node to extend: medv(A) :- lstat(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -7,952221) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 397,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-9,232554)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -9,232554) into position #1 in the search queue (new size=2).

% Time for loop #1: 125 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      medv(A) :- lstat(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
% This clause covers 39 positive examples, of which 39 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 11 59 114 190 211 216 245 275

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 397,0/397,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 397,0/397,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -3.665,238444 (regressionFit = 3.665,238443, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 46,0/397,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.665,238444): medv(A) :- crim(A, 3).  [covers 46,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.635,394846 (regressionFit = 3.635,394845, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 43,0/397,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.635,394846): medv(A) :- crim(A, 5).  [covers 43,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.664,274767 (regressionFit = 3.664,274766, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 43,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.665,291938 (regressionFit = 3.665,291937, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 49,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.664,203597 (regressionFit = 3.664,203596, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 51,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.660,927701 (regressionFit = 3.660,927700, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 30,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.649,844559 (regressionFit = 3.649,844558, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 271,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.655,364074 (regressionFit = 3.655,364073, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 20).  [covers 21,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.663,216156 (regressionFit = 3.663,216155, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 34).  [covers 3,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.665,316238 (regressionFit = 3.665,316237, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 33).  [covers 4,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.664,668296 (regressionFit = 3.664,668295, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 39,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.662,492230 (regressionFit = 3.662,492229, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 28,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.664,123897 (regressionFit = 3.664,123896, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 34,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.664,091930 (regressionFit = 3.664,091929, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 49,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.616,744135 (regressionFit = 3.616,744134, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 49,0/397,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.616,744135): medv(A) :- indus(A, 2).  [covers 49,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.663,431803 (regressionFit = 3.663,431802, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 48,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.663,378782 (regressionFit = 3.663,378781, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 67,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.661,209913 (regressionFit = 3.661,209912, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 364,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.661,209913 (regressionFit = 3.661,209912, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 33,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.665,166238 (regressionFit = 3.665,166237, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 39,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.660,960767 (regressionFit = 3.660,960766, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 28,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.652,337408 (regressionFit = 3.652,337407, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 47,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.664,904298 (regressionFit = 3.664,904297, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 47,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.664,720410 (regressionFit = 3.664,720409, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 49,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.661,495424 (regressionFit = 3.661,495423, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 36,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.663,291435 (regressionFit = 3.663,291434, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 37,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.663,502004 (regressionFit = 3.663,502003, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 42,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.661,400240 (regressionFit = 3.661,400239, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 36,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.637,998415 (regressionFit = 3.637,998414, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 48,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.658,599539 (regressionFit = 3.658,599538, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 41,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.663,173591 (regressionFit = 3.663,173590, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 43,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.652,659543 (regressionFit = 3.652,659542, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 33,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.664,128613 (regressionFit = 3.664,128612, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 46,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.665,182470 (regressionFit = 3.665,182469, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 35,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.650,808435 (regressionFit = 3.650,808434, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 36,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.665,014582 (regressionFit = 3.665,014581, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 31,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.662,151573 (regressionFit = 3.662,151572, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 32,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.659,293904 (regressionFit = 3.659,293903, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 45,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.643,578103 (regressionFit = 3.643,578102, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 50,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.665,218292 (regressionFit = 3.665,218291, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 108,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.647,486876 (regressionFit = 3.647,486875, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 92,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.659,242134 (regressionFit = 3.659,242133, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 15,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.658,488263 (regressionFit = 3.658,488262, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 23,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.663,378782 (regressionFit = 3.663,378781, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 67,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.665,213276 (regressionFit = 3.665,213275, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 384).  [covers 10,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.662,492230 (regressionFit = 3.662,492229, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 28,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.660,603086 (regressionFit = 3.660,603085, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 277).  [covers 10,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.654,318323 (regressionFit = 3.654,318322, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 216).  [covers 4,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.662,785712 (regressionFit = 3.662,785711, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 329).  [covers 6,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.665,291396 (regressionFit = 3.665,291395, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 222).  [covers 7,0/397,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 242).  [covers 2,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.663,378782 (regressionFit = 3.663,378781, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 67,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.664,534763 (regressionFit = 3.664,534762, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 26,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.664,880121 (regressionFit = 3.664,880120, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 49,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.664,865366 (regressionFit = 3.664,865365, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 49,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.664,516727 (regressionFit = 3.664,516726, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 43,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.662,046210 (regressionFit = 3.662,046209, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 46,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.660,881153 (regressionFit = 3.660,881152, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 74,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.663,266535 (regressionFit = 3.663,266534, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 37,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.644,698321 (regressionFit = 3.644,698320, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 38,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.665,259102 (regressionFit = 3.665,259101, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 43,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.664,863880 (regressionFit = 3.664,863879, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 43,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.658,238728 (regressionFit = 3.658,238727, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 26,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.661,409948 (regressionFit = 3.661,409947, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 90,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.661,089570 (regressionFit = 3.661,089569, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 42,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.664,164982 (regressionFit = 3.664,164981, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 51,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.664,945899 (regressionFit = 3.664,945898, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 38,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.656,120676 (regressionFit = 3.656,120675, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.662,213460 (regressionFit = 3.662,213459, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 46,0/397,0 pos, 0,0/0,0 neg]
%     Score = -3.660,058800 (regressionFit = 3.660,058799, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 49,0/397,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- indus(A, 2).  [covers 49,0/397,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- indus(A, 2).  [covers 49,0/397,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -9,233.
% Will extend: medv(A) :- indus(A, 2).  [covers 49,0/397,0 pos, 0,0/0,0 neg]
Comparing variance: 11.030075896109102 to score=0.0025 #egs=49.0
Comparing variance: 8.839857515935119 to score=0.0025 #egs=348.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 49,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-11,030076)
%         ILP node to extend: medv(A) :- indus(A, 2).  [covers 49,0/397,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -11,030076) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 348,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-8,839858)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -8,839858) into position #2 in the search queue (new size=3).

% Time for loop #2: 180 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      medv(A) :- indus(A, 2).  [covers 49,0/397,0 pos, 0,0/0,0 neg]
% This clause covers 49 positive examples, of which 49 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- indus(A, 2).  [covers 49,0/49,0 pos, 0,0/0,0 neg]'
%     Score = -3.616,744135 (regressionFit = 3.616,744134, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 49,0/49,0 pos, 0,0/0,0 neg]

% Have these 7 positive seeds: 1 3 7 11 22 29 32
% Gleaner: New best node found (score = -3.616,744135): medv(A) :- indus(A, 2).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%     Score = -481,451886 (regressionFit = 481,451884, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), crim(A, 1).  [covers 4,0/49,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -481,451886): medv(A) :- indus(A, 2), crim(A, 1).  [covers 4,0/49,0 pos, 0,0/0,0 neg]
%     Score = -538,956948 (regressionFit = 538,956946, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), crim(A, 5).  [covers 3,0/49,0 pos, 0,0/0,0 neg]
%     Score = -540,057220 (regressionFit = 540,057218, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), crim(A, 7).  [covers 15,0/49,0 pos, 0,0/0,0 neg]
%     Score = -520,081041 (regressionFit = 520,081039, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), crim(A, 4).  [covers 8,0/49,0 pos, 0,0/0,0 neg]
%     Score = -540,126785 (regressionFit = 540,126783, penalties=2.0300000000000005E-6) for clause:  medv(A) :- indus(A, 2), crim(A, 2).  [covers 7,0/49,0 pos, 0,0/0,0 neg]
%     Score = -539,987918 (regressionFit = 539,987916, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), zn(A, 0).  [covers 31,0/49,0 pos, 0,0/0,0 neg]
%     Score = -535,131339 (regressionFit = 535,131337, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), zn(A, 20).  [covers 5,0/49,0 pos, 0,0/0,0 neg]
%     Score = -540,443548 (regressionFit = 540,443546, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), zn(A, 34).  [covers 3,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), zn(A, 35).  [covers 2,0/49,0 pos, 0,0/0,0 neg]
%     Score = -540,472802 (regressionFit = 540,472800, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), chas(A, 0).  [covers 40,0/49,0 pos, 0,0/0,0 neg]
%     Score = -540,472802 (regressionFit = 540,472800, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), chas(A, 1).  [covers 9,0/49,0 pos, 0,0/0,0 neg]
%     Score = -528,408418 (regressionFit = 528,408416, penalties=2.0300000000000005E-6) for clause:  medv(A) :- indus(A, 2), nox(A, 2).  [covers 20,0/49,0 pos, 0,0/0,0 neg]
%     Score = -537,093135 (regressionFit = 537,093133, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), nox(A, 3).  [covers 9,0/49,0 pos, 0,0/0,0 neg]
%     Score = -528,135178 (regressionFit = 528,135176, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), nox(A, 4).  [covers 12,0/49,0 pos, 0,0/0,0 neg]
%     Score = -537,797249 (regressionFit = 537,797247, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), nox(A, 5).  [covers 5,0/49,0 pos, 0,0/0,0 neg]
%     Score = -531,319081 (regressionFit = 531,319079, penalties=2.0300000000000005E-6) for clause:  medv(A) :- indus(A, 2), rm(A, 2).  [covers 3,0/49,0 pos, 0,0/0,0 neg]
%     Score = -508,973742 (regressionFit = 508,973740, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rm(A, 1).  [covers 6,0/49,0 pos, 0,0/0,0 neg]
%     Score = -539,413924 (regressionFit = 539,413922, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rm(A, 3).  [covers 12,0/49,0 pos, 0,0/0,0 neg]
%     Score = -520,608601 (regressionFit = 520,608598, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rm(A, 5).  [covers 5,0/49,0 pos, 0,0/0,0 neg]
%     Score = -539,541488 (regressionFit = 539,541486, penalties=2.0300000000000005E-6) for clause:  medv(A) :- indus(A, 2), age(A, 2).  [covers 6,0/49,0 pos, 0,0/0,0 neg]
%     Score = -537,475173 (regressionFit = 537,475171, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), age(A, 4).  [covers 8,0/49,0 pos, 0,0/0,0 neg]
%     Score = -537,731333 (regressionFit = 537,731331, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), age(A, 3).  [covers 7,0/49,0 pos, 0,0/0,0 neg]
%     Score = -535,388657 (regressionFit = 535,388655, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), age(A, 10).  [covers 10,0/49,0 pos, 0,0/0,0 neg]
%     Score = -538,122084 (regressionFit = 538,122082, penalties=2.0300000000000005E-6) for clause:  medv(A) :- indus(A, 2), dis(A, 2).  [covers 9,0/49,0 pos, 0,0/0,0 neg]
%     Score = -540,470542 (regressionFit = 540,470540, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), dis(A, 4).  [covers 15,0/49,0 pos, 0,0/0,0 neg]
%     Score = -537,222838 (regressionFit = 537,222836, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), dis(A, 1).  [covers 11,0/49,0 pos, 0,0/0,0 neg]
%     Score = -540,431325 (regressionFit = 540,431323, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), dis(A, 3).  [covers 11,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- indus(A, 2), rad(A, 2).  [covers 2,0/49,0 pos, 0,0/0,0 neg]
%     Score = -540,175144 (regressionFit = 540,175142, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rad(A, 8).  [covers 17,0/49,0 pos, 0,0/0,0 neg]
%     Score = -537,553694 (regressionFit = 537,553692, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rad(A, 3).  [covers 13,0/49,0 pos, 0,0/0,0 neg]
%     Score = -540,443548 (regressionFit = 540,443546, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rad(A, 7).  [covers 3,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rad(A, 1).  [covers 2,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), tax(A, 242).  [covers 2,0/49,0 pos, 0,0/0,0 neg]
%     Score = -540,175144 (regressionFit = 540,175142, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), tax(A, 307).  [covers 17,0/49,0 pos, 0,0/0,0 neg]
%     Score = -535,131339 (regressionFit = 535,131337, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), tax(A, 223).  [covers 5,0/49,0 pos, 0,0/0,0 neg]
%     Score = -540,443548 (regressionFit = 540,443546, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), tax(A, 329).  [covers 3,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), tax(A, 304).  [covers 2,0/49,0 pos, 0,0/0,0 neg]
%     Score = -513,201227 (regressionFit = 513,201225, penalties=2.0300000000000005E-6) for clause:  medv(A) :- indus(A, 2), ptratio(A, 2).  [covers 15,0/49,0 pos, 0,0/0,0 neg]
%     Score = -540,151059 (regressionFit = 540,151057, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), ptratio(A, 6).  [covers 19,0/49,0 pos, 0,0/0,0 neg]
%     Score = -535,131339 (regressionFit = 535,131337, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), ptratio(A, 3).  [covers 5,0/49,0 pos, 0,0/0,0 neg]
%     Score = -540,443548 (regressionFit = 540,443546, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), ptratio(A, 1).  [covers 3,0/49,0 pos, 0,0/0,0 neg]
%     Score = -537,422738 (regressionFit = 537,422736, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), b(A, 1).  [covers 14,0/49,0 pos, 0,0/0,0 neg]
%     Score = -530,452050 (regressionFit = 530,452048, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), b(A, 8).  [covers 7,0/49,0 pos, 0,0/0,0 neg]
%     Score = -537,025208 (regressionFit = 537,025206, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), b(A, 6).  [covers 9,0/49,0 pos, 0,0/0,0 neg]
%     Score = -540,181786 (regressionFit = 540,181784, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), b(A, 5).  [covers 8,0/49,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), b(A, 9).  [covers 2,0/49,0 pos, 0,0/0,0 neg]
%     Score = -510,570160 (regressionFit = 510,570158, penalties=2.0300000000000005E-6) for clause:  medv(A) :- indus(A, 2), lstat(A, 2).  [covers 8,0/49,0 pos, 0,0/0,0 neg]
%     Score = -539,171307 (regressionFit = 539,171305, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), lstat(A, 9).  [covers 7,0/49,0 pos, 0,0/0,0 neg]
%     Score = -527,550628 (regressionFit = 527,550626, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), lstat(A, 1).  [covers 6,0/49,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- indus(A, 2), crim(A, 1).  [covers 4,0/49,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- indus(A, 2), crim(A, 1).  [covers 4,0/49,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -11,030.
% Will extend: medv(A) :- indus(A, 2), crim(A, 1).  [covers 4,0/49,0 pos, 0,0/0,0 neg]
Comparing variance: 10.901077200267366 to score=0.0025 #egs=4.0
Comparing variance: 9.72994611394536 to score=0.0025 #egs=45.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 4,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 45,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-9,729946)
%         ILP node to extend: medv(A) :- indus(A, 2).  [covers 49,0/49,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -9,729946) into position #1 in the search queue (new size=3).

% Time for loop #3: 44 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      medv(A) :- indus(A, 2), crim(A, 1).  [covers 4,0/49,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- indus(A, 2).  [covers 49,0/45,0 pos, 0,0/0,0 neg]'
%     Score = -3.616,744135 (regressionFit = 3.616,744134, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 45,0/45,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 0 6 9 13 16 26 27 41
% Gleaner: New best node found (score = -3.616,744135): medv(A) :- indus(A, 2).  [covers 45,0/45,0 pos, 0,0/0,0 neg]
%     Score = -432,961176 (regressionFit = 432,961174, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), crim(A, 7).  [covers 15,0/45,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -432,961176): medv(A) :- indus(A, 2), crim(A, 7).  [covers 15,0/45,0 pos, 0,0/0,0 neg]
%     Score = -437,726005 (regressionFit = 437,726003, penalties=2.0300000000000005E-6) for clause:  medv(A) :- indus(A, 2), crim(A, 2).  [covers 7,0/45,0 pos, 0,0/0,0 neg]
%     Score = -425,352477 (regressionFit = 425,352475, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), crim(A, 4).  [covers 8,0/45,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -425,352477): medv(A) :- indus(A, 2), crim(A, 4).  [covers 8,0/45,0 pos, 0,0/0,0 neg]
%     Score = -435,518447 (regressionFit = 435,518445, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), zn(A, 0).  [covers 29,0/45,0 pos, 0,0/0,0 neg]
%     Score = -405,587586 (regressionFit = 405,587583, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), zn(A, 40).  [covers 5,0/45,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -405,587586): medv(A) :- indus(A, 2), zn(A, 40).  [covers 5,0/45,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), zn(A, 34).  [covers 2,0/45,0 pos, 0,0/0,0 neg]
%     Score = -436,709330 (regressionFit = 436,709328, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), chas(A, 1).  [covers 9,0/45,0 pos, 0,0/0,0 neg]
%     Score = -436,709330 (regressionFit = 436,709328, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), chas(A, 0).  [covers 36,0/45,0 pos, 0,0/0,0 neg]
%     Score = -437,270290 (regressionFit = 437,270288, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), nox(A, 3).  [covers 9,0/45,0 pos, 0,0/0,0 neg]
%     Score = -413,954772 (regressionFit = 413,954770, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), nox(A, 4).  [covers 12,0/45,0 pos, 0,0/0,0 neg]
%     Score = -422,196330 (regressionFit = 422,196328, penalties=2.0300000000000005E-6) for clause:  medv(A) :- indus(A, 2), nox(A, 2).  [covers 18,0/45,0 pos, 0,0/0,0 neg]
%     Score = -433,873455 (regressionFit = 433,873453, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), nox(A, 5).  [covers 3,0/45,0 pos, 0,0/0,0 neg]
%     Score = -423,866372 (regressionFit = 423,866370, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rm(A, 4).  [covers 7,0/45,0 pos, 0,0/0,0 neg]
%     Score = -437,605569 (regressionFit = 437,605566, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rm(A, 3).  [covers 11,0/45,0 pos, 0,0/0,0 neg]
%     Score = -400,471476 (regressionFit = 400,471473, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rm(A, 5).  [covers 4,0/45,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -400,471476): medv(A) :- indus(A, 2), rm(A, 5).  [covers 4,0/45,0 pos, 0,0/0,0 neg]
%     Score = -414,132025 (regressionFit = 414,132023, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rm(A, 1).  [covers 5,0/45,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- indus(A, 2), rm(A, 2).  [covers 2,0/45,0 pos, 0,0/0,0 neg]
%     Score = -433,950681 (regressionFit = 433,950679, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rm(A, 7).  [covers 5,0/45,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), age(A, 9).  [covers 2,0/45,0 pos, 0,0/0,0 neg]
%     Score = -437,767560 (regressionFit = 437,767558, penalties=2.0300000000000005E-6) for clause:  medv(A) :- indus(A, 2), age(A, 2).  [covers 5,0/45,0 pos, 0,0/0,0 neg]
%     Score = -430,188466 (regressionFit = 430,188464, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), age(A, 4).  [covers 8,0/45,0 pos, 0,0/0,0 neg]
%     Score = -427,693685 (regressionFit = 427,693683, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), age(A, 8).  [covers 9,0/45,0 pos, 0,0/0,0 neg]
%     Score = -431,133440 (regressionFit = 431,133438, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), age(A, 10).  [covers 9,0/45,0 pos, 0,0/0,0 neg]
%     Score = -435,688295 (regressionFit = 435,688293, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), age(A, 1).  [covers 5,0/45,0 pos, 0,0/0,0 neg]
%     Score = -437,551079 (regressionFit = 437,551077, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), dis(A, 6).  [covers 3,0/45,0 pos, 0,0/0,0 neg]
%     Score = -435,256663 (regressionFit = 435,256661, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), dis(A, 4).  [covers 15,0/45,0 pos, 0,0/0,0 neg]
%     Score = -428,390760 (regressionFit = 428,390758, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), dis(A, 1).  [covers 11,0/45,0 pos, 0,0/0,0 neg]
%     Score = -403,409330 (regressionFit = 403,409328, penalties=2.0300000000000005E-6) for clause:  medv(A) :- indus(A, 2), dis(A, 2).  [covers 6,0/45,0 pos, 0,0/0,0 neg]
%     Score = -437,832923 (regressionFit = 437,832921, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), dis(A, 3).  [covers 10,0/45,0 pos, 0,0/0,0 neg]
%     Score = -436,523822 (regressionFit = 436,523820, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rad(A, 8).  [covers 17,0/45,0 pos, 0,0/0,0 neg]
%     Score = -427,876904 (regressionFit = 427,876902, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rad(A, 4).  [covers 8,0/45,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rad(A, 7).  [covers 2,0/45,0 pos, 0,0/0,0 neg]
%     Score = -437,733430 (regressionFit = 437,733428, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rad(A, 3).  [covers 13,0/45,0 pos, 0,0/0,0 neg]
%     Score = -436,523822 (regressionFit = 436,523820, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), tax(A, 307).  [covers 17,0/45,0 pos, 0,0/0,0 neg]
%     Score = -405,587586 (regressionFit = 405,587583, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), tax(A, 254).  [covers 5,0/45,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), tax(A, 329).  [covers 2,0/45,0 pos, 0,0/0,0 neg]
%     Score = -429,156652 (regressionFit = 429,156650, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), tax(A, 233).  [covers 8,0/45,0 pos, 0,0/0,0 neg]
%     Score = -436,142453 (regressionFit = 436,142451, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), ptratio(A, 6).  [covers 18,0/45,0 pos, 0,0/0,0 neg]
%     Score = -396,567276 (regressionFit = 396,567274, penalties=2.0300000000000005E-6) for clause:  medv(A) :- indus(A, 2), ptratio(A, 2).  [covers 13,0/45,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -396,567276): medv(A) :- indus(A, 2), ptratio(A, 2).  [covers 13,0/45,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), ptratio(A, 1).  [covers 2,0/45,0 pos, 0,0/0,0 neg]
%     Score = -433,082295 (regressionFit = 433,082293, penalties=2.0300000000000005E-6) for clause:  medv(A) :- indus(A, 2), b(A, 2).  [covers 3,0/45,0 pos, 0,0/0,0 neg]
%     Score = -432,797135 (regressionFit = 432,797133, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), b(A, 8).  [covers 7,0/45,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), b(A, 9).  [covers 1,0/45,0 pos, 0,0/0,0 neg]
%     Score = -437,241731 (regressionFit = 437,241729, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), b(A, 6).  [covers 9,0/45,0 pos, 0,0/0,0 neg]
%     Score = -437,846621 (regressionFit = 437,846619, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), b(A, 1).  [covers 13,0/45,0 pos, 0,0/0,0 neg]
%     Score = -435,396097 (regressionFit = 435,396095, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), b(A, 5).  [covers 8,0/45,0 pos, 0,0/0,0 neg]
%     Score = -437,547629 (regressionFit = 437,547627, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), lstat(A, 8).  [covers 8,0/45,0 pos, 0,0/0,0 neg]
%     Score = -437,804444 (regressionFit = 437,804442, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), lstat(A, 9).  [covers 7,0/45,0 pos, 0,0/0,0 neg]
%     Score = -434,626600 (regressionFit = 434,626598, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), lstat(A, 4).  [covers 5,0/45,0 pos, 0,0/0,0 neg]
%     Score = -418,902533 (regressionFit = 418,902531, penalties=2.0300000000000005E-6) for clause:  medv(A) :- indus(A, 2), lstat(A, 2).  [covers 5,0/45,0 pos, 0,0/0,0 neg]
%     Score = -430,249746 (regressionFit = 430,249744, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), lstat(A, 1).  [covers 6,0/45,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), lstat(A, 7).  [covers 1,0/45,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- indus(A, 2), ptratio(A, 2).  [covers 13,0/45,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- indus(A, 2), ptratio(A, 2).  [covers 13,0/45,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -9,730.
% Will extend: medv(A) :- indus(A, 2), ptratio(A, 2).  [covers 13,0/45,0 pos, 0,0/0,0 neg]
Comparing variance: 1.8691167276749239 to score=0.0025 #egs=13.0
Comparing variance: 11.633398648740771 to score=0.0025 #egs=32.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 13,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-1,869117)
%         ILP node to extend: medv(A) :- indus(A, 2), ptratio(A, 2).  [covers 13,0/45,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -1,869117) into the LAST position (#3) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 32,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-11,633399)
%         ILP node to extend: medv(A) :- indus(A, 2).  [covers 45,0/45,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -11,633399) into position #1 in the search queue (new size=4).

% Time for loop #4: 44 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      medv(A) :- indus(A, 2), ptratio(A, 2).  [covers 13,0/45,0 pos, 0,0/0,0 neg]
% This clause covers 13 positive examples, of which 13 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- indus(A, 2).  [covers 45,0/32,0 pos, 0,0/0,0 neg]'
%     Score = -3.616,744135 (regressionFit = 3.616,744134, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 32,0/32,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 13 16 18 21 25 26 27 28
% Gleaner: New best node found (score = -3.616,744135): medv(A) :- indus(A, 2).  [covers 32,0/32,0 pos, 0,0/0,0 neg]
%     Score = -371,679624 (regressionFit = 371,679622, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), crim(A, 7).  [covers 15,0/32,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -371,679624): medv(A) :- indus(A, 2), crim(A, 7).  [covers 15,0/32,0 pos, 0,0/0,0 neg]
%     Score = -363,008114 (regressionFit = 363,008112, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), crim(A, 4).  [covers 3,0/32,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -363,008114): medv(A) :- indus(A, 2), crim(A, 4).  [covers 3,0/32,0 pos, 0,0/0,0 neg]
%     Score = -366,776656 (regressionFit = 366,776654, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), crim(A, 6).  [covers 3,0/32,0 pos, 0,0/0,0 neg]
%     Score = -371,623463 (regressionFit = 371,623461, penalties=2.0300000000000005E-6) for clause:  medv(A) :- indus(A, 2), crim(A, 2).  [covers 5,0/32,0 pos, 0,0/0,0 neg]
%     Score = -372,250974 (regressionFit = 372,250972, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), zn(A, 0).  [covers 21,0/32,0 pos, 0,0/0,0 neg]
%     Score = -369,395985 (regressionFit = 369,395983, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), zn(A, 20).  [covers 5,0/32,0 pos, 0,0/0,0 neg]
%     Score = -361,279187 (regressionFit = 361,279185, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), chas(A, 1).  [covers 6,0/32,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -361,279187): medv(A) :- indus(A, 2), chas(A, 1).  [covers 6,0/32,0 pos, 0,0/0,0 neg]
%     Score = -361,279187 (regressionFit = 361,279185, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), chas(A, 0).  [covers 26,0/32,0 pos, 0,0/0,0 neg]
%     Score = -363,496555 (regressionFit = 363,496553, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), nox(A, 3).  [covers 9,0/32,0 pos, 0,0/0,0 neg]
%     Score = -369,395985 (regressionFit = 369,395983, penalties=2.0300000000000005E-6) for clause:  medv(A) :- indus(A, 2), nox(A, 2).  [covers 5,0/32,0 pos, 0,0/0,0 neg]
%     Score = -365,405379 (regressionFit = 365,405377, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), nox(A, 4).  [covers 12,0/32,0 pos, 0,0/0,0 neg]
%     Score = -359,932115 (regressionFit = 359,932113, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rm(A, 1).  [covers 5,0/32,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -359,932115): medv(A) :- indus(A, 2), rm(A, 1).  [covers 5,0/32,0 pos, 0,0/0,0 neg]
%     Score = -369,584700 (regressionFit = 369,584698, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rm(A, 3).  [covers 10,0/32,0 pos, 0,0/0,0 neg]
%     Score = -336,497195 (regressionFit = 336,497193, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rm(A, 8).  [covers 7,0/32,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -336,497195): medv(A) :- indus(A, 2), rm(A, 8).  [covers 7,0/32,0 pos, 0,0/0,0 neg]
%     Score = -327,713859 (regressionFit = 327,713857, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rm(A, 5).  [covers 3,0/32,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -327,713859): medv(A) :- indus(A, 2), rm(A, 5).  [covers 3,0/32,0 pos, 0,0/0,0 neg]
%     Score = -371,451682 (regressionFit = 371,451680, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), age(A, 4).  [covers 8,0/32,0 pos, 0,0/0,0 neg]
%     Score = -372,060333 (regressionFit = 372,060331, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), age(A, 3).  [covers 3,0/32,0 pos, 0,0/0,0 neg]
%     Score = -370,956892 (regressionFit = 370,956890, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), age(A, 1).  [covers 4,0/32,0 pos, 0,0/0,0 neg]
%     Score = -372,206201 (regressionFit = 372,206199, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), age(A, 8).  [covers 4,0/32,0 pos, 0,0/0,0 neg]
%     Score = -370,193196 (regressionFit = 370,193194, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), dis(A, 4).  [covers 15,0/32,0 pos, 0,0/0,0 neg]
%     Score = -355,826512 (regressionFit = 355,826510, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), dis(A, 1).  [covers 8,0/32,0 pos, 0,0/0,0 neg]
%     Score = -366,742685 (regressionFit = 366,742683, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rad(A, 8).  [covers 17,0/32,0 pos, 0,0/0,0 neg]
%     Score = -369,395985 (regressionFit = 369,395983, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rad(A, 3).  [covers 5,0/32,0 pos, 0,0/0,0 neg]
%     Score = -361,009088 (regressionFit = 361,009086, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), rad(A, 5).  [covers 4,0/32,0 pos, 0,0/0,0 neg]
%     Score = -366,742685 (regressionFit = 366,742683, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), tax(A, 307).  [covers 17,0/32,0 pos, 0,0/0,0 neg]
%     Score = -369,395985 (regressionFit = 369,395983, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), tax(A, 223).  [covers 5,0/32,0 pos, 0,0/0,0 neg]
%     Score = -361,009088 (regressionFit = 361,009086, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), tax(A, 279).  [covers 4,0/32,0 pos, 0,0/0,0 neg]
%     Score = -366,573397 (regressionFit = 366,573394, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), ptratio(A, 6).  [covers 18,0/32,0 pos, 0,0/0,0 neg]
%     Score = -369,395985 (regressionFit = 369,395983, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), ptratio(A, 3).  [covers 5,0/32,0 pos, 0,0/0,0 neg]
%     Score = -359,605341 (regressionFit = 359,605339, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), ptratio(A, 5).  [covers 7,0/32,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), b(A, 9).  [covers 1,0/32,0 pos, 0,0/0,0 neg]
%     Score = -372,194288 (regressionFit = 372,194286, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), b(A, 6).  [covers 7,0/32,0 pos, 0,0/0,0 neg]
%     Score = -365,808158 (regressionFit = 365,808156, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), b(A, 1).  [covers 6,0/32,0 pos, 0,0/0,0 neg]
%     Score = -354,931791 (regressionFit = 354,931789, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), b(A, 8).  [covers 7,0/32,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- indus(A, 2), b(A, 2).  [covers 2,0/32,0 pos, 0,0/0,0 neg]
%     Score = -363,379843 (regressionFit = 363,379841, penalties=2.0300000000000005E-6) for clause:  medv(A) :- indus(A, 2), lstat(A, 2).  [covers 5,0/32,0 pos, 0,0/0,0 neg]
%     Score = -360,297777 (regressionFit = 360,297775, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), lstat(A, 1).  [covers 3,0/32,0 pos, 0,0/0,0 neg]
%     Score = -372,142011 (regressionFit = 372,142009, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), lstat(A, 4).  [covers 5,0/32,0 pos, 0,0/0,0 neg]
%     Score = -372,001143 (regressionFit = 372,001141, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), lstat(A, 9).  [covers 5,0/32,0 pos, 0,0/0,0 neg]
%     Score = -371,727048 (regressionFit = 371,727046, penalties=2.0500000000000003E-6) for clause:  medv(A) :- indus(A, 2), lstat(A, 8).  [covers 6,0/32,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- indus(A, 2), rm(A, 5).  [covers 3,0/32,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- indus(A, 2), rm(A, 5).  [covers 3,0/32,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -11,633.
% Will extend: medv(A) :- indus(A, 2), rm(A, 5).  [covers 3,0/32,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #5: 28 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #5, the best clause found is:
%      medv(A) :- indus(A, 2), rm(A, 5).  [covers 3,0/32,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 28 49 83 93 126 159 160 237

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 348,0/348,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 348,0/348,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -3.074,204146 (regressionFit = 3.074,204145, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 29,0/348,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.074,204146): medv(A) :- crim(A, 4).  [covers 29,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.068,084918 (regressionFit = 3.068,084917, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 30,0/348,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.068,084918): medv(A) :- crim(A, 8).  [covers 30,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.075,216573 (regressionFit = 3.075,216572, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 44,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.072,969910 (regressionFit = 3.072,969909, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 45,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.051,929598 (regressionFit = 3.051,929597, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 40,0/348,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.051,929598): medv(A) :- crim(A, 5).  [covers 40,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.058,641029 (regressionFit = 3.058,641028, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 240,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.074,884358 (regressionFit = 3.074,884357, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 45).  [covers 6,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.041,575252 (regressionFit = 3.041,575250, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 30).  [covers 6,0/348,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.041,575252): medv(A) :- zn(A, 30).  [covers 6,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.073,402745 (regressionFit = 3.073,402744, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 20).  [covers 16,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.065,300112 (regressionFit = 3.065,300111, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 19,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.075,334274 (regressionFit = 3.075,334273, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 28,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.070,660211 (regressionFit = 3.070,660210, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 48,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.076,253538 (regressionFit = 3.076,253537, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 49,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.076,002102 (regressionFit = 3.076,002101, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 47,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.073,427760 (regressionFit = 3.073,427759, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 39,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.076,222266 (regressionFit = 3.076,222265, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 67,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.064,358397 (regressionFit = 3.064,358396, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 324,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.074,377658 (regressionFit = 3.074,377657, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 28,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.074,973539 (regressionFit = 3.074,973538, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 36,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.075,114986 (regressionFit = 3.075,114985, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 35,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.074,828678 (regressionFit = 3.074,828677, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 44,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.076,228601 (regressionFit = 3.076,228600, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 27,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.073,289154 (regressionFit = 3.073,289153, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 41,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.076,052353 (regressionFit = 3.076,052352, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 31,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.075,472981 (regressionFit = 3.075,472980, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 38,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.057,830001 (regressionFit = 3.057,830000, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 36,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.075,887973 (regressionFit = 3.075,887972, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 36,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.072,878880 (regressionFit = 3.072,878879, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 36,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.073,343174 (regressionFit = 3.073,343173, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 37,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.057,136596 (regressionFit = 3.057,136595, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 33,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.058,034895 (regressionFit = 3.058,034894, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 30,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.073,596438 (regressionFit = 3.073,596437, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 39,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.055,483159 (regressionFit = 3.055,483158, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 39,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.076,224331 (regressionFit = 3.076,224330, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 37,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.076,269361 (regressionFit = 3.076,269360, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 36,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.070,709024 (regressionFit = 3.070,709023, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 42,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.076,268822 (regressionFit = 3.076,268821, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 28,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.051,916214 (regressionFit = 3.051,916213, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 41,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.065,243676 (regressionFit = 3.065,243675, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 36,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.075,623906 (regressionFit = 3.075,623905, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 34,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.071,054642 (regressionFit = 3.071,054641, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 7).  [covers 28,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.074,371319 (regressionFit = 3.074,371318, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 2).  [covers 21,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.075,871167 (regressionFit = 3.075,871166, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 104,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.063,365845 (regressionFit = 3.063,365844, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 23,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.053,586872 (regressionFit = 3.053,586871, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 18,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.069,202558 (regressionFit = 3.069,202557, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 84,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.076,222266 (regressionFit = 3.076,222265, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 67,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.073,696306 (regressionFit = 3.073,696305, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 188).  [covers 7,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.075,334274 (regressionFit = 3.075,334273, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 28,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.075,170880 (regressionFit = 3.075,170879, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 193).  [covers 8,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.075,986950 (regressionFit = 3.075,986949, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 398).  [covers 12,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.039,330858 (regressionFit = 3.039,330857, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 300).  [covers 7,0/348,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.039,330858): medv(A) :- tax(A, 300).  [covers 7,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.066,932352 (regressionFit = 3.066,932351, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 216).  [covers 4,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.076,169718 (regressionFit = 3.076,169717, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 16,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.076,222266 (regressionFit = 3.076,222265, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 67,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.067,424261 (regressionFit = 3.067,424260, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 34,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.076,169123 (regressionFit = 3.076,169122, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 49,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.064,176993 (regressionFit = 3.064,176991, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 31,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.076,046028 (regressionFit = 3.076,046027, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 40,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.074,683952 (regressionFit = 3.074,683951, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 28,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.076,231591 (regressionFit = 3.076,231590, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 26,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.075,513296 (regressionFit = 3.075,513295, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 74,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.076,041719 (regressionFit = 3.076,041718, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 35,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.075,283561 (regressionFit = 3.075,283560, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 33,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.063,308016 (regressionFit = 3.063,308015, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 24,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.072,944134 (regressionFit = 3.072,944133, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 76,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.061,072075 (regressionFit = 3.061,072074, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 36,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.074,902757 (regressionFit = 3.074,902756, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 36,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.074,224030 (regressionFit = 3.074,224029, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 43,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.073,463794 (regressionFit = 3.073,463793, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 39,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.075,065492 (regressionFit = 3.075,065491, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 43,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.074,022600 (regressionFit = 3.074,022599, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 40,0/348,0 pos, 0,0/0,0 neg]
%     Score = -3.076,212230 (regressionFit = 3.076,212229, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 37,0/348,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- tax(A, 300).  [covers 7,0/348,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- tax(A, 300).  [covers 7,0/348,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -8,840.
% Will extend: medv(A) :- tax(A, 300).  [covers 7,0/348,0 pos, 0,0/0,0 neg]
Comparing variance: 7.264848040610395 to score=0.0025 #egs=7.0
Comparing variance: 8.76386193755548 to score=0.0025 #egs=341.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 7,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-7,264848)
%         ILP node to extend: medv(A) :- tax(A, 300).  [covers 7,0/348,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -7,264848) into position #2 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 341,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-8,763862)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -8,763862) into position #1 in the search queue (new size=4).

% Time for loop #6: 132 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      medv(A) :- tax(A, 300).  [covers 7,0/348,0 pos, 0,0/0,0 neg]
% This clause covers 7 positive examples, of which 7 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 39 51 58 115 124 126 141 148

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 341,0/341,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 341,0/341,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -2.980,273034 (regressionFit = 2.980,273033, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 28,0/341,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.980,273034): medv(A) :- crim(A, 7).  [covers 28,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.967,077064 (regressionFit = 2.967,077063, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 40,0/341,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.967,077064): medv(A) :- crim(A, 5).  [covers 40,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.978,670452 (regressionFit = 2.978,670451, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 30,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.985,581490 (regressionFit = 2.985,581489, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 29,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.985,009624 (regressionFit = 2.985,009623, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 35,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.979,661133 (regressionFit = 2.979,661132, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 240,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.974,963830 (regressionFit = 2.974,963829, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 22).  [covers 8,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.984,921743 (regressionFit = 2.984,921742, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 20).  [covers 16,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.978,837630 (regressionFit = 2.978,837629, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 19,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.987,971973 (regressionFit = 2.987,971972, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 28,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.988,476811 (regressionFit = 2.988,476810, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 34,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.987,156836 (regressionFit = 2.987,156835, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 7).  [covers 17,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.986,187851 (regressionFit = 2.986,187850, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 41,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.988,427204 (regressionFit = 2.988,427203, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 49,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.978,128961 (regressionFit = 2.978,128960, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 317,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.978,128961 (regressionFit = 2.978,128960, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 24,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.985,637311 (regressionFit = 2.985,637310, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 34,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.987,764569 (regressionFit = 2.987,764568, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 36,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.986,606394 (regressionFit = 2.986,606393, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 35,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.984,283962 (regressionFit = 2.984,283961, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 41,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.976,661776 (regressionFit = 2.976,661774, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 38,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.982,947425 (regressionFit = 2.982,947424, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 37,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.987,776887 (regressionFit = 2.987,776886, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 35,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.987,038404 (regressionFit = 2.987,038403, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 38,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.988,438953 (regressionFit = 2.988,438952, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 31,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.984,161785 (regressionFit = 2.984,161784, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 35,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.967,358562 (regressionFit = 2.967,358561, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 36,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.987,503406 (regressionFit = 2.987,503405, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 34,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.986,836717 (regressionFit = 2.986,836716, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 33,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.966,751183 (regressionFit = 2.966,751182, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 33,0/341,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.966,751183): medv(A) :- age(A, 5).  [covers 33,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.985,028393 (regressionFit = 2.985,028392, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 27,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.967,845605 (regressionFit = 2.967,845604, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 30,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.988,368898 (regressionFit = 2.988,368897, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 36,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.981,269533 (regressionFit = 2.981,269532, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 42,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.987,934220 (regressionFit = 2.987,934218, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 32,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.987,284856 (regressionFit = 2.987,284854, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 34,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.988,431585 (regressionFit = 2.988,431584, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 26,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.984,470265 (regressionFit = 2.984,470264, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 42,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.983,748642 (regressionFit = 2.983,748641, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 84,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.987,023306 (regressionFit = 2.987,023305, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 104,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.980,284452 (regressionFit = 2.980,284451, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 12,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.981,045759 (regressionFit = 2.981,045758, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 437).  [covers 12,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.987,971973 (regressionFit = 2.987,971972, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 28,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.985,896821 (regressionFit = 2.985,896820, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 277).  [covers 10,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.987,297844 (regressionFit = 2.987,297843, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 276).  [covers 9,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.974,963830 (regressionFit = 2.974,963829, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 330).  [covers 8,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.973,306882 (regressionFit = 2.973,306881, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 264).  [covers 12,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.986,183532 (regressionFit = 2.986,183531, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 7).  [covers 14,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.988,025452 (regressionFit = 2.988,025451, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 49,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.987,484170 (regressionFit = 2.987,484169, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 44,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.988,279311 (regressionFit = 2.988,279310, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 39,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.981,237076 (regressionFit = 2.981,237075, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 34,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.988,008170 (regressionFit = 2.988,008169, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 34,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.979,285703 (regressionFit = 2.979,285702, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 32,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.986,847137 (regressionFit = 2.986,847136, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 33,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.987,499575 (regressionFit = 2.987,499574, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 39,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.987,321474 (regressionFit = 2.987,321473, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 33,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.988,182899 (regressionFit = 2.988,182898, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 37,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.986,324821 (regressionFit = 2.986,324820, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 36,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.984,187513 (regressionFit = 2.984,187512, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 34,0/341,0 pos, 0,0/0,0 neg]
%     Score = -2.985,027892 (regressionFit = 2.985,027891, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 36,0/341,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- age(A, 5).  [covers 33,0/341,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- age(A, 5).  [covers 33,0/341,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -8,764.
% Will extend: medv(A) :- age(A, 5).  [covers 33,0/341,0 pos, 0,0/0,0 neg]
Comparing variance: 15.808319216524113 to score=0.0025 #egs=33.0
Comparing variance: 7.938560544767169 to score=0.0025 #egs=308.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 33,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-15,808319)
%         ILP node to extend: medv(A) :- age(A, 5).  [covers 33,0/341,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -15,808319) into position #1 in the search queue (new size=4).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 308,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-7,938561)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 4 and with score = -7,938561) into position #3 in the search queue (new size=5).

% Time for loop #7: 120 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      medv(A) :- age(A, 5).  [covers 33,0/341,0 pos, 0,0/0,0 neg]
% This clause covers 33 positive examples, of which 33 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- age(A, 5).  [covers 33,0/33,0 pos, 0,0/0,0 neg]'
%     Score = -2.966,751183 (regressionFit = 2.966,751182, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 33,0/33,0 pos, 0,0/0,0 neg]

% Have these 7 positive seeds: 2 3 6 9 15 17 18
% Gleaner: New best node found (score = -2.966,751183): medv(A) :- age(A, 5).  [covers 33,0/33,0 pos, 0,0/0,0 neg]
%     Score = -518,862141 (regressionFit = 518,862139, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), crim(A, 3).  [covers 3,0/33,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -518,862141): medv(A) :- age(A, 5), crim(A, 3).  [covers 3,0/33,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), crim(A, 2).  [covers 1,0/33,0 pos, 0,0/0,0 neg]
%     Score = -488,364210 (regressionFit = 488,364208, penalties=2.0300000000000005E-6) for clause:  medv(A) :- age(A, 5), crim(A, 5).  [covers 7,0/33,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -488,364210): medv(A) :- age(A, 5), crim(A, 5).  [covers 7,0/33,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), crim(A, 7).  [covers 1,0/33,0 pos, 0,0/0,0 neg]
%     Score = -506,066538 (regressionFit = 506,066536, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), crim(A, 8).  [covers 8,0/33,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), zn(A, 0).  [covers 33,0/33,0 pos, 0,0/0,0 neg]
%     Score = -510,318523 (regressionFit = 510,318521, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), indus(A, 8).  [covers 8,0/33,0 pos, 0,0/0,0 neg]
%     Score = -517,143959 (regressionFit = 517,143956, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), indus(A, 9).  [covers 10,0/33,0 pos, 0,0/0,0 neg]
%     Score = -520,096568 (regressionFit = 520,096566, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), chas(A, 0).  [covers 28,0/33,0 pos, 0,0/0,0 neg]
%     Score = -502,623470 (regressionFit = 502,623468, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), nox(A, 7).  [covers 8,0/33,0 pos, 0,0/0,0 neg]
%     Score = -520,960017 (regressionFit = 520,960015, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), nox(A, 8).  [covers 8,0/33,0 pos, 0,0/0,0 neg]
%     Score = -518,874041 (regressionFit = 518,874039, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), rm(A, 8).  [covers 5,0/33,0 pos, 0,0/0,0 neg]
%     Score = -521,470105 (regressionFit = 521,470103, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), rm(A, 10).  [covers 7,0/33,0 pos, 0,0/0,0 neg]
%     Score = -519,820549 (regressionFit = 519,820547, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), rm(A, 2).  [covers 3,0/33,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), rm(A, 4).  [covers 2,0/33,0 pos, 0,0/0,0 neg]
%     Score = -424,044216 (regressionFit = 424,044214, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), rm(A, 3).  [covers 3,0/33,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -424,044216): medv(A) :- age(A, 5), rm(A, 3).  [covers 3,0/33,0 pos, 0,0/0,0 neg]
%     Score = -463,171507 (regressionFit = 463,171505, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), dis(A, 9).  [covers 8,0/33,0 pos, 0,0/0,0 neg]
%     Score = -515,836822 (regressionFit = 515,836820, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), dis(A, 8).  [covers 10,0/33,0 pos, 0,0/0,0 neg]
%     Score = -519,416046 (regressionFit = 519,416044, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), dis(A, 7).  [covers 5,0/33,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), rad(A, 2).  [covers 2,0/33,0 pos, 0,0/0,0 neg]
%     Score = -512,073153 (regressionFit = 512,073151, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), rad(A, 4).  [covers 6,0/33,0 pos, 0,0/0,0 neg]
%     Score = -519,369143 (regressionFit = 519,369141, penalties=2.0300000000000005E-6) for clause:  medv(A) :- age(A, 5), rad(A, 5).  [covers 12,0/33,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), tax(A, 188).  [covers 2,0/33,0 pos, 0,0/0,0 neg]
%     Score = -512,073153 (regressionFit = 512,073151, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), tax(A, 437).  [covers 6,0/33,0 pos, 0,0/0,0 neg]
%     Score = -517,143959 (regressionFit = 517,143956, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), tax(A, 403).  [covers 10,0/33,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0300000000000005E-6) for clause:  medv(A) :- age(A, 5), ptratio(A, 5).  [covers 2,0/33,0 pos, 0,0/0,0 neg]
%     Score = -512,073153 (regressionFit = 512,073151, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), ptratio(A, 7).  [covers 6,0/33,0 pos, 0,0/0,0 neg]
%     Score = -517,143959 (regressionFit = 517,143956, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), ptratio(A, 9).  [covers 10,0/33,0 pos, 0,0/0,0 neg]
%     Score = -519,789479 (regressionFit = 519,789477, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), b(A, 8).  [covers 5,0/33,0 pos, 0,0/0,0 neg]
%     Score = -500,897361 (regressionFit = 500,897359, penalties=2.0300000000000005E-6) for clause:  medv(A) :- age(A, 5), b(A, 5).  [covers 3,0/33,0 pos, 0,0/0,0 neg]
%     Score = -516,369742 (regressionFit = 516,369740, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), b(A, 3).  [covers 5,0/33,0 pos, 0,0/0,0 neg]
%     Score = -515,302966 (regressionFit = 515,302964, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), b(A, 9).  [covers 6,0/33,0 pos, 0,0/0,0 neg]
%     Score = -520,344449 (regressionFit = 520,344447, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), lstat(A, 6).  [covers 8,0/33,0 pos, 0,0/0,0 neg]
%     Score = -495,247649 (regressionFit = 495,247647, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), lstat(A, 7).  [covers 10,0/33,0 pos, 0,0/0,0 neg]
%     Score = -505,742788 (regressionFit = 505,742786, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), lstat(A, 8).  [covers 3,0/33,0 pos, 0,0/0,0 neg]
%     Score = -511,334878 (regressionFit = 511,334876, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), lstat(A, 10).  [covers 4,0/33,0 pos, 0,0/0,0 neg]
%     Score = -477,245522 (regressionFit = 477,245520, penalties=2.0500000000000003E-6) for clause:  medv(A) :- age(A, 5), lstat(A, 3).  [covers 5,0/33,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- age(A, 5), rm(A, 3).  [covers 3,0/33,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- age(A, 5), rm(A, 3).  [covers 3,0/33,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -15,808.
% Will extend: medv(A) :- age(A, 5), rm(A, 3).  [covers 3,0/33,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #8: 26 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      medv(A) :- age(A, 5), rm(A, 3).  [covers 3,0/33,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (medv(A) :- lstat(A, 5))
Created a leaf under (medv(A) :- age(A, 5))
Created a leaf under (medv(A) :- tax(A, 300))
Created a leaf under (medv(A) :- ptratio(A, 2))

%%%%%  WILL-Produced Tree #9 @ 14:10:18 10/20/22.  %%%%%


% FOR medv(A):
%   if ( lstat(A, 5) )
%   then return -0.9717754511055227;  // std dev = 2,820, 39,000 (wgt'ed) examples reached here.  /* #pos=39 */
%   else if ( indus(A, 2) )
%   | then if ( crim(A, 1) )
%   | | then return -4.517928681314454;  // std dev = 6,603, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ptratio(A, 2) )
%   | | | then return 0.9931312807570769;  // std dev = 1,367, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else if ( rm(A, 5) )
%   | | | | then return 2.548668766582862;  // std dev = 2,940, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return -1.499541833051711;  // std dev = 17,863, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( tax(A, 300) )
%   | | then return -2.047241368196417;  // std dev = 2,695, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( age(A, 5) )
%   | | | then if ( rm(A, 3) )
%   | | | | then return -5.936929450833632;  // std dev = 10,172, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else return 0.046195482335492984;  // std dev = 17,904, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.3560278278801741;  // std dev = 2,818, 308,000 (wgt'ed) examples reached here.  /* #pos=308 */


% Clauses:

medv(A, -0.9717754511055227) :- 
     lstat(A, 5), 
     !. // Clause #1.

medv(A, -4.517928681314454) :- 
     indus(A, 2), 
     crim(A, 1), 
     !. // Clause #2.

medv(A, 0.9931312807570769) :- 
     indus(A, 2), 
     ptratio(A, 2), 
     !. // Clause #3.

medv(A, 2.548668766582862) :- 
     indus(A, 2), 
     rm(A, 5), 
     !. // Clause #4.

medv(A, -1.499541833051711) :- 
     indus(A, 2), 
     !. // Clause #5.

medv(A, -2.047241368196417) :- 
     tax(A, 300), 
     !. // Clause #6.

medv(A, -5.936929450833632) :- 
     age(A, 5), 
     rm(A, 3), 
     !. // Clause #7.

medv(A, 0.046195482335492984) :- 
     age(A, 5), 
     !. // Clause #8.

medv(A, 0.3560278278801741) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_medv(a, -0.9717754511055227) :-  /* #pos=39 */ 
   lstat(a, 5),
   !. // Flattened version of clause #1.

flattened_medv(a, -4.517928681314454) :-  /* #pos=4 */ 
   indus(a, 2),
   crim(a, 1),
   !. // Flattened version of clause #2.

flattened_medv(a, 0.9931312807570769) :-  /* #pos=13 */ 
   indus(a, 2),
   ptratio(a, 2),
   !. // Flattened version of clause #3.

flattened_medv(a, 2.548668766582862) :-  /* #pos=3 */ 
   indus(a, 2),
   rm(a, 5),
   !. // Flattened version of clause #4.

flattened_medv(a, -1.499541833051711) :-  /* #pos=29 */ 
   indus(a, 2),
   !. // Flattened version of clause #5.

flattened_medv(a, -2.047241368196417) :-  /* #pos=7 */ 
   tax(a, 300),
   !. // Flattened version of clause #6.

flattened_medv(a, -5.936929450833632) :-  /* #pos=3 */ 
   age(a, 5),
   rm(a, 3),
   !. // Flattened version of clause #7.

flattened_medv(a, 0.046195482335492984) :-  /* #pos=30 */ 
   age(a, 5),
   !. // Flattened version of clause #8.

flattened_medv(underscore, 0.3560278278801741) :-  /* #pos=308 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   rm(a, 5)
%   indus(a, 2)
%   crim(a, 1)
%   tax(a, 300)
%   lstat(a, 5)
%   age(a, 5)
%   rm(a, 3)
%   ptratio(a, 2)

% Saving model in: data/boston_housing/train/models/bRDNs/medv.model.ckpt
% Time taken to learn 9 trees is 7,225 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:15.808319216524117
Set score:0.0025
% Kept 436 of the 436 positive examples.
% Kept 0 of the 0 negative examples.
% Dataset size: 436
Computing probabilities
prob time:131 milliseconds
No hidden examples for : medv
Time to build dataset: 136 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:8.31589016482627
Set score:0.0025

% Have these 8 positive seeds: 2 86 193 252 273 343 370 400

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 436,0/436,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -3.623,086089 (regressionFit = 3.623,086088, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.623,086089): medv(A) :- crim(A, 4).  [covers 41,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.624,674464 (regressionFit = 3.624,674463, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.622,790151 (regressionFit = 3.622,790150, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.622,790151): medv(A) :- crim(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.621,195315 (regressionFit = 3.621,195314, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.621,195315): medv(A) :- crim(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.624,272574 (regressionFit = 3.624,272573, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.620,628062 (regressionFit = 3.620,628061, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.620,628062): medv(A) :- crim(A, 10).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,141708 (regressionFit = 3.625,141707, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 12.5).  [covers 10,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.621,401021 (regressionFit = 3.621,401020, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,410086 (regressionFit = 3.625,410085, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 40).  [covers 7,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.598,176586 (regressionFit = 3.598,176585, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 25).  [covers 10,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.598,176586): medv(A) :- zn(A, 25).  [covers 10,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.618,242383 (regressionFit = 3.618,242382, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,034428 (regressionFit = 3.625,034427, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,514831 (regressionFit = 3.625,514830, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.617,241666 (regressionFit = 3.617,241665, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,425895 (regressionFit = 3.625,425894, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,207183 (regressionFit = 3.625,207182, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.610,449657 (regressionFit = 3.610,449656, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 401,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.610,449657 (regressionFit = 3.610,449656, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 35,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.615,096914 (regressionFit = 3.615,096913, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.624,475420 (regressionFit = 3.624,475419, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.615,055026 (regressionFit = 3.615,055025, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.613,275807 (regressionFit = 3.613,275806, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,720976 (regressionFit = 3.625,720975, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 42,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,335748 (regressionFit = 3.625,335747, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.624,482652 (regressionFit = 3.624,482651, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,190488 (regressionFit = 3.625,190487, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.623,155388 (regressionFit = 3.623,155387, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.619,959126 (regressionFit = 3.619,959125, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.622,845794 (regressionFit = 3.622,845793, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 44,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.614,142791 (regressionFit = 3.614,142790, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,725815 (regressionFit = 3.625,725814, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 37,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.624,162545 (regressionFit = 3.624,162544, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.622,467432 (regressionFit = 3.622,467431, penalties=1.03E-6) for clause:  medv(A) :- age(A, 8).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,377402 (regressionFit = 3.625,377401, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,295296 (regressionFit = 3.625,295295, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.620,795388 (regressionFit = 3.620,795387, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.624,814830 (regressionFit = 3.624,814829, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 32,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.600,247962 (regressionFit = 3.600,247961, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 50,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.623,157166 (regressionFit = 3.623,157165, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,008546 (regressionFit = 3.625,008545, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 51,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,664313 (regressionFit = 3.625,664312, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 43,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,703402 (regressionFit = 3.625,703401, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,720233 (regressionFit = 3.625,720232, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 101,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.623,551062 (regressionFit = 3.623,551061, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 1).  [covers 15,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,425895 (regressionFit = 3.625,425894, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,404117 (regressionFit = 3.625,404116, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 24,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.624,147699 (regressionFit = 3.624,147698, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 311).  [covers 7,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.624,714759 (regressionFit = 3.624,714758, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 296).  [covers 8,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.621,702539 (regressionFit = 3.621,702538, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 254).  [covers 5,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,544614 (regressionFit = 3.625,544613, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 430).  [covers 3,0/436,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 335).  [covers 2,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,425895 (regressionFit = 3.625,425894, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 90,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.616,088499 (regressionFit = 3.616,088498, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 284).  [covers 7,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.622,525754 (regressionFit = 3.622,525753, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.620,651518 (regressionFit = 3.620,651517, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 48,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.612,324584 (regressionFit = 3.612,324583, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 2).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.595,438001 (regressionFit = 3.595,438000, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 8).  [covers 8,0/436,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.595,438001): medv(A) :- ptratio(A, 8).  [covers 8,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.624,708630 (regressionFit = 3.624,708629, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 97,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,725870 (regressionFit = 3.625,725869, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.624,273204 (regressionFit = 3.624,273203, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 47,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.624,082121 (regressionFit = 3.624,082120, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.624,850778 (regressionFit = 3.624,850777, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 40,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.614,117624 (regressionFit = 3.614,117623, penalties=1.03E-6) for clause:  medv(A) :- b(A, 4).  [covers 27,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,453071 (regressionFit = 3.625,453070, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 38,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.622,186402 (regressionFit = 3.622,186401, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 46,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.624,132906 (regressionFit = 3.624,132905, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 49,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,207170 (regressionFit = 3.625,207169, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 45,0/436,0 pos, 0,0/0,0 neg]
%     Score = -3.625,728113 (regressionFit = 3.625,728112, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 39,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- ptratio(A, 8).  [covers 8,0/436,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- ptratio(A, 8).  [covers 8,0/436,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: medv(A) :- ptratio(A, 8).  [covers 8,0/436,0 pos, 0,0/0,0 neg]
Comparing variance: 5.193555525164923 to score=0.0025 #egs=8.0
Comparing variance: 8.303480270430988 to score=0.0025 #egs=428.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 8,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-5,193556)
%         ILP node to extend: medv(A) :- ptratio(A, 8).  [covers 8,0/436,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 1 and with score = -5,193556) into the LAST position (#1) in the search queue.
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 428,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-8,303480)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -8,303480) into position #1 in the search queue (new size=2).

% Time for loop #1: 157 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      medv(A) :- ptratio(A, 8).  [covers 8,0/436,0 pos, 0,0/0,0 neg]
% This clause covers 8 positive examples, of which 8 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 13 81 120 224 241 320 391 406

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 428,0/428,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 428,0/428,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -3.553,313792 (regressionFit = 3.553,313791, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 4).  [covers 39,0/428,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.553,313792): medv(A) :- crim(A, 4).  [covers 39,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,321723 (regressionFit = 3.553,321721, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 51,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.547,150384 (regressionFit = 3.547,150383, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 47,0/428,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.547,150384): medv(A) :- crim(A, 7).  [covers 47,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.548,770896 (regressionFit = 3.548,770895, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 42,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.547,557780 (regressionFit = 3.547,557779, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 45,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.552,248220 (regressionFit = 3.552,248219, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 48,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,466238 (regressionFit = 3.553,466237, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 12.5).  [covers 10,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,004924 (regressionFit = 3.553,004923, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 307,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,632032 (regressionFit = 3.553,632031, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 33).  [covers 4,0/428,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 100).  [covers 1,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.544,883901 (regressionFit = 3.544,883900, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 47,0/428,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.544,883901): medv(A) :- indus(A, 3).  [covers 47,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.552,675320 (regressionFit = 3.552,675319, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 49,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.552,660479 (regressionFit = 3.552,660478, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 6).  [covers 36,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.546,244483 (regressionFit = 3.546,244482, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 46,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,861871 (regressionFit = 3.553,861870, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 90,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,475308 (regressionFit = 3.553,475307, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 7).  [covers 17,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.540,277298 (regressionFit = 3.540,277297, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 393,0/428,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.540,277298): medv(A) :- chas(A, 0).  [covers 393,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.540,277298 (regressionFit = 3.540,277297, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 35,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.544,800876 (regressionFit = 3.544,800875, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 43,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.539,365006 (regressionFit = 3.539,365005, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 4).  [covers 48,0/428,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.539,365006): medv(A) :- nox(A, 4).  [covers 48,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.550,867178 (regressionFit = 3.550,867177, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 10).  [covers 42,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,113119 (regressionFit = 3.553,113118, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 48,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.541,490720 (regressionFit = 3.541,490719, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 48,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.547,911623 (regressionFit = 3.547,911622, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 42,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.546,831232 (regressionFit = 3.546,831231, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 44,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.552,891478 (regressionFit = 3.552,891477, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 3).  [covers 48,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,889395 (regressionFit = 3.553,889394, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 44,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.551,027150 (regressionFit = 3.551,027149, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 44,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.552,219187 (regressionFit = 3.552,219186, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 42,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,812999 (regressionFit = 3.553,812998, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 42,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.540,593997 (regressionFit = 3.540,593996, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 40,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,782016 (regressionFit = 3.553,782015, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 48,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,358544 (regressionFit = 3.553,358543, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 43,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.551,926021 (regressionFit = 3.551,926020, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 49,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,335362 (regressionFit = 3.553,335361, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 32,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.546,963618 (regressionFit = 3.546,963617, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 4).  [covers 45,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.544,288964 (regressionFit = 3.544,288962, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 48,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,637561 (regressionFit = 3.553,637560, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 43,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,528057 (regressionFit = 3.553,528056, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 39,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,527710 (regressionFit = 3.553,527709, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 112,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,783735 (regressionFit = 3.553,783734, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 101,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.542,667870 (regressionFit = 3.542,667869, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 16,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,861871 (regressionFit = 3.553,861870, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 90,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.552,541156 (regressionFit = 3.552,541155, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 311).  [covers 7,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,072447 (regressionFit = 3.553,072446, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 296).  [covers 8,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,550815 (regressionFit = 3.553,550813, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 277).  [covers 11,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,516779 (regressionFit = 3.553,516778, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 222).  [covers 7,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.540,801415 (regressionFit = 3.540,801414, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 287).  [covers 8,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,861871 (regressionFit = 3.553,861870, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 90,0/428,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 256).  [covers 1,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.552,653920 (regressionFit = 3.552,653919, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 398).  [covers 12,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.551,530564 (regressionFit = 3.551,530563, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 45,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.549,926355 (regressionFit = 3.549,926354, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 48,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,660668 (regressionFit = 3.553,660667, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 51,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,854786 (regressionFit = 3.553,854785, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 5).  [covers 42,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,518882 (regressionFit = 3.553,518881, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 97,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.545,316155 (regressionFit = 3.545,316153, penalties=1.03E-6) for clause:  medv(A) :- b(A, 2).  [covers 40,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,365205 (regressionFit = 3.553,365204, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 46,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.543,358417 (regressionFit = 3.543,358416, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 99,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,844913 (regressionFit = 3.553,844912, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 46,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,833836 (regressionFit = 3.553,833835, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 39,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,792766 (regressionFit = 3.553,792765, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 43,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.551,373314 (regressionFit = 3.551,373313, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 9).  [covers 44,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,315566 (regressionFit = 3.553,315565, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 38,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.543,582247 (regressionFit = 3.543,582246, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 51,0/428,0 pos, 0,0/0,0 neg]
%     Score = -3.553,704411 (regressionFit = 3.553,704410, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 44,0/428,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 4).  [covers 48,0/428,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 4).  [covers 48,0/428,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -8,303.
% Will extend: medv(A) :- nox(A, 4).  [covers 48,0/428,0 pos, 0,0/0,0 neg]
Comparing variance: 5.977793860461229 to score=0.0025 #egs=48.0
Comparing variance: 8.559028682987472 to score=0.0025 #egs=380.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 48,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-5,977794)
%         ILP node to extend: medv(A) :- nox(A, 4).  [covers 48,0/428,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 2 and with score = -5,977794) into position #1 in the search queue (new size=2).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 380,0
%      addToQueueOfTreeStructuredLearningTasks (level=2; score=-8,559029)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 2 and with score = -8,559029) into position #1 in the search queue (new size=3).

% Time for loop #2: 174 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      medv(A) :- nox(A, 4).  [covers 48,0/428,0 pos, 0,0/0,0 neg]
% This clause covers 48 positive examples, of which 48 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 41 42 58 102 130 160 180 211

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 380,0/380,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 380,0/380,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -3.248,149898 (regressionFit = 3.248,149897, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 49,0/380,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.248,149898): medv(A) :- crim(A, 5).  [covers 49,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.248,899641 (regressionFit = 3.248,899640, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 32,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.251,729616 (regressionFit = 3.251,729615, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 46,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.250,976087 (regressionFit = 3.250,976086, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 3).  [covers 39,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.250,188206 (regressionFit = 3.250,188205, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 32,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.250,411411 (regressionFit = 3.250,411410, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 44,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.249,508750 (regressionFit = 3.249,508749, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 265,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.252,347567 (regressionFit = 3.252,347566, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 95).  [covers 4,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.252,158438 (regressionFit = 3.252,158437, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 30).  [covers 6,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.252,412201 (regressionFit = 3.252,412200, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 52.5).  [covers 3,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.244,277946 (regressionFit = 3.244,277945, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 21,0/380,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.244,277946): medv(A) :- indus(A, 8).  [covers 21,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.245,270533 (regressionFit = 3.245,270532, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 29,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.238,801234 (regressionFit = 3.238,801233, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 34,0/380,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.238,801234): medv(A) :- indus(A, 1).  [covers 34,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.247,978876 (regressionFit = 3.247,978875, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 42,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.248,433465 (regressionFit = 3.248,433464, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 39,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.252,011079 (regressionFit = 3.252,011078, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 44,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.234,152394 (regressionFit = 3.234,152393, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 350,0/380,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.234,152394): medv(A) :- chas(A, 0).  [covers 350,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.247,622839 (regressionFit = 3.247,622838, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 36,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.251,818321 (regressionFit = 3.251,818320, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 42,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.250,544227 (regressionFit = 3.250,544226, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 48,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.243,040720 (regressionFit = 3.243,040719, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 48,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.223,760749 (regressionFit = 3.223,760748, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 47,0/380,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.223,760749): medv(A) :- nox(A, 1).  [covers 47,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.252,410907 (regressionFit = 3.252,410906, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 2).  [covers 42,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.247,854329 (regressionFit = 3.247,854328, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 37,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.251,736004 (regressionFit = 3.251,736003, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 8).  [covers 40,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.242,027927 (regressionFit = 3.242,027926, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 41,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.249,277634 (regressionFit = 3.249,277633, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 38,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.249,387217 (regressionFit = 3.249,387216, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 39,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.236,917478 (regressionFit = 3.236,917477, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 39,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.252,430110 (regressionFit = 3.252,430109, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 41,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.252,385816 (regressionFit = 3.252,385815, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 39,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.252,407767 (regressionFit = 3.252,407766, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 47,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.238,972373 (regressionFit = 3.238,972372, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 44,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.246,156303 (regressionFit = 3.246,156302, penalties=1.03E-6) for clause:  medv(A) :- age(A, 1).  [covers 33,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.251,452575 (regressionFit = 3.251,452573, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 36,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.249,635921 (regressionFit = 3.249,635920, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 42,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.249,755223 (regressionFit = 3.249,755222, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 51,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.251,356120 (regressionFit = 3.251,356119, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 39,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.217,311318 (regressionFit = 3.217,311317, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 44,0/380,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.217,311318): medv(A) :- dis(A, 2).  [covers 44,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.250,777842 (regressionFit = 3.250,777841, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 90,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.251,723018 (regressionFit = 3.251,723017, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 98,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.252,381656 (regressionFit = 3.252,381655, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 29,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.247,264812 (regressionFit = 3.247,264811, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 6).  [covers 18,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.245,720737 (regressionFit = 3.245,720736, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 437).  [covers 14,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.245,270533 (regressionFit = 3.245,270532, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 29,0/380,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 402).  [covers 2,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.252,357420 (regressionFit = 3.252,357419, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 300).  [covers 7,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.251,249198 (regressionFit = 3.251,249197, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 31,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.252,412201 (regressionFit = 3.252,412200, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 293).  [covers 3,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.252,367361 (regressionFit = 3.252,367360, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 430).  [covers 3,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.250,516179 (regressionFit = 3.250,516178, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 7).  [covers 16,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.252,336202 (regressionFit = 3.252,336201, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 50,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.248,012866 (regressionFit = 3.248,012865, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 40,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.245,338665 (regressionFit = 3.245,338664, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 32,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.252,386216 (regressionFit = 3.252,386215, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 39,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.245,009212 (regressionFit = 3.245,009211, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 40,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.207,800214 (regressionFit = 3.207,800213, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 40,0/380,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -3.207,800214): medv(A) :- b(A, 9).  [covers 40,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.250,256954 (regressionFit = 3.250,256953, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 38,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.251,321100 (regressionFit = 3.251,321099, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 35,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.247,176209 (regressionFit = 3.247,176208, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 36,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.241,457087 (regressionFit = 3.241,457086, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 44,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.252,408356 (regressionFit = 3.252,408355, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 40,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.252,415015 (regressionFit = 3.252,415014, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 10).  [covers 35,0/380,0 pos, 0,0/0,0 neg]
%     Score = -3.249,463605 (regressionFit = 3.249,463604, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 37,0/380,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- b(A, 9).  [covers 40,0/380,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- b(A, 9).  [covers 40,0/380,0 pos, 0,0/0,0 neg]

% Expanding node at Level 2 with score = -8,559.
% Will extend: medv(A) :- b(A, 9).  [covers 40,0/380,0 pos, 0,0/0,0 neg]
Comparing variance: 9.070797057367052 to score=0.0025 #egs=40.0
Comparing variance: 8.367553914942802 to score=0.0025 #egs=340.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 40,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-9,070797)
%         ILP node to extend: medv(A) :- b(A, 9).  [covers 40,0/380,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 3 and with score = -9,070797) into position #1 in the search queue (new size=3).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 340,0
%      addToQueueOfTreeStructuredLearningTasks (level=3; score=-8,367554)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 3 and with score = -8,367554) into position #2 in the search queue (new size=4).

% Time for loop #3: 164 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #3, the best clause found is:
%      medv(A) :- b(A, 9).  [covers 40,0/380,0 pos, 0,0/0,0 neg]
% This clause covers 40 positive examples, of which 40 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- b(A, 9).  [covers 40,0/40,0 pos, 0,0/0,0 neg]'
%     Score = -3.207,800214 (regressionFit = 3.207,800213, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 40,0/40,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 0 6 19 23 26 27 29 30
% Gleaner: New best node found (score = -3.207,800214): medv(A) :- b(A, 9).  [covers 40,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), crim(A, 4).  [covers 1,0/40,0 pos, 0,0/0,0 neg]
%     Score = -362,670766 (regressionFit = 362,670764, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), crim(A, 5).  [covers 11,0/40,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -362,670766): medv(A) :- b(A, 9), crim(A, 5).  [covers 11,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), crim(A, 1).  [covers 2,0/40,0 pos, 0,0/0,0 neg]
%     Score = -356,956499 (regressionFit = 356,956497, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), crim(A, 8).  [covers 11,0/40,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -356,956499): medv(A) :- b(A, 9), crim(A, 8).  [covers 11,0/40,0 pos, 0,0/0,0 neg]
%     Score = -361,589034 (regressionFit = 361,589032, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 9), crim(A, 9).  [covers 5,0/40,0 pos, 0,0/0,0 neg]
%     Score = -359,055634 (regressionFit = 359,055632, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), crim(A, 10).  [covers 5,0/40,0 pos, 0,0/0,0 neg]
%     Score = -362,539356 (regressionFit = 362,539354, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), zn(A, 0).  [covers 37,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), zn(A, 80).  [covers 2,0/40,0 pos, 0,0/0,0 neg]
%     Score = -358,803699 (regressionFit = 358,803697, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), indus(A, 6).  [covers 3,0/40,0 pos, 0,0/0,0 neg]
%     Score = -362,627309 (regressionFit = 362,627307, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 9), indus(A, 9).  [covers 12,0/40,0 pos, 0,0/0,0 neg]
%     Score = -359,856527 (regressionFit = 359,856525, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), indus(A, 1).  [covers 3,0/40,0 pos, 0,0/0,0 neg]
%     Score = -348,185871 (regressionFit = 348,185869, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), indus(A, 3).  [covers 4,0/40,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -348,185871): medv(A) :- b(A, 9), indus(A, 3).  [covers 4,0/40,0 pos, 0,0/0,0 neg]
%     Score = -352,592674 (regressionFit = 352,592672, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), indus(A, 10).  [covers 15,0/40,0 pos, 0,0/0,0 neg]
%     Score = -357,111822 (regressionFit = 357,111820, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), chas(A, 0).  [covers 33,0/40,0 pos, 0,0/0,0 neg]
%     Score = -357,111822 (regressionFit = 357,111820, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), chas(A, 1).  [covers 7,0/40,0 pos, 0,0/0,0 neg]
%     Score = -343,358620 (regressionFit = 343,358618, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), nox(A, 1).  [covers 7,0/40,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -343,358620): medv(A) :- b(A, 9), nox(A, 1).  [covers 7,0/40,0 pos, 0,0/0,0 neg]
%     Score = -361,177944 (regressionFit = 361,177942, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 9), nox(A, 9).  [covers 14,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), nox(A, 6).  [covers 2,0/40,0 pos, 0,0/0,0 neg]
%     Score = -282,209532 (regressionFit = 282,209530, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), nox(A, 8).  [covers 3,0/40,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -282,209532): medv(A) :- b(A, 9), nox(A, 8).  [covers 3,0/40,0 pos, 0,0/0,0 neg]
%     Score = -354,112844 (regressionFit = 354,112842, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), nox(A, 10).  [covers 3,0/40,0 pos, 0,0/0,0 neg]
%     Score = -361,552096 (regressionFit = 361,552094, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), rm(A, 8).  [covers 6,0/40,0 pos, 0,0/0,0 neg]
%     Score = -353,935913 (regressionFit = 353,935911, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 9), rm(A, 9).  [covers 7,0/40,0 pos, 0,0/0,0 neg]
%     Score = -362,782552 (regressionFit = 362,782550, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), rm(A, 10).  [covers 5,0/40,0 pos, 0,0/0,0 neg]
%     Score = -362,788188 (regressionFit = 362,788186, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), rm(A, 7).  [covers 9,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), rm(A, 3).  [covers 1,0/40,0 pos, 0,0/0,0 neg]
%     Score = -358,050437 (regressionFit = 358,050435, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), rm(A, 1).  [covers 4,0/40,0 pos, 0,0/0,0 neg]
%     Score = -334,412406 (regressionFit = 334,412404, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 9), age(A, 9).  [covers 9,0/40,0 pos, 0,0/0,0 neg]
%     Score = -351,646160 (regressionFit = 351,646158, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), age(A, 8).  [covers 3,0/40,0 pos, 0,0/0,0 neg]
%     Score = -358,319631 (regressionFit = 358,319629, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), age(A, 7).  [covers 10,0/40,0 pos, 0,0/0,0 neg]
%     Score = -315,720618 (regressionFit = 315,720616, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), age(A, 2).  [covers 4,0/40,0 pos, 0,0/0,0 neg]
%     Score = -352,119675 (regressionFit = 352,119673, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), dis(A, 7).  [covers 7,0/40,0 pos, 0,0/0,0 neg]
%     Score = -361,735232 (regressionFit = 361,735230, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), dis(A, 10).  [covers 11,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), dis(A, 5).  [covers 2,0/40,0 pos, 0,0/0,0 neg]
%     Score = -362,654044 (regressionFit = 362,654041, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), dis(A, 4).  [covers 3,0/40,0 pos, 0,0/0,0 neg]
%     Score = -347,172042 (regressionFit = 347,172040, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 9), dis(A, 9).  [covers 10,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), rad(A, 6).  [covers 2,0/40,0 pos, 0,0/0,0 neg]
%     Score = -362,627309 (regressionFit = 362,627307, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), rad(A, 5).  [covers 12,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), rad(A, 1).  [covers 2,0/40,0 pos, 0,0/0,0 neg]
%     Score = -326,019454 (regressionFit = 326,019452, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), rad(A, 4).  [covers 5,0/40,0 pos, 0,0/0,0 neg]
%     Score = -352,592674 (regressionFit = 352,592672, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), rad(A, 24).  [covers 15,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), tax(A, 432).  [covers 2,0/40,0 pos, 0,0/0,0 neg]
%     Score = -362,627309 (regressionFit = 362,627307, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), tax(A, 403).  [covers 12,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), tax(A, 241).  [covers 1,0/40,0 pos, 0,0/0,0 neg]
%     Score = -342,202170 (regressionFit = 342,202168, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), tax(A, 307).  [covers 5,0/40,0 pos, 0,0/0,0 neg]
%     Score = -352,592674 (regressionFit = 352,592672, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), tax(A, 666).  [covers 15,0/40,0 pos, 0,0/0,0 neg]
%     Score = -361,097714 (regressionFit = 361,097712, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), ptratio(A, 2).  [covers 4,0/40,0 pos, 0,0/0,0 neg]
%     Score = -361,210620 (regressionFit = 361,210618, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 9), ptratio(A, 9).  [covers 13,0/40,0 pos, 0,0/0,0 neg]
%     Score = -348,185871 (regressionFit = 348,185869, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), ptratio(A, 4).  [covers 4,0/40,0 pos, 0,0/0,0 neg]
%     Score = -352,592674 (regressionFit = 352,592672, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), ptratio(A, 10).  [covers 15,0/40,0 pos, 0,0/0,0 neg]
%     Score = -355,641891 (regressionFit = 355,641889, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), lstat(A, 7).  [covers 5,0/40,0 pos, 0,0/0,0 neg]
%     Score = -344,205435 (regressionFit = 344,205433, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), lstat(A, 4).  [covers 6,0/40,0 pos, 0,0/0,0 neg]
%     Score = -361,360624 (regressionFit = 361,360622, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), lstat(A, 5).  [covers 3,0/40,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), lstat(A, 1).  [covers 2,0/40,0 pos, 0,0/0,0 neg]
%     Score = -336,959659 (regressionFit = 336,959657, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 9), lstat(A, 9).  [covers 3,0/40,0 pos, 0,0/0,0 neg]
%     Score = -334,543928 (regressionFit = 334,543926, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), lstat(A, 2).  [covers 4,0/40,0 pos, 0,0/0,0 neg]
%     Score = -332,181828 (regressionFit = 332,181826, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), lstat(A, 6).  [covers 6,0/40,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- b(A, 9), nox(A, 8).  [covers 3,0/40,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- b(A, 9), nox(A, 8).  [covers 3,0/40,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -9,071.
% Will extend: medv(A) :- b(A, 9), nox(A, 8).  [covers 3,0/40,0 pos, 0,0/0,0 neg]
Comparing variance: 9.53397442870079 to score=0.0025 #egs=3.0
Comparing variance: 6.8542596528639725 to score=0.0025 #egs=37.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 3,0 < 2.1 * minPosCov = 6,3
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 37,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-6,854260)
%         ILP node to extend: medv(A) :- b(A, 9).  [covers 40,0/40,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -6,854260) into position #2 in the search queue (new size=4).

% Time for loop #4: 40 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #4, the best clause found is:
%      medv(A) :- b(A, 9), nox(A, 8).  [covers 3,0/40,0 pos, 0,0/0,0 neg]
% This clause covers 3 positive examples, of which 3 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 66 106 188 236 239 263 270 274

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 340,0/340,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 340,0/340,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -2.844,612530 (regressionFit = 2.844,612529, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 44,0/340,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.844,612530): medv(A) :- crim(A, 2).  [covers 44,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.843,030391 (regressionFit = 2.843,030390, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 7).  [covers 30,0/340,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.843,030391): medv(A) :- crim(A, 7).  [covers 30,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.831,684320 (regressionFit = 2.831,684319, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 38,0/340,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.831,684320): medv(A) :- crim(A, 5).  [covers 38,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.830,387921 (regressionFit = 2.830,387920, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 40,0/340,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.830,387921): medv(A) :- crim(A, 10).  [covers 40,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.841,931284 (regressionFit = 2.841,931283, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 9).  [covers 27,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.835,704554 (regressionFit = 2.835,704553, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 228,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.842,752233 (regressionFit = 2.842,752232, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 4).  [covers 44,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.842,671603 (regressionFit = 2.842,671602, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 37,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.844,269478 (regressionFit = 2.844,269477, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 3).  [covers 35,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.843,841495 (regressionFit = 2.843,841494, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 75,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.824,370593 (regressionFit = 2.824,370592, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 317,0/340,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.824,370593): medv(A) :- chas(A, 0).  [covers 317,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.824,370593 (regressionFit = 2.824,370592, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 1).  [covers 23,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.839,463317 (regressionFit = 2.839,463316, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 42,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.831,912108 (regressionFit = 2.831,912107, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 1).  [covers 40,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.841,281903 (regressionFit = 2.841,281902, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 10).  [covers 39,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.814,358552 (regressionFit = 2.814,358551, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 24,0/340,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.814,358552): medv(A) :- nox(A, 7).  [covers 24,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.836,438001 (regressionFit = 2.836,438000, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 2).  [covers 35,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.820,763705 (regressionFit = 2.820,763704, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 1).  [covers 35,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.843,723472 (regressionFit = 2.843,723471, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 29,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.842,116632 (regressionFit = 2.842,116631, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 34,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.843,724585 (regressionFit = 2.843,724584, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 6).  [covers 38,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.841,917371 (regressionFit = 2.841,917369, penalties=1.03E-6) for clause:  medv(A) :- age(A, 2).  [covers 32,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.843,331404 (regressionFit = 2.843,331403, penalties=1.03E-6) for clause:  medv(A) :- age(A, 4).  [covers 24,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.842,510706 (regressionFit = 2.842,510705, penalties=1.03E-6) for clause:  medv(A) :- age(A, 6).  [covers 43,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.843,148399 (regressionFit = 2.843,148398, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 6).  [covers 21,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.836,581627 (regressionFit = 2.836,581626, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 1).  [covers 34,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.843,358403 (regressionFit = 2.843,358402, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 40,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.841,153079 (regressionFit = 2.841,153077, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 9).  [covers 33,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.842,634326 (regressionFit = 2.842,634325, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 39,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.844,034682 (regressionFit = 2.844,034680, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 86,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.826,251075 (regressionFit = 2.826,251074, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 8).  [covers 9,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.844,830845 (regressionFit = 2.844,830844, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 85,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.843,841495 (regressionFit = 2.843,841494, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 75,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.844,822165 (regressionFit = 2.844,822164, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 296).  [covers 8,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.843,643848 (regressionFit = 2.843,643847, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 307).  [covers 26,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.843,841495 (regressionFit = 2.843,841494, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 75,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.841,183808 (regressionFit = 2.841,183807, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 38,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.843,349127 (regressionFit = 2.843,349126, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 4).  [covers 28,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.844,477439 (regressionFit = 2.844,477438, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 82,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.844,646420 (regressionFit = 2.844,646419, penalties=1.03E-6) for clause:  medv(A) :- b(A, 3).  [covers 39,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.840,265041 (regressionFit = 2.840,265040, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 41,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.841,158508 (regressionFit = 2.841,158507, penalties=1.03E-6) for clause:  medv(A) :- b(A, 8).  [covers 40,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.836,380659 (regressionFit = 2.836,380657, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 82,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.844,693134 (regressionFit = 2.844,693133, penalties=1.03E-6) for clause:  medv(A) :- b(A, 7).  [covers 40,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.831,639654 (regressionFit = 2.831,639653, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 2).  [covers 33,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.844,895241 (regressionFit = 2.844,895240, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 38,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.844,940589 (regressionFit = 2.844,940588, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 4).  [covers 30,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.843,437440 (regressionFit = 2.843,437439, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 36,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.844,931391 (regressionFit = 2.844,931390, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 35,0/340,0 pos, 0,0/0,0 neg]
%     Score = -2.844,920864 (regressionFit = 2.844,920863, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 7).  [covers 30,0/340,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 7).  [covers 24,0/340,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 7).  [covers 24,0/340,0 pos, 0,0/0,0 neg]

% Expanding node at Level 3 with score = -8,368.
% Will extend: medv(A) :- nox(A, 7).  [covers 24,0/340,0 pos, 0,0/0,0 neg]
Comparing variance: 14.768908013406206 to score=0.0025 #egs=24.0
Comparing variance: 7.784508731077949 to score=0.0025 #egs=316.0
%   Creating a TRUE-branch interior node with wgtedCountTrueBranchPos = 24,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-14,768908)
%         ILP node to extend: medv(A) :- nox(A, 7).  [covers 24,0/340,0 pos, 0,0/0,0 neg]
%      Insert tree-structured search node (@ level = 4 and with score = -14,768908) into position #1 in the search queue (new size=4).
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 316,0
%      addToQueueOfTreeStructuredLearningTasks (level=4; score=-7,784509)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 4 and with score = -7,784509) into position #2 in the search queue (new size=5).

% Time for loop #5: 95 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #5, the best clause found is:
%      medv(A) :- nox(A, 7).  [covers 24,0/340,0 pos, 0,0/0,0 neg]
% This clause covers 24 positive examples, of which 24 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- nox(A, 7).  [covers 24,0/24,0 pos, 0,0/0,0 neg]'
%     Score = -2.814,358552 (regressionFit = 2.814,358551, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 7).  [covers 24,0/24,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 3 5 8 9 10 11 13 15
% Gleaner: New best node found (score = -2.814,358552): medv(A) :- nox(A, 7).  [covers 24,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), crim(A, 3).  [covers 1,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), crim(A, 4).  [covers 1,0/24,0 pos, 0,0/0,0 neg]
%     Score = -249,896981 (regressionFit = 249,896979, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), crim(A, 5).  [covers 4,0/24,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -249,896981): medv(A) :- nox(A, 7), crim(A, 5).  [covers 4,0/24,0 pos, 0,0/0,0 neg]
%     Score = -351,215102 (regressionFit = 351,215100, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), crim(A, 8).  [covers 4,0/24,0 pos, 0,0/0,0 neg]
%     Score = -338,230107 (regressionFit = 338,230105, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), crim(A, 10).  [covers 6,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), zn(A, 0).  [covers 22,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), zn(A, 20).  [covers 2,0/24,0 pos, 0,0/0,0 neg]
%     Score = -354,292657 (regressionFit = 354,292655, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), indus(A, 8).  [covers 6,0/24,0 pos, 0,0/0,0 neg]
%     Score = -295,937567 (regressionFit = 295,937565, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), indus(A, 9).  [covers 7,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), indus(A, 4).  [covers 2,0/24,0 pos, 0,0/0,0 neg]
%     Score = -296,132295 (regressionFit = 296,132293, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), indus(A, 10).  [covers 9,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), chas(A, 0).  [covers 22,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), chas(A, 1).  [covers 2,0/24,0 pos, 0,0/0,0 neg]
%     Score = -350,207400 (regressionFit = 350,207398, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), rm(A, 8).  [covers 5,0/24,0 pos, 0,0/0,0 neg]
%     Score = -354,383088 (regressionFit = 354,383086, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), rm(A, 5).  [covers 3,0/24,0 pos, 0,0/0,0 neg]
%     Score = -326,204038 (regressionFit = 326,204036, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), rm(A, 3).  [covers 6,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), rm(A, 6).  [covers 1,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), rm(A, 4).  [covers 2,0/24,0 pos, 0,0/0,0 neg]
%     Score = -354,452959 (regressionFit = 354,452957, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), age(A, 5).  [covers 4,0/24,0 pos, 0,0/0,0 neg]
%     Score = -353,798499 (regressionFit = 353,798497, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), age(A, 9).  [covers 4,0/24,0 pos, 0,0/0,0 neg]
%     Score = -350,771111 (regressionFit = 350,771109, penalties=2.0300000000000005E-6) for clause:  medv(A) :- nox(A, 7), age(A, 7).  [covers 4,0/24,0 pos, 0,0/0,0 neg]
%     Score = -350,294111 (regressionFit = 350,294109, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), age(A, 4).  [covers 3,0/24,0 pos, 0,0/0,0 neg]
%     Score = -351,111843 (regressionFit = 351,111841, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), age(A, 6).  [covers 5,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), dis(A, 9).  [covers 1,0/24,0 pos, 0,0/0,0 neg]
%     Score = -349,420167 (regressionFit = 349,420165, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), dis(A, 8).  [covers 13,0/24,0 pos, 0,0/0,0 neg]
%     Score = -306,751300 (regressionFit = 306,751298, penalties=2.0300000000000005E-6) for clause:  medv(A) :- nox(A, 7), dis(A, 7).  [covers 4,0/24,0 pos, 0,0/0,0 neg]
%     Score = -351,111843 (regressionFit = 351,111841, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), dis(A, 10).  [covers 5,0/24,0 pos, 0,0/0,0 neg]
%     Score = -354,292657 (regressionFit = 354,292655, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), rad(A, 2).  [covers 6,0/24,0 pos, 0,0/0,0 neg]
%     Score = -290,519515 (regressionFit = 290,519513, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), rad(A, 5).  [covers 9,0/24,0 pos, 0,0/0,0 neg]
%     Score = -296,132295 (regressionFit = 296,132293, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), rad(A, 24).  [covers 9,0/24,0 pos, 0,0/0,0 neg]
%     Score = -354,292657 (regressionFit = 354,292655, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), tax(A, 188).  [covers 6,0/24,0 pos, 0,0/0,0 neg]
%     Score = -295,937567 (regressionFit = 295,937565, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), tax(A, 403).  [covers 7,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), tax(A, 264).  [covers 2,0/24,0 pos, 0,0/0,0 neg]
%     Score = -296,132295 (regressionFit = 296,132293, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), tax(A, 666).  [covers 9,0/24,0 pos, 0,0/0,0 neg]
%     Score = -354,292657 (regressionFit = 354,292655, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), ptratio(A, 5).  [covers 6,0/24,0 pos, 0,0/0,0 neg]
%     Score = -290,519515 (regressionFit = 290,519513, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), ptratio(A, 9).  [covers 9,0/24,0 pos, 0,0/0,0 neg]
%     Score = -296,132295 (regressionFit = 296,132293, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), ptratio(A, 10).  [covers 9,0/24,0 pos, 0,0/0,0 neg]
%     Score = -352,786540 (regressionFit = 352,786538, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), b(A, 8).  [covers 5,0/24,0 pos, 0,0/0,0 neg]
%     Score = -349,303739 (regressionFit = 349,303737, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), b(A, 5).  [covers 3,0/24,0 pos, 0,0/0,0 neg]
%     Score = -328,420014 (regressionFit = 328,420012, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), b(A, 6).  [covers 4,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), b(A, 3).  [covers 1,0/24,0 pos, 0,0/0,0 neg]
%     Score = -343,127433 (regressionFit = 343,127431, penalties=2.0300000000000005E-6) for clause:  medv(A) :- nox(A, 7), b(A, 7).  [covers 11,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), lstat(A, 6).  [covers 2,0/24,0 pos, 0,0/0,0 neg]
%     Score = -351,553951 (regressionFit = 351,553949, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), lstat(A, 10).  [covers 4,0/24,0 pos, 0,0/0,0 neg]
%     Score = -344,253990 (regressionFit = 344,253988, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), lstat(A, 3).  [covers 5,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), lstat(A, 4).  [covers 2,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), lstat(A, 8).  [covers 2,0/24,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), lstat(A, 9).  [covers 1,0/24,0 pos, 0,0/0,0 neg]
%     Score = -350,073064 (regressionFit = 350,073062, penalties=2.0500000000000003E-6) for clause:  medv(A) :- nox(A, 7), lstat(A, 5).  [covers 4,0/24,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 7), crim(A, 5).  [covers 4,0/24,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- nox(A, 7), crim(A, 5).  [covers 4,0/24,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -14,769.
% Will extend: medv(A) :- nox(A, 7), crim(A, 5).  [covers 4,0/24,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #6: 26 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #6, the best clause found is:
%      medv(A) :- nox(A, 7), crim(A, 5).  [covers 4,0/24,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 25 41 72 151 161 179 189 222

% target           = medv(A)
%     Score = -Infinity (regressionFit = Infinity, penalties=1.1E-7) for clause:  medv(_).  [covers 316,0/316,0 pos, 0,0/0,0 neg]
% Unacceptable due to being the root node.
% Most-general root: medv(_).  [covers 316,0/316,0 pos, 0,0/0,0 neg]  score = -Infinity
%     Score = -2.459,874225 (regressionFit = 2.459,874224, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 5).  [covers 34,0/316,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.459,874225): medv(A) :- crim(A, 5).  [covers 34,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,744154 (regressionFit = 2.459,744153, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 8).  [covers 17,0/316,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.459,744154): medv(A) :- crim(A, 8).  [covers 17,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.458,478615 (regressionFit = 2.458,478614, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 1).  [covers 44,0/316,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.458,478615): medv(A) :- crim(A, 1).  [covers 44,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,551466 (regressionFit = 2.459,551465, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 2).  [covers 40,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.455,848511 (regressionFit = 2.455,848510, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 6).  [covers 31,0/316,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.455,848511): medv(A) :- crim(A, 6).  [covers 31,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.449,390090 (regressionFit = 2.449,390089, penalties=1.03E-6) for clause:  medv(A) :- crim(A, 10).  [covers 34,0/316,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.449,390090): medv(A) :- crim(A, 10).  [covers 34,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.453,524772 (regressionFit = 2.453,524771, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 0).  [covers 206,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,775772 (regressionFit = 2.459,775771, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 95).  [covers 4,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.451,860577 (regressionFit = 2.451,860576, penalties=1.03E-6) for clause:  medv(A) :- zn(A, 34).  [covers 3,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.453,818301 (regressionFit = 2.453,818299, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 8).  [covers 14,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,730793 (regressionFit = 2.459,730792, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 9).  [covers 10,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.443,374804 (regressionFit = 2.443,374803, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 1).  [covers 31,0/316,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.443,374804): medv(A) :- indus(A, 1).  [covers 31,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,854977 (regressionFit = 2.459,854976, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 7).  [covers 17,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.455,669930 (regressionFit = 2.455,669929, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 2).  [covers 37,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.456,315853 (regressionFit = 2.456,315852, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 5).  [covers 42,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,292289 (regressionFit = 2.459,292288, penalties=1.03E-6) for clause:  medv(A) :- indus(A, 10).  [covers 66,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.454,678940 (regressionFit = 2.454,678939, penalties=1.03E-6) for clause:  medv(A) :- chas(A, 0).  [covers 295,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.437,681028 (regressionFit = 2.437,681027, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 8).  [covers 33,0/316,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.437,681028): medv(A) :- nox(A, 8).  [covers 33,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,163643 (regressionFit = 2.459,163642, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 9).  [covers 28,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.458,127315 (regressionFit = 2.458,127314, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 6).  [covers 46,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.451,660089 (regressionFit = 2.451,660088, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 5).  [covers 47,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.451,293842 (regressionFit = 2.451,293841, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 3).  [covers 42,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.453,749003 (regressionFit = 2.453,749002, penalties=1.03E-6) for clause:  medv(A) :- nox(A, 10).  [covers 39,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.437,291931 (regressionFit = 2.437,291930, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 7).  [covers 28,0/316,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.437,291931): medv(A) :- rm(A, 7).  [covers 28,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.458,701536 (regressionFit = 2.458,701535, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 9).  [covers 31,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,891026 (regressionFit = 2.459,891025, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 4).  [covers 34,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.458,831311 (regressionFit = 2.458,831310, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 5).  [covers 26,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.458,242796 (regressionFit = 2.458,242795, penalties=1.03E-6) for clause:  medv(A) :- rm(A, 10).  [covers 31,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.457,218005 (regressionFit = 2.457,218004, penalties=1.03E-6) for clause:  medv(A) :- age(A, 7).  [covers 25,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,421250 (regressionFit = 2.459,421249, penalties=1.03E-6) for clause:  medv(A) :- age(A, 5).  [covers 31,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.447,646234 (regressionFit = 2.447,646233, penalties=1.03E-6) for clause:  medv(A) :- age(A, 10).  [covers 43,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,798868 (regressionFit = 2.459,798867, penalties=1.03E-6) for clause:  medv(A) :- age(A, 3).  [covers 35,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.449,519091 (regressionFit = 2.449,519090, penalties=1.03E-6) for clause:  medv(A) :- age(A, 9).  [covers 23,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,653281 (regressionFit = 2.459,653280, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 8).  [covers 26,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.458,567870 (regressionFit = 2.458,567869, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 10).  [covers 35,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,050531 (regressionFit = 2.459,050530, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 5).  [covers 37,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.426,760104 (regressionFit = 2.426,760103, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 2).  [covers 44,0/316,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2.426,760104): medv(A) :- dis(A, 2).  [covers 44,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.454,931034 (regressionFit = 2.454,931033, penalties=1.03E-6) for clause:  medv(A) :- dis(A, 3).  [covers 46,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,638418 (regressionFit = 2.459,638417, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 4).  [covers 85,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.456,219150 (regressionFit = 2.456,219149, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 5).  [covers 77,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,904041 (regressionFit = 2.459,904040, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 3).  [covers 29,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.445,371419 (regressionFit = 2.445,371418, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 7).  [covers 12,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,292289 (regressionFit = 2.459,292288, penalties=1.03E-6) for clause:  medv(A) :- rad(A, 24).  [covers 66,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.453,818301 (regressionFit = 2.453,818299, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 437).  [covers 14,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,730793 (regressionFit = 2.459,730792, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 403).  [covers 10,0/316,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 402).  [covers 2,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.438,908899 (regressionFit = 2.438,908898, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 289).  [covers 5,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,738828 (regressionFit = 2.459,738827, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 329).  [covers 5,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.458,950392 (regressionFit = 2.458,950391, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 224).  [covers 9,0/316,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 352).  [covers 2,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,292289 (regressionFit = 2.459,292288, penalties=1.03E-6) for clause:  medv(A) :- tax(A, 666).  [covers 66,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.458,350167 (regressionFit = 2.458,350166, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 7).  [covers 16,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.444,925111 (regressionFit = 2.444,925110, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 9).  [covers 28,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.453,663729 (regressionFit = 2.453,663728, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 6).  [covers 38,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,195553 (regressionFit = 2.459,195552, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 1).  [covers 45,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.458,517963 (regressionFit = 2.458,517962, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 10).  [covers 73,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,854541 (regressionFit = 2.459,854540, penalties=1.03E-6) for clause:  medv(A) :- ptratio(A, 3).  [covers 35,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.445,184890 (regressionFit = 2.445,184889, penalties=1.03E-6) for clause:  medv(A) :- b(A, 1).  [covers 82,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.442,807290 (regressionFit = 2.442,807289, penalties=1.03E-6) for clause:  medv(A) :- b(A, 6).  [covers 37,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.450,467426 (regressionFit = 2.450,467425, penalties=1.03E-6) for clause:  medv(A) :- b(A, 5).  [covers 35,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,872294 (regressionFit = 2.459,872293, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 5).  [covers 31,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.458,285664 (regressionFit = 2.458,285663, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 6).  [covers 34,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.458,662919 (regressionFit = 2.458,662918, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 3).  [covers 38,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.459,903535 (regressionFit = 2.459,903534, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 8).  [covers 36,0/316,0 pos, 0,0/0,0 neg]
%     Score = -2.451,868028 (regressionFit = 2.451,868027, penalties=1.03E-6) for clause:  medv(A) :- lstat(A, 1).  [covers 36,0/316,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- dis(A, 2).  [covers 44,0/316,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- dis(A, 2).  [covers 44,0/316,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -7,785.
% Will extend: medv(A) :- dis(A, 2).  [covers 44,0/316,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #7: 108 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #7, the best clause found is:
%      medv(A) :- dis(A, 2).  [covers 44,0/316,0 pos, 0,0/0,0 neg]
% This clause covers 44 positive examples, of which 44 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Working on expanding this node: 'medv(A) :- b(A, 9).  [covers 40,0/37,0 pos, 0,0/0,0 neg]'
%     Score = -3.207,800214 (regressionFit = 3.207,800213, penalties=1.03E-6) for clause:  medv(A) :- b(A, 9).  [covers 37,0/37,0 pos, 0,0/0,0 neg]

% Have these 8 positive seeds: 10 11 13 15 18 23 25 30
% Gleaner: New best node found (score = -3.207,800214): medv(A) :- b(A, 9).  [covers 37,0/37,0 pos, 0,0/0,0 neg]
%     Score = -252,187398 (regressionFit = 252,187396, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), crim(A, 5).  [covers 11,0/37,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -252,187398): medv(A) :- b(A, 9), crim(A, 5).  [covers 11,0/37,0 pos, 0,0/0,0 neg]
%     Score = -252,863470 (regressionFit = 252,863468, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), crim(A, 8).  [covers 11,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), crim(A, 6).  [covers 1,0/37,0 pos, 0,0/0,0 neg]
%     Score = -246,938512 (regressionFit = 246,938510, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 9), crim(A, 9).  [covers 4,0/37,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -246,938512): medv(A) :- b(A, 9), crim(A, 9).  [covers 4,0/37,0 pos, 0,0/0,0 neg]
%     Score = -251,986884 (regressionFit = 251,986882, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), zn(A, 0).  [covers 34,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), zn(A, 80).  [covers 2,0/37,0 pos, 0,0/0,0 neg]
%     Score = -248,924651 (regressionFit = 248,924649, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 9), indus(A, 9).  [covers 12,0/37,0 pos, 0,0/0,0 neg]
%     Score = -247,550833 (regressionFit = 247,550831, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), indus(A, 1).  [covers 3,0/37,0 pos, 0,0/0,0 neg]
%     Score = -244,677950 (regressionFit = 244,677948, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), indus(A, 3).  [covers 4,0/37,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -244,677950): medv(A) :- b(A, 9), indus(A, 3).  [covers 4,0/37,0 pos, 0,0/0,0 neg]
%     Score = -253,595845 (regressionFit = 253,595843, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), indus(A, 10).  [covers 12,0/37,0 pos, 0,0/0,0 neg]
%     Score = -253,522627 (regressionFit = 253,522625, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), chas(A, 1).  [covers 6,0/37,0 pos, 0,0/0,0 neg]
%     Score = -253,522627 (regressionFit = 253,522625, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), chas(A, 0).  [covers 31,0/37,0 pos, 0,0/0,0 neg]
%     Score = -253,115391 (regressionFit = 253,115389, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), nox(A, 7).  [covers 8,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), nox(A, 6).  [covers 2,0/37,0 pos, 0,0/0,0 neg]
%     Score = -242,957257 (regressionFit = 242,957255, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), nox(A, 1).  [covers 7,0/37,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -242,957257): medv(A) :- b(A, 9), nox(A, 1).  [covers 7,0/37,0 pos, 0,0/0,0 neg]
%     Score = -243,151639 (regressionFit = 243,151637, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 9), nox(A, 9).  [covers 14,0/37,0 pos, 0,0/0,0 neg]
%     Score = -248,625228 (regressionFit = 248,625226, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), nox(A, 10).  [covers 3,0/37,0 pos, 0,0/0,0 neg]
%     Score = -252,178602 (regressionFit = 252,178600, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), rm(A, 10).  [covers 5,0/37,0 pos, 0,0/0,0 neg]
%     Score = -249,429579 (regressionFit = 249,429577, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), rm(A, 8).  [covers 5,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), rm(A, 4).  [covers 2,0/37,0 pos, 0,0/0,0 neg]
%     Score = -253,600573 (regressionFit = 253,600570, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), rm(A, 5).  [covers 3,0/37,0 pos, 0,0/0,0 neg]
%     Score = -252,276114 (regressionFit = 252,276112, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), rm(A, 7).  [covers 7,0/37,0 pos, 0,0/0,0 neg]
%     Score = -253,175949 (regressionFit = 253,175947, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), age(A, 7).  [covers 10,0/37,0 pos, 0,0/0,0 neg]
%     Score = -253,390459 (regressionFit = 253,390457, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), age(A, 5).  [covers 6,0/37,0 pos, 0,0/0,0 neg]
%     Score = -246,716337 (regressionFit = 246,716335, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), age(A, 8).  [covers 3,0/37,0 pos, 0,0/0,0 neg]
%     Score = -245,421586 (regressionFit = 245,421584, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 9), age(A, 9).  [covers 7,0/37,0 pos, 0,0/0,0 neg]
%     Score = -217,140751 (regressionFit = 217,140749, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), age(A, 2).  [covers 4,0/37,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -217,140751): medv(A) :- b(A, 9), age(A, 2).  [covers 4,0/37,0 pos, 0,0/0,0 neg]
%     Score = -223,265839 (regressionFit = 223,265837, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 9), dis(A, 9).  [covers 10,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), dis(A, 8).  [covers 2,0/37,0 pos, 0,0/0,0 neg]
%     Score = -249,140068 (regressionFit = 249,140066, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), dis(A, 7).  [covers 7,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), dis(A, 5).  [covers 2,0/37,0 pos, 0,0/0,0 neg]
%     Score = -246,032889 (regressionFit = 246,032887, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), dis(A, 1).  [covers 3,0/37,0 pos, 0,0/0,0 neg]
%     Score = -253,513159 (regressionFit = 253,513157, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), dis(A, 4).  [covers 3,0/37,0 pos, 0,0/0,0 neg]
%     Score = -246,215190 (regressionFit = 246,215188, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), dis(A, 10).  [covers 9,0/37,0 pos, 0,0/0,0 neg]
%     Score = -248,924651 (regressionFit = 248,924649, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), rad(A, 5).  [covers 12,0/37,0 pos, 0,0/0,0 neg]
%     Score = -246,236243 (regressionFit = 246,236241, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), rad(A, 2).  [covers 3,0/37,0 pos, 0,0/0,0 neg]
%     Score = -227,282836 (regressionFit = 227,282834, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), rad(A, 4).  [covers 5,0/37,0 pos, 0,0/0,0 neg]
%     Score = -253,595845 (regressionFit = 253,595843, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), rad(A, 24).  [covers 12,0/37,0 pos, 0,0/0,0 neg]
%     Score = -248,924651 (regressionFit = 248,924649, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), tax(A, 403).  [covers 12,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), tax(A, 329).  [covers 1,0/37,0 pos, 0,0/0,0 neg]
%     Score = -240,672613 (regressionFit = 240,672611, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), tax(A, 307).  [covers 5,0/37,0 pos, 0,0/0,0 neg]
%     Score = -253,595845 (regressionFit = 253,595843, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), tax(A, 666).  [covers 12,0/37,0 pos, 0,0/0,0 neg]
%     Score = -243,943785 (regressionFit = 243,943783, penalties=2.0300000000000005E-6) for clause:  medv(A) :- b(A, 9), ptratio(A, 9).  [covers 13,0/37,0 pos, 0,0/0,0 neg]
%     Score = -244,677950 (regressionFit = 244,677948, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), ptratio(A, 4).  [covers 4,0/37,0 pos, 0,0/0,0 neg]
%     Score = -253,595845 (regressionFit = 253,595843, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), ptratio(A, 10).  [covers 12,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), lstat(A, 1).  [covers 2,0/37,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), lstat(A, 8).  [covers 2,0/37,0 pos, 0,0/0,0 neg]
%     Score = -218,806149 (regressionFit = 218,806147, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), lstat(A, 10).  [covers 7,0/37,0 pos, 0,0/0,0 neg]
%     Score = -251,380955 (regressionFit = 251,380953, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), lstat(A, 2).  [covers 3,0/37,0 pos, 0,0/0,0 neg]
%     Score = -250,631718 (regressionFit = 250,631716, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), lstat(A, 7).  [covers 5,0/37,0 pos, 0,0/0,0 neg]
%     Score = -253,370897 (regressionFit = 253,370895, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), lstat(A, 5).  [covers 3,0/37,0 pos, 0,0/0,0 neg]
%     Score = -233,407334 (regressionFit = 233,407332, penalties=2.0500000000000003E-6) for clause:  medv(A) :- b(A, 9), lstat(A, 6).  [covers 6,0/37,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- b(A, 9), age(A, 2).  [covers 4,0/37,0 pos, 0,0/0,0 neg]

% The best node found: medv(A) :- b(A, 9), age(A, 2).  [covers 4,0/37,0 pos, 0,0/0,0 neg]

% Expanding node at Level 4 with score = -6,854.
% Will extend: medv(A) :- b(A, 9), age(A, 2).  [covers 4,0/37,0 pos, 0,0/0,0 neg]
%   Creating a TRUE-branch and FALSE-branch leaves because level = 4 >= 4

% Time for loop #8: 41 milliseconds.
% Internal node max length = 1
% Max tree depth in lits   = 3
% Max tree depth in nodes  = 4
% Max number of clauses    = 8

% On cycle #8, the best clause found is:
%      medv(A) :- b(A, 9), age(A, 2).  [covers 4,0/37,0 pos, 0,0/0,0 neg]
% This clause covers 4 positive examples, of which 4 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

% Have stopped ILP's outer loop because have reached the maximum number of learned clauses (8).

% ******************************************
Created a leaf under (medv(A) :- nox(A, 4))
Created a leaf under (medv(A) :- ptratio(A, 8))

%%%%%  WILL-Produced Tree #10 @ 14:10:19 10/20/22.  %%%%%


% FOR medv(A):
%   if ( ptratio(A, 8) )
%   then return -1.9278981446256105;  // std dev = 2,279, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( nox(A, 4) )
%   | then return -0.4822877248098744;  // std dev = 2,445, 48,000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | else if ( b(A, 9) )
%   | | then if ( nox(A, 8) )
%   | | | then return 4.088185034366543;  // std dev = 5,348, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( age(A, 2) )
%   | | | | then return -4.1534202324945175;  // std dev = 3,966, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return -0.9562698257641192;  // std dev = 14,192, 33,000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( nox(A, 7) )
%   | | | then if ( crim(A, 5) )
%   | | | | then return 5.974997693976794;  // std dev = 2,645, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.37436880369939507;  // std dev = 15,585, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else if ( dis(A, 2) )
%   | | | | then return 0.9415985760253943;  // std dev = 13,759, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | | else return 0.006107800845445429;  // std dev = 47,302, 272,000 (wgt'ed) examples reached here.  /* #pos=272 */


% Clauses:

medv(A, -1.9278981446256105) :- 
     ptratio(A, 8), 
     !. // Clause #1.

medv(A, -0.4822877248098744) :- 
     nox(A, 4), 
     !. // Clause #2.

medv(A, 4.088185034366543) :- 
     b(A, 9), 
     nox(A, 8), 
     !. // Clause #3.

medv(A, -4.1534202324945175) :- 
     b(A, 9), 
     age(A, 2), 
     !. // Clause #4.

medv(A, -0.9562698257641192) :- 
     b(A, 9), 
     !. // Clause #5.

medv(A, 5.974997693976794) :- 
     nox(A, 7), 
     crim(A, 5), 
     !. // Clause #6.

medv(A, 0.37436880369939507) :- 
     nox(A, 7), 
     !. // Clause #7.

medv(A, 0.9415985760253943) :- 
     dis(A, 2), 
     !. // Clause #8.

medv(A, 0.006107800845445429) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_medv(a, -1.9278981446256105) :-  /* #pos=8 */ 
   ptratio(a, 8),
   !. // Flattened version of clause #1.

flattened_medv(a, -0.4822877248098744) :-  /* #pos=48 */ 
   nox(a, 4),
   !. // Flattened version of clause #2.

flattened_medv(a, 4.088185034366543) :-  /* #pos=3 */ 
   b(a, 9),
   nox(a, 8),
   !. // Flattened version of clause #3.

flattened_medv(a, -4.1534202324945175) :-  /* #pos=4 */ 
   b(a, 9),
   age(a, 2),
   !. // Flattened version of clause #4.

flattened_medv(a, -0.9562698257641192) :-  /* #pos=33 */ 
   b(a, 9),
   !. // Flattened version of clause #5.

flattened_medv(a, 5.974997693976794) :-  /* #pos=4 */ 
   nox(a, 7),
   crim(a, 5),
   !. // Flattened version of clause #6.

flattened_medv(a, 0.37436880369939507) :-  /* #pos=20 */ 
   nox(a, 7),
   !. // Flattened version of clause #7.

flattened_medv(a, 0.9415985760253943) :-  /* #pos=44 */ 
   dis(a, 2),
   !. // Flattened version of clause #8.

flattened_medv(underscore, 0.006107800845445429) :-  /* #pos=272 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   dis(a, 2)
%   nox(a, 8)
%   nox(a, 4)
%   ptratio(a, 8)
%   b(a, 9)
%   age(a, 2)
%   nox(a, 7)
%   crim(a, 5)

% Saving model in: data/boston_housing/train/models/bRDNs/medv.model.ckpt
% Saving model in: data/boston_housing/train/models/bRDNs/medv.model


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for medv.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).
stepLength_tree2(1.0).
stepLength_tree3(1.0).
stepLength_tree4(1.0).
stepLength_tree5(1.0).
stepLength_tree6(1.0).
stepLength_tree7(1.0).
stepLength_tree8(1.0).
stepLength_tree9(1.0).
stepLength_tree10(1.0).

logPrior(0.0).
medv(A, Total) :- // A general accessor. 
   medv(A, 1000000, Total), !.
medv(A, Total) :- waitHere("This should not fail", medv(A, Total)).

medv(A, TreesToUse, Total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(LogPrior),
   getScore_medv_tree1(A, TreesToUse, Total1),
   getScore_medv_tree2(A, TreesToUse, Total2),
   getScore_medv_tree3(A, TreesToUse, Total3),
   getScore_medv_tree4(A, TreesToUse, Total4),
   getScore_medv_tree5(A, TreesToUse, Total5),
   getScore_medv_tree6(A, TreesToUse, Total6),
   getScore_medv_tree7(A, TreesToUse, Total7),
   getScore_medv_tree8(A, TreesToUse, Total8),
   getScore_medv_tree9(A, TreesToUse, Total9),
   getScore_medv_tree10(A, TreesToUse, Total10),
   Total is LogPrior + Total1 + Total2 + Total3 + Total4 + Total5 + Total6 + Total7 + Total8 + Total9 + Total10,
   !.
medv(A, TreesToUse, Total) :- waitHere("This should not fail", medv(A, TreesToUse, Total)).

getScore_medv_tree1(A, TreesToUse, 0.0) :- 1 > TreesToUse, !.
getScore_medv_tree1(A, TreesToUse, Total1) :- medv_tree1(A, Total), stepLength_tree1(StepLen), Total1 is Total * StepLen.

getScore_medv_tree2(A, TreesToUse, 0.0) :- 2 > TreesToUse, !.
getScore_medv_tree2(A, TreesToUse, Total2) :- medv_tree2(A, Total), stepLength_tree2(StepLen), Total2 is Total * StepLen.

getScore_medv_tree3(A, TreesToUse, 0.0) :- 3 > TreesToUse, !.
getScore_medv_tree3(A, TreesToUse, Total3) :- medv_tree3(A, Total), stepLength_tree3(StepLen), Total3 is Total * StepLen.

getScore_medv_tree4(A, TreesToUse, 0.0) :- 4 > TreesToUse, !.
getScore_medv_tree4(A, TreesToUse, Total4) :- medv_tree4(A, Total), stepLength_tree4(StepLen), Total4 is Total * StepLen.

getScore_medv_tree5(A, TreesToUse, 0.0) :- 5 > TreesToUse, !.
getScore_medv_tree5(A, TreesToUse, Total5) :- medv_tree5(A, Total), stepLength_tree5(StepLen), Total5 is Total * StepLen.

getScore_medv_tree6(A, TreesToUse, 0.0) :- 6 > TreesToUse, !.
getScore_medv_tree6(A, TreesToUse, Total6) :- medv_tree6(A, Total), stepLength_tree6(StepLen), Total6 is Total * StepLen.

getScore_medv_tree7(A, TreesToUse, 0.0) :- 7 > TreesToUse, !.
getScore_medv_tree7(A, TreesToUse, Total7) :- medv_tree7(A, Total), stepLength_tree7(StepLen), Total7 is Total * StepLen.

getScore_medv_tree8(A, TreesToUse, 0.0) :- 8 > TreesToUse, !.
getScore_medv_tree8(A, TreesToUse, Total8) :- medv_tree8(A, Total), stepLength_tree8(StepLen), Total8 is Total * StepLen.

getScore_medv_tree9(A, TreesToUse, 0.0) :- 9 > TreesToUse, !.
getScore_medv_tree9(A, TreesToUse, Total9) :- medv_tree9(A, Total), stepLength_tree9(StepLen), Total9 is Total * StepLen.

getScore_medv_tree10(A, TreesToUse, 0.0) :- 10 > TreesToUse, !.
getScore_medv_tree10(A, TreesToUse, Total10) :- medv_tree10(A, Total), stepLength_tree10(StepLen), Total10 is Total * StepLen.

flattenedLiteralsInThisSetOfTrees(medv, 57, [
   b(a, 8),
   indus(a, 2),
   indus(a, 10),
   b(a, 1),
   crim(a, 8),
   crim(a, 1),
   crim(a, 2),
   age(a, 5),
   lstat(a, 6),
   b(a, 9),
   ptratio(a, 8),
   lstat(a, 9),
   rad(a, 5),
   indus(a, 3),
   rm(a, 5),
   zn(a, 95),
   tax(a, 264),
   crim(a, 9),
   b(a, 5),
   chas(a, 0),
   nox(a, 10),
   nox(a, 8),
   indus(a, 5),
   rad(a, 3),
   nox(a, 7),
   dis(a, 5),
   crim(a, 5),
   dis(a, 2),
   dis(a, 10),
   tax(a, 300),
   rm(a, 3),
   age(a, 6),
   age(a, 4),
   age(a, 9),
   rm(a, 10),
   nox(a, 9),
   dis(a, 8),
   rm(a, 6),
   lstat(a, 1),
   dis(a, 9),
   nox(a, 4),
   tax(a, 193),
   rm(a, 1),
   rm(a, 2),
   zn(a, 0),
   rm(a, 9),
   dis(a, 3),
   rm(a, 7),
   tax(a, 307),
   rm(a, 4),
   lstat(a, 3),
   age(a, 2),
   b(a, 7),
   lstat(a, 5),
   ptratio(a, 6),
   age(a, 7),
   ptratio(a, 2)]).
% Time taken to learn model for 'medv': 8,197 seconds.
% Saving model in: data/boston_housing/train/models/bRDNs/medv.model
cached groundings hit: 0
Misses: 0

% Total learning time (10 trees): 8,463 seconds.

% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

Resetting the LazyGroundNthArgumentClauseIndex.

% Calling ILPouterLoop from createRegressionOuterLooper.

% getInputArgWithDefaultValue: args=[data/boston_housing/test/test_pos.txt, data/boston_housing/test/test_neg.txt, data/boston_housing/test/test_bk.txt, data/boston_housing/test/test_facts.txt]
%  for N=0: args[N]=data/boston_housing/test/test_pos.txt

% getInputArgWithDefaultValue: args=[data/boston_housing/test/test_pos.txt, data/boston_housing/test/test_neg.txt, data/boston_housing/test/test_bk.txt, data/boston_housing/test/test_facts.txt]
%  for N=1: args[N]=data/boston_housing/test/test_neg.txt

% getInputArgWithDefaultValue: args=[data/boston_housing/test/test_pos.txt, data/boston_housing/test/test_neg.txt, data/boston_housing/test/test_bk.txt, data/boston_housing/test/test_facts.txt]
%  for N=2: args[N]=data/boston_housing/test/test_bk.txt

% getInputArgWithDefaultValue: args=[data/boston_housing/test/test_pos.txt, data/boston_housing/test/test_neg.txt, data/boston_housing/test/test_bk.txt, data/boston_housing/test/test_facts.txt]
%  for N=3: args[N]=data/boston_housing/test/test_facts.txt

% Welcome to the WILL ILP/SRL systems.

% Reading background theory from dir: null

% Switching to VarIndicator = uppercase.

***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****

% [ LazyGroundClauseIndex ]  Building full index for mode/1 with 1 assertions.

%  Read the facts.
%  Have read 166 facts.

%  LearnOneClause initialized.

% The outer looper has been created.

% Initializing the ILP inner looper.
% Have read 13 examples from 'data/boston_housing/test' [data/boston_housing/test/test*].

% NEW target:                 medv(A)
%  targetPred:                medv/1
%  targetArgTypes:            signature = [const], types = [+id]
%  targets:                   [medv(A)]
%  targetPredicates:          [medv/1]
%  targetArgSpecs:            [[A[+id]]]
%  variablesInTargets:        [[A]]

% Started collecting constants

% Collecting the types of constants.

%   *** WARNING ***  Constant '10' is already marked as being of types = [varsrim];
%          type = 'varindus' may be added if not already known.
%  PredicateName = 'indus', from 'indus(id433, 10)',
%  which has types = [signature = [const, const], types = [+id, #varindus]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '0' is already marked as being of types = [varzn];
%          type = 'varchas' may be added if not already known.
%  PredicateName = 'chas', from 'chas(id139, 0)',
%  which has types = [signature = [const, const], types = [+id, #varchas]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '8' is already marked as being of types = [varindus];
%          type = 'varnox' may be added if not already known.
%  PredicateName = 'nox', from 'nox(id139, 8)',
%  which has types = [signature = [const, const], types = [+id, #varnox]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '8' is already marked as being of types = [varindus, varnox];
%          type = 'varrm' may be added if not already known.
%  PredicateName = 'rm', from 'rm(id139, 8)',
%  which has types = [signature = [const, const], types = [+id, #varrm]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '5' is already marked as being of types = [varsrim, varindus, varnox, varrm];
%          type = 'varage' may be added if not already known.
%  PredicateName = 'age', from 'age(id139, 5)',
%  which has types = [signature = [const, const], types = [+id, #varage]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '9' is already marked as being of types = [varsrim, varindus, varnox, varage];
%          type = 'vardis' may be added if not already known.
%  PredicateName = 'dis', from 'dis(id139, 9)',
%  which has types = [signature = [const, const], types = [+id, #vardis]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '4' is already marked as being of types = [varsrim, varindus, varrm, varage, vardis];
%          type = 'varrad' may be added if not already known.
%  PredicateName = 'rad', from 'rad(id139, 4)',
%  which has types = [signature = [const, const], types = [+id, #varrad]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '7' is already marked as being of types = [varindus, varnox, varrm, varage, varrad];
%          type = 'varptrat' may be added if not already known.
%  PredicateName = 'ptratio', from 'ptratio(id139, 7)',
%  which has types = [signature = [const, const], types = [+id, #varptrat]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '2' is already marked as being of types = [varnox, varrm, varage, varrad, varptrat];
%          type = 'varb' may be added if not already known.
%  PredicateName = 'b', from 'b(id139, 2)',
%  which has types = [signature = [const, const], types = [+id, #varb]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '5' is already marked as being of types = [varsrim, varindus, varnox, varrm, varage, vardis, varrad, varptrat, varb];
%          type = 'varlstat' may be added if not already known.
%  PredicateName = 'lstat', from 'lstat(id139, 5)',
%  which has types = [signature = [const, const], types = [+id, #varlstat]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

% Looking at the training examples to see if any types of new constants can be inferred.
% Time to collect constants: 3 milliseconds

% Read 13 pos examples and 0 neg examples.
% Time to init learnOneClause: 4 milliseconds
% Old dirdata/boston_housing/train/models/

% Have 13 'raw' positive examples and kept 13.
% Have 0 'raw' negative examples and kept 0.
% No neg ex for medv

% processing backup's for medv
%  POS EX = 13
%  NEG EX = 0

% Memory usage by WILLSetup (just counts # targets?):
%  |backupPosExamples| = 1
%  |backupNegExamples| = 1
%  |predicatesAsFacts| = 0
%  |addedToFactBase|   = 0

% Getting bRDN's target predicates.
% Did not learn a model for 'medv' this run.
%   loadModel (#0): data/boston_housing/train/models/bRDNs/Trees/medvTree0.tree
%   loadModel (#1): data/boston_housing/train/models/bRDNs/Trees/medvTree1.tree
%   loadModel (#2): data/boston_housing/train/models/bRDNs/Trees/medvTree2.tree
%   loadModel (#3): data/boston_housing/train/models/bRDNs/Trees/medvTree3.tree
%   loadModel (#4): data/boston_housing/train/models/bRDNs/Trees/medvTree4.tree
%   loadModel (#5): data/boston_housing/train/models/bRDNs/Trees/medvTree5.tree
%   loadModel (#6): data/boston_housing/train/models/bRDNs/Trees/medvTree6.tree
%   loadModel (#7): data/boston_housing/train/models/bRDNs/Trees/medvTree7.tree
%   loadModel (#8): data/boston_housing/train/models/bRDNs/Trees/medvTree8.tree
%   loadModel (#9): data/boston_housing/train/models/bRDNs/Trees/medvTree9.tree
%  Done loading 10 models.

% for medv |lookupPos| = 13
% for medv |lookupNeg| = 0
% getJointExamples: |pos| = 13, |neg| = 0
% [ LazyGroundClauseIndex ]  Building full index for rm/2 with 13 assertions.
% [ LazyGroundClauseIndex ]  Building full index for zn/2 with 14 assertions.
% [ LazyGroundClauseIndex ]  Building full index for nox/2 with 12 assertions.
% [ LazyGroundClauseIndex ]  Building full index for dis/2 with 13 assertions.
% [ LazyGroundClauseIndex ]  Building full index for crim/2 with 13 assertions.
% [ LazyGroundClauseIndex ]  Building full index for lstat/2 with 13 assertions.
% [ LazyGroundClauseIndex ]  Building full index for age/2 with 13 assertions.
% [ LazyGroundClauseIndex ]  Building full index for tax/2 with 13 assertions.
% [ LazyGroundClauseIndex ]  Building full index for indus/2 with 13 assertions.
% [ LazyGroundClauseIndex ]  Building full index for rad/2 with 12 assertions.
% [ LazyGroundClauseIndex ]  Building full index for ptratio/2 with 11 assertions.
% [ LazyGroundClauseIndex ]  Building full index for b/2 with 13 assertions.
medv
SquaredError = 171.5726095436601
MeanSquaredError = 13.197893041820008

% Total inference time (10 trees): 64 milliseconds.
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
