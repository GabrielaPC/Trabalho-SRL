<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="edu.wisc.cs.will.RDNInferenceTestToyFatherTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2022-10-20T17:10:35" hostname="Ubuntu" time="0.285">
  <properties/>
  <testcase name="testToyFatherInferenceFromModels()" classname="edu.wisc.cs.will.RDNInferenceTestToyFatherTest" time="0.285"/>
  <system-out><![CDATA[
% Starting an INFERENCE run of bRDN.

% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

Resetting the LazyGroundNthArgumentClauseIndex.

% Calling ILPouterLoop from createRegressionOuterLooper.

% getInputArgWithDefaultValue: args=[data/toy_father_infer/test/test_pos.txt, data/toy_father_infer/test/test_neg.txt, data/toy_father_infer/test/test_bk.txt, data/toy_father_infer/test/test_facts.txt]
%  for N=0: args[N]=data/toy_father_infer/test/test_pos.txt

% getInputArgWithDefaultValue: args=[data/toy_father_infer/test/test_pos.txt, data/toy_father_infer/test/test_neg.txt, data/toy_father_infer/test/test_bk.txt, data/toy_father_infer/test/test_facts.txt]
%  for N=1: args[N]=data/toy_father_infer/test/test_neg.txt

% getInputArgWithDefaultValue: args=[data/toy_father_infer/test/test_pos.txt, data/toy_father_infer/test/test_neg.txt, data/toy_father_infer/test/test_bk.txt, data/toy_father_infer/test/test_facts.txt]
%  for N=2: args[N]=data/toy_father_infer/test/test_bk.txt

% getInputArgWithDefaultValue: args=[data/toy_father_infer/test/test_pos.txt, data/toy_father_infer/test/test_neg.txt, data/toy_father_infer/test/test_bk.txt, data/toy_father_infer/test/test_facts.txt]
%  for N=3: args[N]=data/toy_father_infer/test/test_facts.txt

% Welcome to the WILL ILP/SRL systems.

% Reading background theory from dir: null

% Switching to VarIndicator = uppercase.

***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****

% [ LazyGroundClauseIndex ]  Building full index for mode/1 with 1 assertions.

%  Read the facts.
%  Have read 11 facts.
% Have read 7 examples from 'data/toy_father_infer/test' [data/toy_father_infer/test/test*].
% Have read 0 examples from 'data/toy_father_infer/test' [data/toy_father_infer/test/test*].

%  LearnOneClause initialized.

% The outer looper has been created.

% Initializing the ILP inner looper.

% NEW target:                 father(A, B)
%  targetPred:                father/2
%  targetArgTypes:            signature = [const, const], types = [+name, +name]
%  targets:                   [father(A, B)]
%  targetPredicates:          [father/2]
%  targetArgSpecs:            [[A[+name], B[+name]]]
%  variablesInTargets:        [[A, B]]

% Started collecting constants

% Collecting the types of constants.

% Looking at the training examples to see if any types of new constants can be inferred.
% Time to collect constants: 0 seconds

% Read 7 pos examples and 0 neg examples.
% Time to init learnOneClause: 1 milliseconds
% Old dirdata/toy_father_infer/models/

% Have 7 'raw' positive examples and kept 7.
% Have 0 'raw' negative examples and kept 0.
% No neg ex for father

% processing backup's for father
%  POS EX = 7
%  NEG EX = 0

% Memory usage by WILLSetup (just counts # targets?):
%  |backupPosExamples| = 1
%  |backupNegExamples| = 1
%  |predicatesAsFacts| = 0
%  |addedToFactBase|   = 0

% Getting bRDN's target predicates.
% Did not learn a model for 'father' this run.
%   loadModel (#0): data/toy_father_infer/models/bRDNs/Trees/fatherTree0.tree
%   loadModel (#1): data/toy_father_infer/models/bRDNs/Trees/fatherTree1.tree
%   loadModel (#2): data/toy_father_infer/models/bRDNs/Trees/fatherTree2.tree
%   loadModel (#3): data/toy_father_infer/models/bRDNs/Trees/fatherTree3.tree
%   loadModel (#4): data/toy_father_infer/models/bRDNs/Trees/fatherTree4.tree
%   loadModel (#5): data/toy_father_infer/models/bRDNs/Trees/fatherTree5.tree
%   loadModel (#6): data/toy_father_infer/models/bRDNs/Trees/fatherTree6.tree
%   loadModel (#7): data/toy_father_infer/models/bRDNs/Trees/fatherTree7.tree
%   loadModel (#8): data/toy_father_infer/models/bRDNs/Trees/fatherTree8.tree
%   loadModel (#9): data/toy_father_infer/models/bRDNs/Trees/fatherTree9.tree
%   loadModel (#10): data/toy_father_infer/models/bRDNs/Trees/fatherTree10.tree
%   loadModel (#11): data/toy_father_infer/models/bRDNs/Trees/fatherTree11.tree
%   loadModel (#12): data/toy_father_infer/models/bRDNs/Trees/fatherTree12.tree
%   loadModel (#13): data/toy_father_infer/models/bRDNs/Trees/fatherTree13.tree
%   loadModel (#14): data/toy_father_infer/models/bRDNs/Trees/fatherTree14.tree
%  Done loading 15 models.

% for father |lookupPos| = 7
% for father |lookupNeg| = 0
% getJointExamples: |pos| = 7, |neg| = 0

% Starting inference in bRDN.
% Trees = 15

% Starting getMarginalProbabilities.
% [ LazyGroundClauseIndex ]  Building full index for childof/2 with 6 assertions.
% [ LazyGroundClauseIndex ]  Building full index for male/1 with 3 assertions.
 (Arithmetic) Mean Probability Assigned to Correct Output Class: 2,952/7,00 = 0,421783

 The weighted count of positive examples = 7,000 and the weighted count of negative examples = 0,000

printExamples: Writing out predictions (for Tuffy?) on 7 examples for 'father' to:
  data/toy_father_infer/test/results_father.db
 and to:
  data/toy_father_infer/test/query_father.db

% Computing Area Under Curves.
%Pos=7
%Neg=0
%LL:-12.618415411163285
%LL:-12.618415411163285

No negative examples in ComputeAUC.  Using AUC-ROC = 1.0 and AUC-PR = 1.0
Best F1 = 0.6
% F1 = 0.6
% Threshold = 0.48453597510030866

%   AUC ROC   = 1,000000
%   AUC PR    = 1,000000
%   CLL	      = -1,802631
%   Precision = 1,000000 at threshold = 0,500
%   Recall    = 0,428571
%   F1        = 0,600000

% Total inference time (15 trees): 283 milliseconds.
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
