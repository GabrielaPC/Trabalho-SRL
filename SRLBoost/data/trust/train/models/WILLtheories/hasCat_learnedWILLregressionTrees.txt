usePrologVariables: true.

% maxTreeDepthInNodes                 = 6
% maxTreeDepthInLiterals              = 3
% maxNumberOfLiteralsAtAnInteriorNode = 3
% maxFreeBridgersInBody               = 0
% maxNumberOfClauses                  = 8
% maxNodesToConsider                  = 50
% maxNodesToCreate                    = 50.000
% maxAcceptableNodeScoreToStop        = 0,003
% negPosRatio                         = 2,000
% testNegPosRatio                     = -1,000
% # of pos examples                   = 1.863
% # of neg examples                   = 0



%%%%%  WILL-Produced Tree #1 @ 0:02:06 10/21/22.  %%%%%

% FOR hasCat(A, B):
%   if ( link(A, C), link(D, A), link(D, C) )
%   then return 0.7943191478654691;  // std dev = 2,370, 94,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=88 */
%   else if ( link(A, E), link(E, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( link(A, F), link(F, G), link(G, H) )
%   | | then return 0.702976521306409;  // std dev = 2,757, 58,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=49 */
%   | | else if ( link(I, A) )
%   | | | then if ( link(J, I), link(J, A) )
%   | | | | then return 0.6934430527465718;  // std dev = 3,420, 85,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=71 */
%   | | | | else if ( link(K, I) )
%   | | | | | then return 0.7665458816643959;  // std dev = 0,288, 131,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=119 */
%   | | | | | else if ( link(A, L) )
%   | | | | | | then return 0.7552077586289245;  // std dev = 2,506, 68,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=61 */
%   | | | | | | else return 0.7358467768261269;  // std dev = 6,690, 417,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=366 */
%   | | | else if ( link(A, M), link(N, M), link(P, N) )
%   | | | | then return 0.7100007869513628;  // std dev = 3,692, 108,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=92 */
%   | | | | else return 0.7550099216465933;  // std dev = 0,304, 892,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=800 */


% Clauses:

hasCat(A, B, 0.7943191478654691) :- 
     link(A, C), 
     link(D, A), 
     link(D, C), 
     !. // Clause #1.

hasCat(A, B, 0.8581489350995122) :- 
     link(A, C), 
     link(C, A), 
     !. // Clause #2.

hasCat(A, B, 0.702976521306409) :- 
     link(A, C), 
     link(C, D), 
     link(D, E), 
     !. // Clause #3.

hasCat(A, B, 0.6934430527465718) :- 
     link(C, A), 
     link(D, C), 
     link(D, A), 
     !. // Clause #4.

hasCat(A, B, 0.7665458816643959) :- 
     link(C, A), 
     link(D, C), 
     !. // Clause #5.

hasCat(A, B, 0.7552077586289245) :- 
     link(C, A), 
     link(A, D), 
     !. // Clause #6.

hasCat(A, B, 0.7358467768261269) :- 
     link(C, A), 
     !. // Clause #7.

hasCat(A, B, 0.7100007869513628) :- 
     link(A, C), 
     link(D, C), 
     link(E, D), 
     !. // Clause #8.

hasCat(A, B, 0.7550099216465933) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_hasCat(a, underscore, 0.7943191478654691) :-  /* #neg=6 #pos=88 */ 
   link(a, uniqueVar1),
   link(uniqueVar2, a),
   link(uniqueVar2, uniqueVar1),
   !. // Flattened version of clause #1.

flattened_hasCat(a, underscore, 0.8581489350995122) :-  /* #pos=10 */ 
   link(a, uniqueVar3),
   link(uniqueVar3, a),
   !. // Flattened version of clause #2.

flattened_hasCat(a, underscore, 0.702976521306409) :-  /* #neg=9 #pos=49 */ 
   link(a, uniqueVar4),
   link(uniqueVar4, uniqueVar5),
   link(uniqueVar5, underscore),
   !. // Flattened version of clause #3.

flattened_hasCat(a, underscore, 0.6934430527465718) :-  /* #neg=14 #pos=71 */ 
   link(uniqueVar6, a),
   link(uniqueVar7, uniqueVar6),
   link(uniqueVar7, a),
   !. // Flattened version of clause #4.

flattened_hasCat(a, underscore, 0.7665458816643959) :-  /* #neg=12 #pos=119 */ 
   link(uniqueVar8, a),
   link(underscore, uniqueVar8),
   !. // Flattened version of clause #5.

flattened_hasCat(a, underscore, 0.7552077586289245) :-  /* #neg=7 #pos=61 */ 
   link(underscore, a),
   link(a, underscore),
   !. // Flattened version of clause #6.

flattened_hasCat(a, underscore, 0.7358467768261269) :-  /* #neg=51 #pos=366 */ 
   link(underscore, a),
   !. // Flattened version of clause #7.

flattened_hasCat(a, underscore, 0.7100007869513628) :-  /* #neg=16 #pos=92 */ 
   link(a, uniqueVar9),
   link(uniqueVar10, uniqueVar9),
   link(underscore, uniqueVar10),
   !. // Flattened version of clause #8.

flattened_hasCat(underscore, underscore, 0.7550099216465933) :-  /* #neg=92 #pos=800 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   link(uniqueVar2, a)
%   link(a, uniqueVar4)
%   link(uniqueVar7, a)
%   link(a, uniqueVar9)
%   link(underscore, a)
%   link(a, uniqueVar3)
%   link(uniqueVar3, a)
%   link(underscore, uniqueVar8)
%   link(uniqueVar2, uniqueVar1)
%   link(uniqueVar8, a)
%   link(uniqueVar10, uniqueVar9)
%   link(uniqueVar7, uniqueVar6)
%   link(uniqueVar4, uniqueVar5)
%   link(a, uniqueVar1)
%   link(uniqueVar6, a)
%   link(a, underscore)
%   link(underscore, uniqueVar10)
%   link(uniqueVar5, underscore)

%%%%%  WILL-Produced Tree #2 @ 0:02:10 10/21/22.  %%%%%

% FOR hasCat(A, B):
%   if ( link(A, C), link(D, A) )
%   then return 0.6556271401690266;  // std dev = 0,271, 200,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=184 */
%   else if ( link(E, A), link(E, F), link(F, A) )
%   | then return 0.5804340313289483;  // std dev = 3,283, 76,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=63 */
%   | else if ( link(A, G) )
%   | | then if ( link(H, G), link(I, H) )
%   | | | then return 0.5969943667759882;  // std dev = 4,320, 145,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=123 */
%   | | | else if ( link(G, J) )
%   | | | | then return 0.6506990186370245;  // std dev = 0,289, 54,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=49 */
%   | | | | else return 0.6211066608817803;  // std dev = 0,323, 278,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=245 */
%   | | else if ( link(K, A) )
%   | | | then if ( link(L, K) )
%   | | | | then return 0.6498657022568206;  // std dev = 0,283, 114,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=104 */
%   | | | | else if ( link(K, M), link(M, N) )
%   | | | | | then return 0.6222713101074494;  // std dev = 3,750, 132,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=116 */
%   | | | | | else return 0.6206764137757078;  // std dev = 0,328, 285,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=250 */
%   | | | else return 0.6413661009980773;  // std dev = 0,298, 579,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=522 */


% Clauses:

hasCat(A, B, 0.6556271401690266) :- 
     link(A, C), 
     link(D, A), 
     !. // Clause #1.

hasCat(A, B, 0.5804340313289483) :- 
     link(C, A), 
     link(C, D), 
     link(D, A), 
     !. // Clause #2.

hasCat(A, B, 0.5969943667759882) :- 
     link(A, C), 
     link(D, C), 
     link(E, D), 
     !. // Clause #3.

hasCat(A, B, 0.6506990186370245) :- 
     link(A, C), 
     link(C, D), 
     !. // Clause #4.

hasCat(A, B, 0.6211066608817803) :- 
     link(A, C), 
     !. // Clause #5.

hasCat(A, B, 0.6498657022568206) :- 
     link(C, A), 
     link(D, C), 
     !. // Clause #6.

hasCat(A, B, 0.6222713101074494) :- 
     link(C, A), 
     link(C, D), 
     link(D, E), 
     !. // Clause #7.

hasCat(A, B, 0.6206764137757078) :- 
     link(C, A), 
     !. // Clause #8.

hasCat(A, B, 0.6413661009980773) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_hasCat(a, underscore, 0.6556271401690266) :-  /* #neg=16 #pos=184 */ 
   link(a, underscore),
   link(underscore, a),
   !. // Flattened version of clause #1.

flattened_hasCat(a, underscore, 0.5804340313289483) :-  /* #neg=13 #pos=63 */ 
   link(uniqueVar11, a),
   link(uniqueVar11, uniqueVar12),
   link(uniqueVar12, a),
   !. // Flattened version of clause #2.

flattened_hasCat(a, underscore, 0.5969943667759882) :-  /* #neg=22 #pos=123 */ 
   link(a, uniqueVar13),
   link(uniqueVar14, uniqueVar13),
   link(underscore, uniqueVar14),
   !. // Flattened version of clause #3.

flattened_hasCat(a, underscore, 0.6506990186370245) :-  /* #neg=5 #pos=49 */ 
   link(a, uniqueVar15),
   link(uniqueVar15, underscore),
   !. // Flattened version of clause #4.

flattened_hasCat(a, underscore, 0.6211066608817803) :-  /* #neg=33 #pos=245 */ 
   link(a, underscore),
   !. // Flattened version of clause #5.

flattened_hasCat(a, underscore, 0.6498657022568206) :-  /* #neg=10 #pos=104 */ 
   link(uniqueVar16, a),
   link(underscore, uniqueVar16),
   !. // Flattened version of clause #6.

flattened_hasCat(a, underscore, 0.6222713101074494) :-  /* #neg=16 #pos=116 */ 
   link(uniqueVar17, a),
   link(uniqueVar17, uniqueVar18),
   link(uniqueVar18, underscore),
   !. // Flattened version of clause #7.

flattened_hasCat(a, underscore, 0.6206764137757078) :-  /* #neg=35 #pos=250 */ 
   link(underscore, a),
   !. // Flattened version of clause #8.

flattened_hasCat(underscore, underscore, 0.6413661009980773) :-  /* #neg=57 #pos=522 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   link(uniqueVar12, a)
%   link(uniqueVar14, uniqueVar13)
%   link(uniqueVar17, uniqueVar18)
%   link(a, uniqueVar15)
%   link(uniqueVar11, a)
%   link(uniqueVar16, a)
%   link(underscore, a)
%   link(underscore, uniqueVar14)
%   link(uniqueVar18, underscore)
%   link(uniqueVar15, underscore)
%   link(a, uniqueVar13)
%   link(uniqueVar11, uniqueVar12)
%   link(a, underscore)
%   link(underscore, uniqueVar16)
%   link(uniqueVar17, a)

%%%%%  WILL-Produced Tree #3 @ 0:02:14 10/21/22.  %%%%%

% FOR hasCat(A, B):
%   if ( link(C, A), link(C, D), link(D, C) )
%   then return 0.5698608219660303;  // std dev = 0,962, 41,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   else if ( link(A, E), link(E, F) )
%   | then if ( link(F, G) )
%   | | then return 0.46618047903735066;  // std dev = 2,916, 68,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=58 */
%   | | else if ( link(A, F) )
%   | | | then return 0.4517766442878461;  // std dev = 2,423, 44,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   | | | else return 0.5002274828819973;  // std dev = 0,303, 87,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=78 */
%   | else if ( link(H, A), link(I, H), link(J, I) )
%   | | then return 0.4345543419412291;  // std dev = 3,386, 80,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=66 */
%   | | else if ( link(K, A), link(L, K) )
%   | | | then return 0.5226047194199723;  // std dev = 0,268, 140,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=129 */
%   | | | else if ( link(M, A) )
%   | | | | then if ( link(A, N) )
%   | | | | | then return 0.500494452959205;  // std dev = 0,289, 76,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=69 */
%   | | | | | else return 0.4866647861326939;  // std dev = 0,328, 417,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=366 */
%   | | | | else return 0.49568552682051403;  // std dev = 0,308, 910,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=813 */


% Clauses:

hasCat(A, B, 0.5698608219660303) :- 
     link(C, A), 
     link(C, D), 
     link(D, C), 
     !. // Clause #1.

hasCat(A, B, 0.46618047903735066) :- 
     link(A, C), 
     link(C, D), 
     link(D, E), 
     !. // Clause #2.

hasCat(A, B, 0.4517766442878461) :- 
     link(A, C), 
     link(C, D), 
     link(A, D), 
     !. // Clause #3.

hasCat(A, B, 0.5002274828819973) :- 
     link(A, C), 
     link(C, D), 
     !. // Clause #4.

hasCat(A, B, 0.4345543419412291) :- 
     link(C, A), 
     link(D, C), 
     link(E, D), 
     !. // Clause #5.

hasCat(A, B, 0.5226047194199723) :- 
     link(C, A), 
     link(D, C), 
     !. // Clause #6.

hasCat(A, B, 0.500494452959205) :- 
     link(C, A), 
     link(A, D), 
     !. // Clause #7.

hasCat(A, B, 0.4866647861326939) :- 
     link(C, A), 
     !. // Clause #8.

hasCat(A, B, 0.49568552682051403) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_hasCat(a, underscore, 0.5698608219660303) :-  /* #neg=1 #pos=40 */ 
   link(uniqueVar19, a),
   link(uniqueVar19, uniqueVar20),
   link(uniqueVar20, uniqueVar19),
   !. // Flattened version of clause #1.

flattened_hasCat(a, underscore, 0.46618047903735066) :-  /* #neg=10 #pos=58 */ 
   link(a, uniqueVar21),
   link(uniqueVar21, uniqueVar22),
   link(uniqueVar22, underscore),
   !. // Flattened version of clause #2.

flattened_hasCat(a, underscore, 0.4517766442878461) :-  /* #neg=7 #pos=37 */ 
   link(a, uniqueVar23),
   link(uniqueVar23, uniqueVar24),
   link(a, uniqueVar24),
   !. // Flattened version of clause #3.

flattened_hasCat(a, underscore, 0.5002274828819973) :-  /* #neg=9 #pos=78 */ 
   link(a, uniqueVar25),
   link(uniqueVar25, underscore),
   !. // Flattened version of clause #4.

flattened_hasCat(a, underscore, 0.4345543419412291) :-  /* #neg=14 #pos=66 */ 
   link(uniqueVar26, a),
   link(uniqueVar27, uniqueVar26),
   link(underscore, uniqueVar27),
   !. // Flattened version of clause #5.

flattened_hasCat(a, underscore, 0.5226047194199723) :-  /* #neg=11 #pos=129 */ 
   link(uniqueVar28, a),
   link(underscore, uniqueVar28),
   !. // Flattened version of clause #6.

flattened_hasCat(a, underscore, 0.500494452959205) :-  /* #neg=7 #pos=69 */ 
   link(underscore, a),
   link(a, underscore),
   !. // Flattened version of clause #7.

flattened_hasCat(a, underscore, 0.4866647861326939) :-  /* #neg=51 #pos=366 */ 
   link(underscore, a),
   !. // Flattened version of clause #8.

flattened_hasCat(underscore, underscore, 0.49568552682051403) :-  /* #neg=97 #pos=813 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   link(uniqueVar23, uniqueVar24)
%   link(uniqueVar19, a)
%   link(a, uniqueVar21)
%   link(underscore, a)
%   link(a, uniqueVar25)
%   link(uniqueVar27, uniqueVar26)
%   link(underscore, uniqueVar27)
%   link(uniqueVar19, uniqueVar20)
%   link(a, uniqueVar23)
%   link(uniqueVar21, uniqueVar22)
%   link(uniqueVar28, a)
%   link(a, uniqueVar24)
%   link(uniqueVar25, underscore)
%   link(uniqueVar26, a)
%   link(uniqueVar22, underscore)
%   link(underscore, uniqueVar28)
%   link(uniqueVar20, uniqueVar19)
%   link(a, underscore)

%%%%%  WILL-Produced Tree #4 @ 0:02:16 10/21/22.  %%%%%

% FOR hasCat(A, B):
%   if ( link(C, A), link(C, D), link(D, C) )
%   then return 0.42894779986706005;  // std dev = 0,961, 41,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   else if ( link(A, E) )
%   | then if ( link(F, E), link(F, A) )
%   | | then return 0.38616787435107836;  // std dev = 2,344, 77,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=71 */
%   | | else if ( link(E, G) )
%   | | | then if ( link(A, G) )
%   | | | | then return 0.36709714240078495;  // std dev = 2,781, 65,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=56 */
%   | | | | else if ( link(G, E) )
%   | | | | | then return 0.22274706465266075;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | | else if ( link(H, A) )
%   | | | | | | then return 0.3163811866186024;  // std dev = 1,586, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | | | | else return 0.370172965150357;  // std dev = 2,954, 85,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=75 */
%   | | | else if ( link(I, A) )
%   | | | | then return 0.38181654609410676;  // std dev = 0,289, 65,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   | | | | else return 0.3639769705500133;  // std dev = 0,326, 331,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=291 */
%   | else return 0.371959399065584;  // std dev = 0,313, 1.173,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=1.043 */


% Clauses:

hasCat(A, B, 0.42894779986706005) :- 
     link(C, A), 
     link(C, D), 
     link(D, C), 
     !. // Clause #1.

hasCat(A, B, 0.38616787435107836) :- 
     link(A, C), 
     link(D, C), 
     link(D, A), 
     !. // Clause #2.

hasCat(A, B, 0.36709714240078495) :- 
     link(A, C), 
     link(C, D), 
     link(A, D), 
     !. // Clause #3.

hasCat(A, B, 0.22274706465266075) :- 
     link(A, C), 
     link(C, D), 
     link(D, C), 
     !. // Clause #4.

hasCat(A, B, 0.3163811866186024) :- 
     link(A, C), 
     link(C, D), 
     link(E, A), 
     !. // Clause #5.

hasCat(A, B, 0.370172965150357) :- 
     link(A, C), 
     link(C, D), 
     !. // Clause #6.

hasCat(A, B, 0.38181654609410676) :- 
     link(A, C), 
     link(D, A), 
     !. // Clause #7.

hasCat(A, B, 0.3639769705500133) :- 
     link(A, C), 
     !. // Clause #8.

hasCat(A, B, 0.371959399065584) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_hasCat(a, underscore, 0.42894779986706005) :-  /* #neg=1 #pos=40 */ 
   link(uniqueVar29, a),
   link(uniqueVar29, uniqueVar30),
   link(uniqueVar30, uniqueVar29),
   !. // Flattened version of clause #1.

flattened_hasCat(a, underscore, 0.38616787435107836) :-  /* #neg=6 #pos=71 */ 
   link(a, uniqueVar31),
   link(uniqueVar32, uniqueVar31),
   link(uniqueVar32, a),
   !. // Flattened version of clause #2.

flattened_hasCat(a, underscore, 0.36709714240078495) :-  /* #neg=9 #pos=56 */ 
   link(a, uniqueVar33),
   link(uniqueVar33, uniqueVar34),
   link(a, uniqueVar34),
   !. // Flattened version of clause #3.

flattened_hasCat(a, underscore, 0.22274706465266075) :-  /* #neg=2 #pos=5 */ 
   link(a, uniqueVar35),
   link(uniqueVar35, uniqueVar36),
   link(uniqueVar36, uniqueVar35),
   !. // Flattened version of clause #4.

flattened_hasCat(a, underscore, 0.3163811866186024) :-  /* #neg=3 #pos=16 */ 
   link(a, uniqueVar37),
   link(uniqueVar37, underscore),
   link(underscore, a),
   !. // Flattened version of clause #5.

flattened_hasCat(a, underscore, 0.370172965150357) :-  /* #neg=10 #pos=75 */ 
   link(a, uniqueVar38),
   link(uniqueVar38, underscore),
   !. // Flattened version of clause #6.

flattened_hasCat(a, underscore, 0.38181654609410676) :-  /* #neg=6 #pos=59 */ 
   link(a, underscore),
   link(underscore, a),
   !. // Flattened version of clause #7.

flattened_hasCat(a, underscore, 0.3639769705500133) :-  /* #neg=40 #pos=291 */ 
   link(a, underscore),
   !. // Flattened version of clause #8.

flattened_hasCat(underscore, underscore, 0.371959399065584) :-  /* #neg=130 #pos=1.043 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   link(a, uniqueVar31)
%   link(a, uniqueVar38)
%   link(uniqueVar33, uniqueVar34)
%   link(uniqueVar37, underscore)
%   link(underscore, a)
%   link(uniqueVar35, uniqueVar36)
%   link(uniqueVar29, uniqueVar30)
%   link(uniqueVar32, a)
%   link(a, uniqueVar37)
%   link(a, uniqueVar34)
%   link(uniqueVar30, uniqueVar29)
%   link(a, uniqueVar33)
%   link(uniqueVar29, a)
%   link(uniqueVar32, uniqueVar31)
%   link(uniqueVar36, uniqueVar35)
%   link(a, underscore)
%   link(a, uniqueVar35)
%   link(uniqueVar38, underscore)

%%%%%  WILL-Produced Tree #5 @ 0:02:20 10/21/22.  %%%%%

% FOR hasCat(A, B):
%   if ( link(C, A), link(A, D) )
%   then return 0.29342098310634523;  // std dev = 0,269, 200,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=184 */
%   else if ( link(E, A), link(E, F), link(F, A) )
%   | then return 0.2444577131799405;  // std dev = 3,267, 76,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=63 */
%   | else if ( link(A, G), link(H, G), link(I, H) )
%   | | then return 0.26281173589270235;  // std dev = 4,311, 145,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=123 */
%   | | else if ( link(J, A), link(K, J) )
%   | | | then return 0.2924646654884613;  // std dev = 0,282, 114,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=104 */
%   | | | else if ( link(L, A) )
%   | | | | then if ( link(L, M), link(M, N) )
%   | | | | | then return 0.27608443678874134;  // std dev = 3,750, 132,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=116 */
%   | | | | | else return 0.2748715040634025;  // std dev = 0,328, 285,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=250 */
%   | | | | else if ( link(A, P) )
%   | | | | | then if ( link(P, Q) )
%   | | | | | | then return 0.2978053725800301;  // std dev = 2,119, 54,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=49 */
%   | | | | | | else return 0.2740421523497052;  // std dev = 5,393, 278,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=245 */
%   | | | | | else return 0.2875867818016176;  // std dev = 0,298, 579,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=522 */


% Clauses:

hasCat(A, B, 0.29342098310634523) :- 
     link(C, A), 
     link(A, D), 
     !. // Clause #1.

hasCat(A, B, 0.2444577131799405) :- 
     link(C, A), 
     link(C, D), 
     link(D, A), 
     !. // Clause #2.

hasCat(A, B, 0.26281173589270235) :- 
     link(A, C), 
     link(D, C), 
     link(E, D), 
     !. // Clause #3.

hasCat(A, B, 0.2924646654884613) :- 
     link(C, A), 
     link(D, C), 
     !. // Clause #4.

hasCat(A, B, 0.27608443678874134) :- 
     link(C, A), 
     link(C, D), 
     link(D, E), 
     !. // Clause #5.

hasCat(A, B, 0.2748715040634025) :- 
     link(C, A), 
     !. // Clause #6.

hasCat(A, B, 0.2978053725800301) :- 
     link(A, C), 
     link(C, D), 
     !. // Clause #7.

hasCat(A, B, 0.2740421523497052) :- 
     link(A, C), 
     !. // Clause #8.

hasCat(A, B, 0.2875867818016176) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_hasCat(a, underscore, 0.29342098310634523) :-  /* #neg=16 #pos=184 */ 
   link(underscore, a),
   link(a, underscore),
   !. // Flattened version of clause #1.

flattened_hasCat(a, underscore, 0.2444577131799405) :-  /* #neg=13 #pos=63 */ 
   link(uniqueVar39, a),
   link(uniqueVar39, uniqueVar40),
   link(uniqueVar40, a),
   !. // Flattened version of clause #2.

flattened_hasCat(a, underscore, 0.26281173589270235) :-  /* #neg=22 #pos=123 */ 
   link(a, uniqueVar41),
   link(uniqueVar42, uniqueVar41),
   link(underscore, uniqueVar42),
   !. // Flattened version of clause #3.

flattened_hasCat(a, underscore, 0.2924646654884613) :-  /* #neg=10 #pos=104 */ 
   link(uniqueVar43, a),
   link(underscore, uniqueVar43),
   !. // Flattened version of clause #4.

flattened_hasCat(a, underscore, 0.27608443678874134) :-  /* #neg=16 #pos=116 */ 
   link(uniqueVar44, a),
   link(uniqueVar44, uniqueVar45),
   link(uniqueVar45, underscore),
   !. // Flattened version of clause #5.

flattened_hasCat(a, underscore, 0.2748715040634025) :-  /* #neg=35 #pos=250 */ 
   link(underscore, a),
   !. // Flattened version of clause #6.

flattened_hasCat(a, underscore, 0.2978053725800301) :-  /* #neg=5 #pos=49 */ 
   link(a, uniqueVar46),
   link(uniqueVar46, underscore),
   !. // Flattened version of clause #7.

flattened_hasCat(a, underscore, 0.2740421523497052) :-  /* #neg=33 #pos=245 */ 
   link(a, underscore),
   !. // Flattened version of clause #8.

flattened_hasCat(underscore, underscore, 0.2875867818016176) :-  /* #neg=57 #pos=522 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   link(underscore, uniqueVar43)
%   link(uniqueVar44, a)
%   link(a, uniqueVar46)
%   link(underscore, a)
%   link(a, uniqueVar41)
%   link(uniqueVar39, a)
%   link(uniqueVar42, uniqueVar41)
%   link(uniqueVar46, underscore)
%   link(uniqueVar39, uniqueVar40)
%   link(uniqueVar45, underscore)
%   link(uniqueVar43, a)
%   link(uniqueVar44, uniqueVar45)
%   link(uniqueVar40, a)
%   link(a, underscore)
%   link(underscore, uniqueVar42)

%%%%%  WILL-Produced Tree #6 @ 0:02:23 10/21/22.  %%%%%

% FOR hasCat(A, B):
%   if ( link(C, A), link(A, D), link(C, D) )
%   then return 0.23677345303008915;  // std dev = 2,353, 94,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=88 */
%   else if ( link(E, A), link(F, E), link(G, F) )
%   | then return 0.1975518336185988;  // std dev = 3,420, 101,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=87 */
%   | else if ( link(A, H), link(H, I) )
%   | | then if ( link(I, H) )
%   | | | then return 0.22924275678861136;  // std dev = 1,285, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else if ( link(J, A) )
%   | | | | then return 0.18578024047514294;  // std dev = 1,849, 28,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | | | else if ( link(I, K) )
%   | | | | | then return 0.17913372115566242;  // std dev = 2,415, 42,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=35 */
%   | | | | | else return 0.21513105830542045;  // std dev = 0,325, 90,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=79 */
%   | | else if ( link(L, A), link(M, L) )
%   | | | then return 0.236223291650693;  // std dev = 0,276, 119,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=109 */
%   | | | else if ( link(N, A) )
%   | | | | then return 0.2112411449072366;  // std dev = 0,325, 465,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=409 */
%   | | | | else return 0.2182600586562535;  // std dev = 0,308, 910,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=813 */


% Clauses:

hasCat(A, B, 0.23677345303008915) :- 
     link(C, A), 
     link(A, D), 
     link(C, D), 
     !. // Clause #1.

hasCat(A, B, 0.1975518336185988) :- 
     link(C, A), 
     link(D, C), 
     link(E, D), 
     !. // Clause #2.

hasCat(A, B, 0.22924275678861136) :- 
     link(A, C), 
     link(C, D), 
     link(D, C), 
     !. // Clause #3.

hasCat(A, B, 0.18578024047514294) :- 
     link(A, C), 
     link(C, D), 
     link(E, A), 
     !. // Clause #4.

hasCat(A, B, 0.17913372115566242) :- 
     link(A, C), 
     link(C, D), 
     link(D, E), 
     !. // Clause #5.

hasCat(A, B, 0.21513105830542045) :- 
     link(A, C), 
     link(C, D), 
     !. // Clause #6.

hasCat(A, B, 0.236223291650693) :- 
     link(C, A), 
     link(D, C), 
     !. // Clause #7.

hasCat(A, B, 0.2112411449072366) :- 
     link(C, A), 
     !. // Clause #8.

hasCat(A, B, 0.2182600586562535) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_hasCat(a, underscore, 0.23677345303008915) :-  /* #neg=6 #pos=88 */ 
   link(uniqueVar47, a),
   link(a, uniqueVar48),
   link(uniqueVar47, uniqueVar48),
   !. // Flattened version of clause #1.

flattened_hasCat(a, underscore, 0.1975518336185988) :-  /* #neg=14 #pos=87 */ 
   link(uniqueVar49, a),
   link(uniqueVar50, uniqueVar49),
   link(underscore, uniqueVar50),
   !. // Flattened version of clause #2.

flattened_hasCat(a, underscore, 0.22924275678861136) :-  /* #neg=2 #pos=12 */ 
   link(a, uniqueVar51),
   link(uniqueVar51, uniqueVar52),
   link(uniqueVar52, uniqueVar51),
   !. // Flattened version of clause #3.

flattened_hasCat(a, underscore, 0.18578024047514294) :-  /* #neg=4 #pos=24 */ 
   link(a, uniqueVar53),
   link(uniqueVar53, underscore),
   link(underscore, a),
   !. // Flattened version of clause #4.

flattened_hasCat(a, underscore, 0.17913372115566242) :-  /* #neg=7 #pos=35 */ 
   link(a, uniqueVar54),
   link(uniqueVar54, uniqueVar55),
   link(uniqueVar55, underscore),
   !. // Flattened version of clause #5.

flattened_hasCat(a, underscore, 0.21513105830542045) :-  /* #neg=11 #pos=79 */ 
   link(a, uniqueVar56),
   link(uniqueVar56, underscore),
   !. // Flattened version of clause #6.

flattened_hasCat(a, underscore, 0.236223291650693) :-  /* #neg=10 #pos=109 */ 
   link(uniqueVar57, a),
   link(underscore, uniqueVar57),
   !. // Flattened version of clause #7.

flattened_hasCat(a, underscore, 0.2112411449072366) :-  /* #neg=56 #pos=409 */ 
   link(underscore, a),
   !. // Flattened version of clause #8.

flattened_hasCat(underscore, underscore, 0.2182600586562535) :-  /* #neg=97 #pos=813 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   link(uniqueVar54, uniqueVar55)
%   link(uniqueVar47, uniqueVar48)
%   link(a, uniqueVar56)
%   link(underscore, a)
%   link(a, uniqueVar48)
%   link(uniqueVar51, uniqueVar52)
%   link(uniqueVar56, underscore)
%   link(uniqueVar55, underscore)
%   link(uniqueVar47, a)
%   link(underscore, uniqueVar50)
%   link(uniqueVar49, a)
%   link(a, uniqueVar51)
%   link(a, uniqueVar53)
%   link(uniqueVar52, uniqueVar51)
%   link(underscore, uniqueVar57)
%   link(uniqueVar50, uniqueVar49)
%   link(a, uniqueVar54)
%   link(uniqueVar53, underscore)
%   link(uniqueVar57, a)

%%%%%  WILL-Produced Tree #7 @ 0:02:27 10/21/22.  %%%%%

% FOR hasCat(A, B):
%   if ( link(C, A), link(C, D), link(D, C) )
%   then return 0.22379465663696654;  // std dev = 0,959, 41,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   else if ( link(A, E), link(E, F), link(F, G) )
%   | then return 0.15564589845954901;  // std dev = 2,906, 68,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=58 */
%   | else if ( link(H, A), link(I, H), link(J, I) )
%   | | then return 0.13512988420165123;  // std dev = 3,396, 84,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=70 */
%   | | else if ( link(A, K), link(L, K), link(A, L) )
%   | | | then return 0.13570489854132092;  // std dev = 2,419, 43,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=36 */
%   | | | else if ( link(A, M) )
%   | | | | then if ( link(N, A), link(N, M) )
%   | | | | | then return 0.19883179625939745;  // std dev = 1,683, 54,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=51 */
%   | | | | | else if ( link(P, M), link(Q, P) )
%   | | | | | | then return 0.16322958698927556;  // std dev = 4,069, 154,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=135 */
%   | | | | | | else return 0.17012732196606165;  // std dev = 5,572, 313,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=278 */
%   | | | | else if ( link(R, A) )
%   | | | | | then return 0.1694006357580669;  // std dev = 0,320, 527,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=466 */
%   | | | | | else return 0.1764612595985586;  // std dev = 0,298, 579,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=522 */


% Clauses:

hasCat(A, B, 0.22379465663696654) :- 
     link(C, A), 
     link(C, D), 
     link(D, C), 
     !. // Clause #1.

hasCat(A, B, 0.15564589845954901) :- 
     link(A, C), 
     link(C, D), 
     link(D, E), 
     !. // Clause #2.

hasCat(A, B, 0.13512988420165123) :- 
     link(C, A), 
     link(D, C), 
     link(E, D), 
     !. // Clause #3.

hasCat(A, B, 0.13570489854132092) :- 
     link(A, C), 
     link(D, C), 
     link(A, D), 
     !. // Clause #4.

hasCat(A, B, 0.19883179625939745) :- 
     link(A, C), 
     link(D, A), 
     link(D, C), 
     !. // Clause #5.

hasCat(A, B, 0.16322958698927556) :- 
     link(A, C), 
     link(D, C), 
     link(E, D), 
     !. // Clause #6.

hasCat(A, B, 0.17012732196606165) :- 
     link(A, C), 
     !. // Clause #7.

hasCat(A, B, 0.1694006357580669) :- 
     link(C, A), 
     !. // Clause #8.

hasCat(A, B, 0.1764612595985586) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_hasCat(a, underscore, 0.22379465663696654) :-  /* #neg=1 #pos=40 */ 
   link(uniqueVar58, a),
   link(uniqueVar58, uniqueVar59),
   link(uniqueVar59, uniqueVar58),
   !. // Flattened version of clause #1.

flattened_hasCat(a, underscore, 0.15564589845954901) :-  /* #neg=10 #pos=58 */ 
   link(a, uniqueVar60),
   link(uniqueVar60, uniqueVar61),
   link(uniqueVar61, underscore),
   !. // Flattened version of clause #2.

flattened_hasCat(a, underscore, 0.13512988420165123) :-  /* #neg=14 #pos=70 */ 
   link(uniqueVar62, a),
   link(uniqueVar63, uniqueVar62),
   link(underscore, uniqueVar63),
   !. // Flattened version of clause #3.

flattened_hasCat(a, underscore, 0.13570489854132092) :-  /* #neg=7 #pos=36 */ 
   link(a, uniqueVar64),
   link(uniqueVar65, uniqueVar64),
   link(a, uniqueVar65),
   !. // Flattened version of clause #4.

flattened_hasCat(a, underscore, 0.19883179625939745) :-  /* #neg=3 #pos=51 */ 
   link(a, uniqueVar66),
   link(uniqueVar67, a),
   link(uniqueVar67, uniqueVar66),
   !. // Flattened version of clause #5.

flattened_hasCat(a, underscore, 0.16322958698927556) :-  /* #neg=19 #pos=135 */ 
   link(a, uniqueVar68),
   link(uniqueVar69, uniqueVar68),
   link(underscore, uniqueVar69),
   !. // Flattened version of clause #6.

flattened_hasCat(a, underscore, 0.17012732196606165) :-  /* #neg=35 #pos=278 */ 
   link(a, underscore),
   !. // Flattened version of clause #7.

flattened_hasCat(a, underscore, 0.1694006357580669) :-  /* #neg=61 #pos=466 */ 
   link(underscore, a),
   !. // Flattened version of clause #8.

flattened_hasCat(underscore, underscore, 0.1764612595985586) :-  /* #neg=57 #pos=522 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   link(underscore, uniqueVar69)
%   link(a, uniqueVar68)
%   link(uniqueVar62, a)
%   link(uniqueVar61, underscore)
%   link(underscore, uniqueVar63)
%   link(underscore, a)
%   link(uniqueVar67, a)
%   link(uniqueVar63, uniqueVar62)
%   link(a, uniqueVar60)
%   link(a, uniqueVar65)
%   link(uniqueVar58, a)
%   link(a, uniqueVar64)
%   link(a, uniqueVar66)
%   link(uniqueVar59, uniqueVar58)
%   link(uniqueVar58, uniqueVar59)
%   link(uniqueVar65, uniqueVar64)
%   link(uniqueVar67, uniqueVar66)
%   link(uniqueVar69, uniqueVar68)
%   link(uniqueVar60, uniqueVar61)
%   link(a, underscore)

%%%%%  WILL-Produced Tree #8 @ 0:02:31 10/21/22.  %%%%%

% FOR hasCat(A, B):
%   if ( link(C, A), link(C, D), link(D, C) )
%   then return 0.18451337399620513;  // std dev = 0,961, 41,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   else if ( link(E, A), link(F, E), link(G, F) )
%   | then return 0.10750084563887316;  // std dev = 3,397, 84,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=70 */
%   | else if ( link(H, A), link(H, I), link(A, I) )
%   | | then return 0.1510864023041478;  // std dev = 2,148, 70,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=65 */
%   | | else if ( link(A, J), link(K, J), link(L, K) )
%   | | | then return 0.12808477230404644;  // std dev = 5,157, 230,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=199 */
%   | | | else if ( link(M, A) )
%   | | | | then if ( link(N, M) )
%   | | | | | then return 0.14894761778080481;  // std dev = 0,287, 110,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=100 */
%   | | | | | else if ( link(M, P), link(P, Q) )
%   | | | | | | then return 0.13353191193682779;  // std dev = 3,750, 132,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=116 */
%   | | | | | | else return 0.13247044756820728;  // std dev = 5,541, 285,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=250 */
%   | | | | else if ( link(A, R), link(R, S) )
%   | | | | | then return 0.15526790709731605;  // std dev = 0,288, 54,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=49 */
%   | | | | | else return 0.13903479618855907;  // std dev = 0,306, 857,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=767 */


% Clauses:

hasCat(A, B, 0.18451337399620513) :- 
     link(C, A), 
     link(C, D), 
     link(D, C), 
     !. // Clause #1.

hasCat(A, B, 0.10750084563887316) :- 
     link(C, A), 
     link(D, C), 
     link(E, D), 
     !. // Clause #2.

hasCat(A, B, 0.1510864023041478) :- 
     link(C, A), 
     link(C, D), 
     link(A, D), 
     !. // Clause #3.

hasCat(A, B, 0.12808477230404644) :- 
     link(A, C), 
     link(D, C), 
     link(E, D), 
     !. // Clause #4.

hasCat(A, B, 0.14894761778080481) :- 
     link(C, A), 
     link(D, C), 
     !. // Clause #5.

hasCat(A, B, 0.13353191193682779) :- 
     link(C, A), 
     link(C, D), 
     link(D, E), 
     !. // Clause #6.

hasCat(A, B, 0.13247044756820728) :- 
     link(C, A), 
     !. // Clause #7.

hasCat(A, B, 0.15526790709731605) :- 
     link(A, C), 
     link(C, D), 
     !. // Clause #8.

hasCat(A, B, 0.13903479618855907) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_hasCat(a, underscore, 0.18451337399620513) :-  /* #neg=1 #pos=40 */ 
   link(uniqueVar70, a),
   link(uniqueVar70, uniqueVar71),
   link(uniqueVar71, uniqueVar70),
   !. // Flattened version of clause #1.

flattened_hasCat(a, underscore, 0.10750084563887316) :-  /* #neg=14 #pos=70 */ 
   link(uniqueVar72, a),
   link(uniqueVar73, uniqueVar72),
   link(underscore, uniqueVar73),
   !. // Flattened version of clause #2.

flattened_hasCat(a, underscore, 0.1510864023041478) :-  /* #neg=5 #pos=65 */ 
   link(uniqueVar74, a),
   link(uniqueVar74, uniqueVar75),
   link(a, uniqueVar75),
   !. // Flattened version of clause #3.

flattened_hasCat(a, underscore, 0.12808477230404644) :-  /* #neg=31 #pos=199 */ 
   link(a, uniqueVar76),
   link(uniqueVar77, uniqueVar76),
   link(underscore, uniqueVar77),
   !. // Flattened version of clause #4.

flattened_hasCat(a, underscore, 0.14894761778080481) :-  /* #neg=10 #pos=100 */ 
   link(uniqueVar78, a),
   link(underscore, uniqueVar78),
   !. // Flattened version of clause #5.

flattened_hasCat(a, underscore, 0.13353191193682779) :-  /* #neg=16 #pos=116 */ 
   link(uniqueVar79, a),
   link(uniqueVar79, uniqueVar80),
   link(uniqueVar80, underscore),
   !. // Flattened version of clause #6.

flattened_hasCat(a, underscore, 0.13247044756820728) :-  /* #neg=35 #pos=250 */ 
   link(underscore, a),
   !. // Flattened version of clause #7.

flattened_hasCat(a, underscore, 0.15526790709731605) :-  /* #neg=5 #pos=49 */ 
   link(a, uniqueVar81),
   link(uniqueVar81, underscore),
   !. // Flattened version of clause #8.

flattened_hasCat(underscore, underscore, 0.13903479618855907) :-  /* #neg=90 #pos=767 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   link(uniqueVar73, uniqueVar72)
%   link(uniqueVar79, a)
%   link(uniqueVar74, uniqueVar75)
%   link(underscore, uniqueVar77)
%   link(uniqueVar70, uniqueVar71)
%   link(uniqueVar80, underscore)
%   link(underscore, a)
%   link(underscore, uniqueVar78)
%   link(uniqueVar77, uniqueVar76)
%   link(uniqueVar78, a)
%   link(a, uniqueVar81)
%   link(uniqueVar71, uniqueVar70)
%   link(uniqueVar74, a)
%   link(underscore, uniqueVar73)
%   link(a, uniqueVar75)
%   link(uniqueVar70, a)
%   link(uniqueVar72, a)
%   link(uniqueVar81, underscore)
%   link(uniqueVar79, uniqueVar80)
%   link(a, uniqueVar76)

%%%%%  WILL-Produced Tree #9 @ 0:02:35 10/21/22.  %%%%%

% FOR hasCat(A, B):
%   if ( link(C, A), link(C, D), link(D, C) )
%   then return 0.15571369469862575;  // std dev = 0,963, 41,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   else if ( link(E, A), link(E, F), link(F, A) )
%   | then return 0.08520059935957902;  // std dev = 3,398, 86,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=72 */
%   | else if ( link(A, G), link(G, H), link(H, I) )
%   | | then return 0.0974505802127967;  // std dev = 2,908, 68,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=58 */
%   | | else if ( link(A, J) )
%   | | | then if ( link(K, A) )
%   | | | | then return 0.11947493438199494;  // std dev = 0,289, 140,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=127 */
%   | | | | else if ( link(L, J), link(M, L) )
%   | | | | | then return 0.09746369470349923;  // std dev = 3,689, 108,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=92 */
%   | | | | | else if ( link(J, N) )
%   | | | | | | then return 0.15460178780891942;  // std dev = 1,373, 35,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | | | | | else return 0.10621113876769889;  // std dev = 5,393, 278,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=245 */
%   | | | else if ( link(P, A) )
%   | | | | then return 0.11179191044007208;  // std dev = 0,319, 528,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=467 */
%   | | | | else return 0.11819296604100803;  // std dev = 0,298, 579,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=522 */


% Clauses:

hasCat(A, B, 0.15571369469862575) :- 
     link(C, A), 
     link(C, D), 
     link(D, C), 
     !. // Clause #1.

hasCat(A, B, 0.08520059935957902) :- 
     link(C, A), 
     link(C, D), 
     link(D, A), 
     !. // Clause #2.

hasCat(A, B, 0.0974505802127967) :- 
     link(A, C), 
     link(C, D), 
     link(D, E), 
     !. // Clause #3.

hasCat(A, B, 0.11947493438199494) :- 
     link(A, C), 
     link(D, A), 
     !. // Clause #4.

hasCat(A, B, 0.09746369470349923) :- 
     link(A, C), 
     link(D, C), 
     link(E, D), 
     !. // Clause #5.

hasCat(A, B, 0.15460178780891942) :- 
     link(A, C), 
     link(C, D), 
     !. // Clause #6.

hasCat(A, B, 0.10621113876769889) :- 
     link(A, C), 
     !. // Clause #7.

hasCat(A, B, 0.11179191044007208) :- 
     link(C, A), 
     !. // Clause #8.

hasCat(A, B, 0.11819296604100803) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_hasCat(a, underscore, 0.15571369469862575) :-  /* #neg=1 #pos=40 */ 
   link(uniqueVar82, a),
   link(uniqueVar82, uniqueVar83),
   link(uniqueVar83, uniqueVar82),
   !. // Flattened version of clause #1.

flattened_hasCat(a, underscore, 0.08520059935957902) :-  /* #neg=14 #pos=72 */ 
   link(uniqueVar84, a),
   link(uniqueVar84, uniqueVar85),
   link(uniqueVar85, a),
   !. // Flattened version of clause #2.

flattened_hasCat(a, underscore, 0.0974505802127967) :-  /* #neg=10 #pos=58 */ 
   link(a, uniqueVar86),
   link(uniqueVar86, uniqueVar87),
   link(uniqueVar87, underscore),
   !. // Flattened version of clause #3.

flattened_hasCat(a, underscore, 0.11947493438199494) :-  /* #neg=13 #pos=127 */ 
   link(a, underscore),
   link(underscore, a),
   !. // Flattened version of clause #4.

flattened_hasCat(a, underscore, 0.09746369470349923) :-  /* #neg=16 #pos=92 */ 
   link(a, uniqueVar88),
   link(uniqueVar89, uniqueVar88),
   link(underscore, uniqueVar89),
   !. // Flattened version of clause #5.

flattened_hasCat(a, underscore, 0.15460178780891942) :-  /* #neg=2 #pos=33 */ 
   link(a, uniqueVar90),
   link(uniqueVar90, underscore),
   !. // Flattened version of clause #6.

flattened_hasCat(a, underscore, 0.10621113876769889) :-  /* #neg=33 #pos=245 */ 
   link(a, underscore),
   !. // Flattened version of clause #7.

flattened_hasCat(a, underscore, 0.11179191044007208) :-  /* #neg=61 #pos=467 */ 
   link(underscore, a),
   !. // Flattened version of clause #8.

flattened_hasCat(underscore, underscore, 0.11819296604100803) :-  /* #neg=57 #pos=522 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   link(uniqueVar89, uniqueVar88)
%   link(underscore, a)
%   link(uniqueVar86, uniqueVar87)
%   link(underscore, uniqueVar89)
%   link(uniqueVar84, uniqueVar85)
%   link(uniqueVar85, a)
%   link(uniqueVar87, underscore)
%   link(uniqueVar84, a)
%   link(uniqueVar82, uniqueVar83)
%   link(a, uniqueVar88)
%   link(uniqueVar90, underscore)
%   link(uniqueVar82, a)
%   link(a, uniqueVar86)
%   link(a, underscore)
%   link(a, uniqueVar90)
%   link(uniqueVar83, uniqueVar82)

%%%%%  WILL-Produced Tree #10 @ 0:02:38 10/21/22.  %%%%%

% FOR hasCat(A, B):
%   if ( link(A, C), link(D, C), link(E, D) )
%   then return 0.0960365357937607;  // std dev = 5,755, 345,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=307 */
%   else if ( link(F, A) )
%   | then if ( link(G, F), link(H, G) )
%   | | then return 0.06792229206573211;  // std dev = 3,267, 80,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=67 */
%   | | else if ( link(I, F) )
%   | | | then if ( link(I, A) )
%   | | | | then return 0.0932058499320608;  // std dev = 1,867, 31,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | | | else return 0.11102306656837209;  // std dev = 0,265, 79,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=73 */
%   | | | else if ( link(F, J), link(J, K) )
%   | | | | then return 0.08980717025577337;  // std dev = 3,750, 132,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=116 */
%   | | | | else return 0.08885719348017855;  // std dev = 0,328, 285,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=250 */
%   | else if ( link(A, L) )
%   | | then if ( link(L, M) )
%   | | | then return 0.10549361020638953;  // std dev = 0,288, 54,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=49 */
%   | | | else return 0.08823749746547081;  // std dev = 0,323, 278,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=245 */
%   | | else return 0.09880671000540946;  // std dev = 0,298, 579,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=522 */


% Clauses:

hasCat(A, B, 0.0960365357937607) :- 
     link(A, C), 
     link(D, C), 
     link(E, D), 
     !. // Clause #1.

hasCat(A, B, 0.06792229206573211) :- 
     link(C, A), 
     link(D, C), 
     link(E, D), 
     !. // Clause #2.

hasCat(A, B, 0.0932058499320608) :- 
     link(C, A), 
     link(D, C), 
     link(D, A), 
     !. // Clause #3.

hasCat(A, B, 0.11102306656837209) :- 
     link(C, A), 
     link(D, C), 
     !. // Clause #4.

hasCat(A, B, 0.08980717025577337) :- 
     link(C, A), 
     link(C, D), 
     link(D, E), 
     !. // Clause #5.

hasCat(A, B, 0.08885719348017855) :- 
     link(C, A), 
     !. // Clause #6.

hasCat(A, B, 0.10549361020638953) :- 
     link(A, C), 
     link(C, D), 
     !. // Clause #7.

hasCat(A, B, 0.08823749746547081) :- 
     link(A, C), 
     !. // Clause #8.

hasCat(A, B, 0.09880671000540946) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_hasCat(a, underscore, 0.0960365357937607) :-  /* #neg=38 #pos=307 */ 
   link(a, uniqueVar91),
   link(uniqueVar92, uniqueVar91),
   link(underscore, uniqueVar92),
   !. // Flattened version of clause #1.

flattened_hasCat(a, underscore, 0.06792229206573211) :-  /* #neg=13 #pos=67 */ 
   link(uniqueVar93, a),
   link(uniqueVar94, uniqueVar93),
   link(underscore, uniqueVar94),
   !. // Flattened version of clause #2.

flattened_hasCat(a, underscore, 0.0932058499320608) :-  /* #neg=4 #pos=27 */ 
   link(uniqueVar95, a),
   link(uniqueVar96, uniqueVar95),
   link(uniqueVar96, a),
   !. // Flattened version of clause #3.

flattened_hasCat(a, underscore, 0.11102306656837209) :-  /* #neg=6 #pos=73 */ 
   link(uniqueVar97, a),
   link(underscore, uniqueVar97),
   !. // Flattened version of clause #4.

flattened_hasCat(a, underscore, 0.08980717025577337) :-  /* #neg=16 #pos=116 */ 
   link(uniqueVar98, a),
   link(uniqueVar98, uniqueVar99),
   link(uniqueVar99, underscore),
   !. // Flattened version of clause #5.

flattened_hasCat(a, underscore, 0.08885719348017855) :-  /* #neg=35 #pos=250 */ 
   link(underscore, a),
   !. // Flattened version of clause #6.

flattened_hasCat(a, underscore, 0.10549361020638953) :-  /* #neg=5 #pos=49 */ 
   link(a, uniqueVar100),
   link(uniqueVar100, underscore),
   !. // Flattened version of clause #7.

flattened_hasCat(a, underscore, 0.08823749746547081) :-  /* #neg=33 #pos=245 */ 
   link(a, underscore),
   !. // Flattened version of clause #8.

flattened_hasCat(underscore, underscore, 0.09880671000540946) :-  /* #neg=57 #pos=522 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   link(underscore, uniqueVar94)
%   link(uniqueVar99, underscore)
%   link(uniqueVar92, uniqueVar91)
%   link(underscore, a)
%   link(underscore, uniqueVar97)
%   link(uniqueVar95, a)
%   link(underscore, uniqueVar92)
%   link(uniqueVar98, a)
%   link(uniqueVar98, uniqueVar99)
%   link(a, uniqueVar91)
%   link(uniqueVar100, underscore)
%   link(uniqueVar93, a)
%   link(uniqueVar96, uniqueVar95)
%   link(uniqueVar96, a)
%   link(uniqueVar97, a)
%   link(uniqueVar94, uniqueVar93)
%   link(a, underscore)
%   link(a, uniqueVar100)


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for hasCat.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).
stepLength_tree2(1.0).
stepLength_tree3(1.0).
stepLength_tree4(1.0).
stepLength_tree5(1.0).
stepLength_tree6(1.0).
stepLength_tree7(1.0).
stepLength_tree8(1.0).
stepLength_tree9(1.0).
stepLength_tree10(1.0).

logPrior(-1.8).
hasCat(A, B, Total) :- // A general accessor. 
   hasCat(A, B, 1000000, Total), !.
hasCat(A, B, Total) :- waitHere("This should not fail", hasCat(A, B, Total)).

hasCat(A, B, TreesToUse, Total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(LogPrior),
   getScore_hasCat_tree1(A, B, TreesToUse, Total1),
   getScore_hasCat_tree2(A, B, TreesToUse, Total2),
   getScore_hasCat_tree3(A, B, TreesToUse, Total3),
   getScore_hasCat_tree4(A, B, TreesToUse, Total4),
   getScore_hasCat_tree5(A, B, TreesToUse, Total5),
   getScore_hasCat_tree6(A, B, TreesToUse, Total6),
   getScore_hasCat_tree7(A, B, TreesToUse, Total7),
   getScore_hasCat_tree8(A, B, TreesToUse, Total8),
   getScore_hasCat_tree9(A, B, TreesToUse, Total9),
   getScore_hasCat_tree10(A, B, TreesToUse, Total10),
   Total is LogPrior + Total1 + Total2 + Total3 + Total4 + Total5 + Total6 + Total7 + Total8 + Total9 + Total10,
   !.
hasCat(A, B, TreesToUse, Total) :- waitHere("This should not fail", hasCat(A, B, TreesToUse, Total)).

getScore_hasCat_tree1(A, B, TreesToUse, 0.0) :- 1 > TreesToUse, !.
getScore_hasCat_tree1(A, B, TreesToUse, Total1) :- hasCat_tree1(A, B, Total), stepLength_tree1(StepLen), Total1 is Total * StepLen.

getScore_hasCat_tree2(A, B, TreesToUse, 0.0) :- 2 > TreesToUse, !.
getScore_hasCat_tree2(A, B, TreesToUse, Total2) :- hasCat_tree2(A, B, Total), stepLength_tree2(StepLen), Total2 is Total * StepLen.

getScore_hasCat_tree3(A, B, TreesToUse, 0.0) :- 3 > TreesToUse, !.
getScore_hasCat_tree3(A, B, TreesToUse, Total3) :- hasCat_tree3(A, B, Total), stepLength_tree3(StepLen), Total3 is Total * StepLen.

getScore_hasCat_tree4(A, B, TreesToUse, 0.0) :- 4 > TreesToUse, !.
getScore_hasCat_tree4(A, B, TreesToUse, Total4) :- hasCat_tree4(A, B, Total), stepLength_tree4(StepLen), Total4 is Total * StepLen.

getScore_hasCat_tree5(A, B, TreesToUse, 0.0) :- 5 > TreesToUse, !.
getScore_hasCat_tree5(A, B, TreesToUse, Total5) :- hasCat_tree5(A, B, Total), stepLength_tree5(StepLen), Total5 is Total * StepLen.

getScore_hasCat_tree6(A, B, TreesToUse, 0.0) :- 6 > TreesToUse, !.
getScore_hasCat_tree6(A, B, TreesToUse, Total6) :- hasCat_tree6(A, B, Total), stepLength_tree6(StepLen), Total6 is Total * StepLen.

getScore_hasCat_tree7(A, B, TreesToUse, 0.0) :- 7 > TreesToUse, !.
getScore_hasCat_tree7(A, B, TreesToUse, Total7) :- hasCat_tree7(A, B, Total), stepLength_tree7(StepLen), Total7 is Total * StepLen.

getScore_hasCat_tree8(A, B, TreesToUse, 0.0) :- 8 > TreesToUse, !.
getScore_hasCat_tree8(A, B, TreesToUse, Total8) :- hasCat_tree8(A, B, Total), stepLength_tree8(StepLen), Total8 is Total * StepLen.

getScore_hasCat_tree9(A, B, TreesToUse, 0.0) :- 9 > TreesToUse, !.
getScore_hasCat_tree9(A, B, TreesToUse, Total9) :- hasCat_tree9(A, B, Total), stepLength_tree9(StepLen), Total9 is Total * StepLen.

getScore_hasCat_tree10(A, B, TreesToUse, 0.0) :- 10 > TreesToUse, !.
getScore_hasCat_tree10(A, B, TreesToUse, Total10) :- hasCat_tree10(A, B, Total), stepLength_tree10(StepLen), Total10 is Total * StepLen.

flattenedLiteralsInThisSetOfTrees(hasCat, 161, [
   link(a, uniqueVar4),
   link(uniqueVar44, a),
   link(uniqueVar67, a),
   link(underscore, uniqueVar97),
   link(uniqueVar39, a),
   link(uniqueVar55, underscore),
   link(underscore, uniqueVar92),
   link(uniqueVar8, a),
   link(uniqueVar45, underscore),
   link(uniqueVar72, a),
   link(a, uniqueVar33),
   link(a, uniqueVar64),
   link(uniqueVar87, underscore),
   link(underscore, uniqueVar57),
   link(uniqueVar93, a),
   link(uniqueVar97, a),
   link(uniqueVar67, uniqueVar66),
   link(a, uniqueVar86),
   link(uniqueVar5, underscore),
   link(a, uniqueVar35),
   link(uniqueVar2, a),
   link(uniqueVar54, uniqueVar55),
   link(underscore, uniqueVar43),
   link(uniqueVar33, uniqueVar34),
   link(underscore, uniqueVar78),
   link(uniqueVar63, uniqueVar62),
   link(uniqueVar56, underscore),
   link(uniqueVar95, a),
   link(uniqueVar98, a),
   link(uniqueVar21, uniqueVar22),
   link(a, uniqueVar34),
   link(a, uniqueVar75),
   link(uniqueVar79, uniqueVar80),
   link(underscore, uniqueVar28),
   link(uniqueVar82, a),
   link(a, uniqueVar90),
   link(underscore, uniqueVar10),
   link(uniqueVar57, a),
   link(uniqueVar99, underscore),
   link(uniqueVar23, uniqueVar24),
   link(uniqueVar47, uniqueVar48),
   link(uniqueVar78, a),
   link(underscore, uniqueVar8),
   link(uniqueVar29, uniqueVar30),
   link(underscore, uniqueVar73),
   link(a, uniqueVar23),
   link(uniqueVar7, uniqueVar6),
   link(uniqueVar44, uniqueVar45),
   link(uniqueVar81, underscore),
   link(uniqueVar11, uniqueVar12),
   link(a, uniqueVar54),
   link(uniqueVar58, uniqueVar59),
   link(uniqueVar94, uniqueVar93),
   link(uniqueVar53, underscore),
   link(uniqueVar17, uniqueVar18),
   link(a, uniqueVar9),
   link(uniqueVar74, uniqueVar75),
   link(a, uniqueVar56),
   link(a, uniqueVar68),
   link(a, uniqueVar41),
   link(uniqueVar35, uniqueVar36),
   link(uniqueVar2, uniqueVar1),
   link(uniqueVar71, uniqueVar70),
   link(underscore, uniqueVar50),
   link(uniqueVar74, a),
   link(a, uniqueVar37),
   link(underscore, uniqueVar14),
   link(uniqueVar19, uniqueVar20),
   link(uniqueVar100, underscore),
   link(uniqueVar29, a),
   link(a, uniqueVar1),
   link(uniqueVar40, a),
   link(uniqueVar82, uniqueVar83),
   link(uniqueVar96, uniqueVar95),
   link(uniqueVar59, uniqueVar58),
   link(uniqueVar32, uniqueVar31),
   link(underscore, uniqueVar16),
   link(a, uniqueVar100),
   link(a, uniqueVar76),
   link(uniqueVar89, uniqueVar88),
   link(a, uniqueVar15),
   link(a, uniqueVar21),
   link(uniqueVar11, a),
   link(underscore, a),
   link(uniqueVar37, underscore),
   link(uniqueVar80, underscore),
   link(a, uniqueVar25),
   link(uniqueVar77, uniqueVar76),
   link(uniqueVar84, uniqueVar85),
   link(uniqueVar39, uniqueVar40),
   link(uniqueVar49, a),
   link(uniqueVar10, uniqueVar9),
   link(uniqueVar85, a),
   link(a, uniqueVar24),
   link(a, uniqueVar53),
   link(uniqueVar22, underscore),
   link(uniqueVar20, uniqueVar19),
   link(uniqueVar79, a),
   link(a, uniqueVar38),
   link(uniqueVar27, uniqueVar26),
   link(uniqueVar51, uniqueVar52),
   link(a, uniqueVar81),
   link(uniqueVar46, underscore),
   link(a, uniqueVar65),
   link(uniqueVar32, a),
   link(uniqueVar98, uniqueVar99),
   link(uniqueVar18, underscore),
   link(uniqueVar43, a),
   link(uniqueVar28, a),
   link(a, uniqueVar13),
   link(a, uniqueVar88),
   link(uniqueVar50, uniqueVar49),
   link(uniqueVar65, uniqueVar64),
   link(uniqueVar69, uniqueVar68),
   link(uniqueVar60, uniqueVar61),
   link(uniqueVar17, a),
   link(underscore, uniqueVar94),
   link(uniqueVar12, a),
   link(uniqueVar14, uniqueVar13),
   link(uniqueVar19, a),
   link(a, uniqueVar31),
   link(underscore, uniqueVar77),
   link(uniqueVar16, a),
   link(uniqueVar62, a),
   link(underscore, uniqueVar63),
   link(a, uniqueVar48),
   link(underscore, uniqueVar27),
   link(uniqueVar42, uniqueVar41),
   link(uniqueVar47, a),
   link(uniqueVar58, a),
   link(uniqueVar15, underscore),
   link(a, uniqueVar91),
   link(uniqueVar4, uniqueVar5),
   link(uniqueVar30, uniqueVar29),
   link(uniqueVar70, a),
   link(uniqueVar25, underscore),
   link(a, uniqueVar51),
   link(uniqueVar84, a),
   link(a, uniqueVar66),
   link(uniqueVar6, a),
   link(uniqueVar36, uniqueVar35),
   link(uniqueVar38, underscore),
   link(underscore, uniqueVar42),
   link(uniqueVar73, uniqueVar72),
   link(uniqueVar7, a),
   link(underscore, uniqueVar69),
   link(uniqueVar92, uniqueVar91),
   link(a, uniqueVar46),
   link(uniqueVar61, underscore),
   link(uniqueVar70, uniqueVar71),
   link(uniqueVar86, uniqueVar87),
   link(underscore, uniqueVar89),
   link(a, uniqueVar3),
   link(uniqueVar3, a),
   link(a, uniqueVar60),
   link(uniqueVar26, a),
   link(uniqueVar52, uniqueVar51),
   link(uniqueVar96, a),
   link(uniqueVar90, underscore),
   link(a, underscore),
   link(uniqueVar83, uniqueVar82)]).
